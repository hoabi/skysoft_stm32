   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f10x_rcc.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.data
  19              		.align	2
  22              	APBAHBPrescTable:
  23 0000 00       		.byte	0
  24 0001 00       		.byte	0
  25 0002 00       		.byte	0
  26 0003 00       		.byte	0
  27 0004 01       		.byte	1
  28 0005 02       		.byte	2
  29 0006 03       		.byte	3
  30 0007 04       		.byte	4
  31 0008 01       		.byte	1
  32 0009 02       		.byte	2
  33 000a 03       		.byte	3
  34 000b 04       		.byte	4
  35 000c 06       		.byte	6
  36 000d 07       		.byte	7
  37 000e 08       		.byte	8
  38 000f 09       		.byte	9
  39              		.align	2
  42              	ADCPrescTable:
  43 0010 02       		.byte	2
  44 0011 04       		.byte	4
  45 0012 06       		.byte	6
  46 0013 08       		.byte	8
  47              		.text
  48              		.align	2
  49              		.global	RCC_DeInit
  50              		.thumb
  51              		.thumb_func
  53              	RCC_DeInit:
  54              	.LFB55:
  55              		.file 1 "../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c"
   1:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
   2:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   ******************************************************************************
   3:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @file    stm32f10x_rcc.c
   4:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @author  MCD Application Team
   5:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @version V3.6.1
   6:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @date    05-March-2012
   7:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief   This file provides all the RCC firmware functions.
   8:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   ******************************************************************************
   9:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @attention
  10:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *
  11:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * <h2><center>&copy; COPYRIGHT 2012 STMicroelectronics</center></h2>
  12:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *
  13:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  14:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * You may not use this file except in compliance with the License.
  15:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * You may obtain a copy of the License at:
  16:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *
  17:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  18:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *
  19:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * Unless required by applicable law or agreed to in writing, software 
  20:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  21:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  22:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * See the License for the specific language governing permissions and
  23:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * limitations under the License.
  24:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *
  25:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   ******************************************************************************
  26:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
  27:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  28:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* Includes ------------------------------------------------------------------*/
  29:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #include "stm32f10x_rcc.h"
  30:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  31:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /** @addtogroup STM32F10x_StdPeriph_Driver
  32:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @{
  33:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
  34:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  35:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /** @defgroup RCC 
  36:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief RCC driver modules
  37:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @{
  38:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */ 
  39:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  40:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_TypesDefinitions
  41:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @{
  42:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
  43:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  44:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
  45:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @}
  46:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
  47:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  48:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_Defines
  49:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @{
  50:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
  51:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  52:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* ------------ RCC registers bit address in the alias region ----------- */
  53:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define RCC_OFFSET                (RCC_BASE - PERIPH_BASE)
  54:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  55:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* --- CR Register ---*/
  56:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  57:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* Alias word address of HSION bit */
  58:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CR_OFFSET                 (RCC_OFFSET + 0x00)
  59:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define HSION_BitNumber           0x00
  60:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CR_HSION_BB               (PERIPH_BB_BASE + (CR_OFFSET * 32) + (HSION_BitNumber * 4))
  61:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  62:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* Alias word address of PLLON bit */
  63:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define PLLON_BitNumber           0x18
  64:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CR_PLLON_BB               (PERIPH_BB_BASE + (CR_OFFSET * 32) + (PLLON_BitNumber * 4))
  65:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  66:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
  67:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  /* Alias word address of PLL2ON bit */
  68:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define PLL2ON_BitNumber          0x1A
  69:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CR_PLL2ON_BB              (PERIPH_BB_BASE + (CR_OFFSET * 32) + (PLL2ON_BitNumber * 4))
  70:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  71:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  /* Alias word address of PLL3ON bit */
  72:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define PLL3ON_BitNumber          0x1C
  73:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CR_PLL3ON_BB              (PERIPH_BB_BASE + (CR_OFFSET * 32) + (PLL3ON_BitNumber * 4))
  74:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
  75:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  76:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* Alias word address of CSSON bit */
  77:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CSSON_BitNumber           0x13
  78:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CR_CSSON_BB               (PERIPH_BB_BASE + (CR_OFFSET * 32) + (CSSON_BitNumber * 4))
  79:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  80:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* --- CFGR Register ---*/
  81:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  82:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* Alias word address of USBPRE bit */
  83:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_OFFSET               (RCC_OFFSET + 0x04)
  84:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  85:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifndef STM32F10X_CL
  86:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define USBPRE_BitNumber          0x16
  87:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR_USBPRE_BB            (PERIPH_BB_BASE + (CFGR_OFFSET * 32) + (USBPRE_BitNumber * 4))
  88:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #else
  89:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define OTGFSPRE_BitNumber        0x16
  90:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR_OTGFSPRE_BB          (PERIPH_BB_BASE + (CFGR_OFFSET * 32) + (OTGFSPRE_BitNumber * 4))
  91:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
  92:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  93:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* --- BDCR Register ---*/
  94:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  95:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* Alias word address of RTCEN bit */
  96:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define BDCR_OFFSET               (RCC_OFFSET + 0x20)
  97:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define RTCEN_BitNumber           0x0F
  98:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define BDCR_RTCEN_BB             (PERIPH_BB_BASE + (BDCR_OFFSET * 32) + (RTCEN_BitNumber * 4))
  99:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 100:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* Alias word address of BDRST bit */
 101:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define BDRST_BitNumber           0x10
 102:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define BDCR_BDRST_BB             (PERIPH_BB_BASE + (BDCR_OFFSET * 32) + (BDRST_BitNumber * 4))
 103:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 104:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* --- CSR Register ---*/
 105:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 106:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* Alias word address of LSION bit */
 107:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CSR_OFFSET                (RCC_OFFSET + 0x24)
 108:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define LSION_BitNumber           0x00
 109:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CSR_LSION_BB              (PERIPH_BB_BASE + (CSR_OFFSET * 32) + (LSION_BitNumber * 4))
 110:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 111:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
 112:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* --- CFGR2 Register ---*/
 113:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 114:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  /* Alias word address of I2S2SRC bit */
 115:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR2_OFFSET              (RCC_OFFSET + 0x2C)
 116:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define I2S2SRC_BitNumber         0x11
 117:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR2_I2S2SRC_BB          (PERIPH_BB_BASE + (CFGR2_OFFSET * 32) + (I2S2SRC_BitNumber * 4))
 118:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 119:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  /* Alias word address of I2S3SRC bit */
 120:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define I2S3SRC_BitNumber         0x12
 121:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR2_I2S3SRC_BB          (PERIPH_BB_BASE + (CFGR2_OFFSET * 32) + (I2S3SRC_BitNumber * 4))
 122:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */
 123:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 124:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* ---------------------- RCC registers bit mask ------------------------ */
 125:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 126:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* CR register bit mask */
 127:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CR_HSEBYP_Reset           ((uint32_t)0xFFFBFFFF)
 128:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CR_HSEBYP_Set             ((uint32_t)0x00040000)
 129:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CR_HSEON_Reset            ((uint32_t)0xFFFEFFFF)
 130:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CR_HSEON_Set              ((uint32_t)0x00010000)
 131:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CR_HSITRIM_Mask           ((uint32_t)0xFFFFFF07)
 132:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 133:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* CFGR register bit mask */
 134:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL) || defined 
 135:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR_PLL_Mask            ((uint32_t)0xFFC2FFFF)
 136:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #else
 137:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR_PLL_Mask            ((uint32_t)0xFFC0FFFF)
 138:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
 139:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 140:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_PLLMull_Mask         ((uint32_t)0x003C0000)
 141:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_PLLSRC_Mask          ((uint32_t)0x00010000)
 142:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_PLLXTPRE_Mask        ((uint32_t)0x00020000)
 143:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_SWS_Mask             ((uint32_t)0x0000000C)
 144:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_SW_Mask              ((uint32_t)0xFFFFFFFC)
 145:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_HPRE_Reset_Mask      ((uint32_t)0xFFFFFF0F)
 146:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_HPRE_Set_Mask        ((uint32_t)0x000000F0)
 147:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_PPRE1_Reset_Mask     ((uint32_t)0xFFFFF8FF)
 148:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_PPRE1_Set_Mask       ((uint32_t)0x00000700)
 149:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_PPRE2_Reset_Mask     ((uint32_t)0xFFFFC7FF)
 150:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_PPRE2_Set_Mask       ((uint32_t)0x00003800)
 151:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_ADCPRE_Reset_Mask    ((uint32_t)0xFFFF3FFF)
 152:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_ADCPRE_Set_Mask      ((uint32_t)0x0000C000)
 153:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 154:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* CSR register bit mask */
 155:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CSR_RMVF_Set              ((uint32_t)0x01000000)
 156:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 157:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL) || defined 
 158:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* CFGR2 register bit mask */
 159:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR2_PREDIV1SRC         ((uint32_t)0x00010000)
 160:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR2_PREDIV1            ((uint32_t)0x0000000F)
 161:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif
 162:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
 163:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR2_PREDIV2            ((uint32_t)0x000000F0)
 164:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR2_PLL2MUL            ((uint32_t)0x00000F00)
 165:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR2_PLL3MUL            ((uint32_t)0x0000F000)
 166:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
 167:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 168:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* RCC Flag Mask */
 169:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define FLAG_Mask                 ((uint8_t)0x1F)
 170:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 171:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* CIR register byte 2 (Bits[15:8]) base address */
 172:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CIR_BYTE2_ADDRESS         ((uint32_t)0x40021009)
 173:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 174:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* CIR register byte 3 (Bits[23:16]) base address */
 175:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CIR_BYTE3_ADDRESS         ((uint32_t)0x4002100A)
 176:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 177:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* CFGR register byte 4 (Bits[31:24]) base address */
 178:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_BYTE4_ADDRESS        ((uint32_t)0x40021007)
 179:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 180:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* BDCR register base address */
 181:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define BDCR_ADDRESS              (PERIPH_BASE + BDCR_OFFSET)
 182:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 183:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 184:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @}
 185:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */ 
 186:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 187:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_Macros
 188:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @{
 189:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */ 
 190:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 191:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 192:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @}
 193:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */ 
 194:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 195:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_Variables
 196:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @{
 197:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */ 
 198:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 199:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** static __I uint8_t APBAHBPrescTable[16] = {0, 0, 0, 0, 1, 2, 3, 4, 1, 2, 3, 4, 6, 7, 8, 9};
 200:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** static __I uint8_t ADCPrescTable[4] = {2, 4, 6, 8};
 201:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 202:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 203:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @}
 204:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 205:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 206:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_FunctionPrototypes
 207:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @{
 208:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 209:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 210:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 211:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @}
 212:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 213:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 214:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_Functions
 215:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @{
 216:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 217:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 218:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 219:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Resets the RCC clock configuration to the default reset state.
 220:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  None
 221:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 222:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 223:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_DeInit(void)
 224:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
  56              		.loc 1 224 0
  57              		.cfi_startproc
  58              		@ args = 0, pretend = 0, frame = 0
  59              		@ frame_needed = 1, uses_anonymous_args = 0
  60              		@ link register save eliminated.
  61 0000 80B4     		push	{r7}
  62              	.LCFI0:
  63              		.cfi_def_cfa_offset 4
  64              		.cfi_offset 7, -4
  65 0002 00AF     		add	r7, sp, #0
  66              	.LCFI1:
  67              		.cfi_def_cfa_register 7
 225:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set HSION bit */
 226:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CR |= (uint32_t)0x00000001;
  68              		.loc 1 226 0
  69 0004 134B     		ldr	r3, .L2
  70 0006 134A     		ldr	r2, .L2
  71 0008 1268     		ldr	r2, [r2, #0]
  72 000a 42F00102 		orr	r2, r2, #1
  73 000e 1A60     		str	r2, [r3, #0]
 227:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 228:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset SW, HPRE, PPRE1, PPRE2, ADCPRE and MCO bits */
 229:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifndef STM32F10X_CL
 230:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR &= (uint32_t)0xF8FF0000;
  74              		.loc 1 230 0
  75 0010 104A     		ldr	r2, .L2
  76 0012 104B     		ldr	r3, .L2
  77 0014 5968     		ldr	r1, [r3, #4]
  78 0016 104B     		ldr	r3, .L2+4
  79 0018 0B40     		ands	r3, r3, r1
  80 001a 5360     		str	r3, [r2, #4]
 231:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #else
 232:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR &= (uint32_t)0xF0FF0000;
 233:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */   
 234:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   
 235:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset HSEON, CSSON and PLLON bits */
 236:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CR &= (uint32_t)0xFEF6FFFF;
  81              		.loc 1 236 0
  82 001c 0D4A     		ldr	r2, .L2
  83 001e 0D4B     		ldr	r3, .L2
  84 0020 1B68     		ldr	r3, [r3, #0]
  85 0022 23F08473 		bic	r3, r3, #17301504
  86 0026 23F48033 		bic	r3, r3, #65536
  87 002a 1360     		str	r3, [r2, #0]
 237:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 238:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset HSEBYP bit */
 239:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CR &= (uint32_t)0xFFFBFFFF;
  88              		.loc 1 239 0
  89 002c 094B     		ldr	r3, .L2
  90 002e 094A     		ldr	r2, .L2
  91 0030 1268     		ldr	r2, [r2, #0]
  92 0032 22F48022 		bic	r2, r2, #262144
  93 0036 1A60     		str	r2, [r3, #0]
 240:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 241:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset PLLSRC, PLLXTPRE, PLLMUL and USBPRE/OTGFSPRE bits */
 242:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR &= (uint32_t)0xFF80FFFF;
  94              		.loc 1 242 0
  95 0038 064B     		ldr	r3, .L2
  96 003a 064A     		ldr	r2, .L2
  97 003c 5268     		ldr	r2, [r2, #4]
  98 003e 22F4FE02 		bic	r2, r2, #8323072
  99 0042 5A60     		str	r2, [r3, #4]
 243:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 244:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
 245:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset PLL2ON and PLL3ON bits */
 246:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CR &= (uint32_t)0xEBFFFFFF;
 247:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 248:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Disable all interrupts and clear pending bits  */
 249:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CIR = 0x00FF0000;
 250:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 251:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset CFGR2 register */
 252:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR2 = 0x00000000;
 253:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #elif defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL)
 254:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Disable all interrupts and clear pending bits  */
 255:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CIR = 0x009F0000;
 256:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 257:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset CFGR2 register */
 258:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR2 = 0x00000000;      
 259:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #else
 260:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Disable all interrupts and clear pending bits  */
 261:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CIR = 0x009F0000;
 100              		.loc 1 261 0
 101 0044 034B     		ldr	r3, .L2
 102 0046 4FF41F02 		mov	r2, #10420224
 103 004a 9A60     		str	r2, [r3, #8]
 262:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */
 263:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 264:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 104              		.loc 1 264 0
 105 004c BD46     		mov	sp, r7
 106 004e 80BC     		pop	{r7}
 107 0050 7047     		bx	lr
 108              	.L3:
 109 0052 00BF     		.align	2
 110              	.L2:
 111 0054 00100240 		.word	1073876992
 112 0058 0000FFF8 		.word	-117506048
 113              		.cfi_endproc
 114              	.LFE55:
 116              		.align	2
 117              		.global	RCC_HSEConfig
 118              		.thumb
 119              		.thumb_func
 121              	RCC_HSEConfig:
 122              	.LFB56:
 265:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 266:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 267:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the External High Speed oscillator (HSE).
 268:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   HSE can not be stopped if it is used directly or through the PLL as system clock.
 269:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_HSE: specifies the new state of the HSE.
 270:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 271:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HSE_OFF: HSE oscillator OFF
 272:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HSE_ON: HSE oscillator ON
 273:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HSE_Bypass: HSE oscillator bypassed with external clock
 274:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 275:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 276:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_HSEConfig(uint32_t RCC_HSE)
 277:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 123              		.loc 1 277 0
 124              		.cfi_startproc
 125              		@ args = 0, pretend = 0, frame = 8
 126              		@ frame_needed = 1, uses_anonymous_args = 0
 127              		@ link register save eliminated.
 128 005c 80B4     		push	{r7}
 129              	.LCFI2:
 130              		.cfi_def_cfa_offset 4
 131              		.cfi_offset 7, -4
 132 005e 83B0     		sub	sp, sp, #12
 133              	.LCFI3:
 134              		.cfi_def_cfa_offset 16
 135 0060 00AF     		add	r7, sp, #0
 136              	.LCFI4:
 137              		.cfi_def_cfa_register 7
 138 0062 7860     		str	r0, [r7, #4]
 278:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 279:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_HSE(RCC_HSE));
 280:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset HSEON and HSEBYP bits before configuring the HSE ------------------*/
 281:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset HSEON bit */
 282:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CR &= CR_HSEON_Reset;
 139              		.loc 1 282 0
 140 0064 134B     		ldr	r3, .L10
 141 0066 134A     		ldr	r2, .L10
 142 0068 1268     		ldr	r2, [r2, #0]
 143 006a 22F48032 		bic	r2, r2, #65536
 144 006e 1A60     		str	r2, [r3, #0]
 283:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset HSEBYP bit */
 284:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CR &= CR_HSEBYP_Reset;
 145              		.loc 1 284 0
 146 0070 104B     		ldr	r3, .L10
 147 0072 104A     		ldr	r2, .L10
 148 0074 1268     		ldr	r2, [r2, #0]
 149 0076 22F48022 		bic	r2, r2, #262144
 150 007a 1A60     		str	r2, [r3, #0]
 285:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Configure HSE (RCC_HSE_OFF is already covered by the code section above) */
 286:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   switch(RCC_HSE)
 151              		.loc 1 286 0
 152 007c 7B68     		ldr	r3, [r7, #4]
 153 007e B3F5803F 		cmp	r3, #65536
 154 0082 03D0     		beq	.L6
 155 0084 B3F5802F 		cmp	r3, #262144
 156 0088 07D0     		beq	.L7
 157 008a 0DE0     		b	.L9
 158              	.L6:
 287:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 288:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     case RCC_HSE_ON:
 289:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       /* Set HSEON bit */
 290:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       RCC->CR |= CR_HSEON_Set;
 159              		.loc 1 290 0
 160 008c 094B     		ldr	r3, .L10
 161 008e 094A     		ldr	r2, .L10
 162 0090 1268     		ldr	r2, [r2, #0]
 163 0092 42F48032 		orr	r2, r2, #65536
 164 0096 1A60     		str	r2, [r3, #0]
 291:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;
 165              		.loc 1 291 0
 166 0098 07E0     		b	.L4
 167              	.L7:
 292:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       
 293:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     case RCC_HSE_Bypass:
 294:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       /* Set HSEBYP and HSEON bits */
 295:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       RCC->CR |= CR_HSEBYP_Set | CR_HSEON_Set;
 168              		.loc 1 295 0
 169 009a 064B     		ldr	r3, .L10
 170 009c 054A     		ldr	r2, .L10
 171 009e 1268     		ldr	r2, [r2, #0]
 172 00a0 42F4A022 		orr	r2, r2, #327680
 173 00a4 1A60     		str	r2, [r3, #0]
 296:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;
 174              		.loc 1 296 0
 175 00a6 00E0     		b	.L4
 176              	.L9:
 297:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       
 298:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     default:
 299:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;
 177              		.loc 1 299 0
 178 00a8 00BF     		nop
 179              	.L4:
 300:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
 301:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 180              		.loc 1 301 0
 181 00aa 07F10C07 		add	r7, r7, #12
 182 00ae BD46     		mov	sp, r7
 183 00b0 80BC     		pop	{r7}
 184 00b2 7047     		bx	lr
 185              	.L11:
 186              		.align	2
 187              	.L10:
 188 00b4 00100240 		.word	1073876992
 189              		.cfi_endproc
 190              	.LFE56:
 192              		.align	2
 193              		.global	RCC_WaitForHSEStartUp
 194              		.thumb
 195              		.thumb_func
 197              	RCC_WaitForHSEStartUp:
 198              	.LFB57:
 302:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 303:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 304:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Waits for HSE start-up.
 305:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  None
 306:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval An ErrorStatus enumuration value:
 307:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * - SUCCESS: HSE oscillator is stable and ready to use
 308:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * - ERROR: HSE oscillator not yet ready
 309:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 310:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** ErrorStatus RCC_WaitForHSEStartUp(void)
 311:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 199              		.loc 1 311 0
 200              		.cfi_startproc
 201              		@ args = 0, pretend = 0, frame = 8
 202              		@ frame_needed = 1, uses_anonymous_args = 0
 203 00b8 80B5     		push	{r7, lr}
 204              	.LCFI5:
 205              		.cfi_def_cfa_offset 8
 206              		.cfi_offset 7, -8
 207              		.cfi_offset 14, -4
 208 00ba 82B0     		sub	sp, sp, #8
 209              	.LCFI6:
 210              		.cfi_def_cfa_offset 16
 211 00bc 00AF     		add	r7, sp, #0
 212              	.LCFI7:
 213              		.cfi_def_cfa_register 7
 312:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   __IO uint32_t StartUpCounter = 0;
 214              		.loc 1 312 0
 215 00be 4FF00003 		mov	r3, #0
 216 00c2 3B60     		str	r3, [r7, #0]
 313:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   ErrorStatus status = ERROR;
 217              		.loc 1 313 0
 218 00c4 4FF00003 		mov	r3, #0
 219 00c8 FB71     		strb	r3, [r7, #7]
 314:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   FlagStatus HSEStatus = RESET;
 220              		.loc 1 314 0
 221 00ca 4FF00003 		mov	r3, #0
 222 00ce BB71     		strb	r3, [r7, #6]
 223              	.L14:
 315:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   
 316:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 317:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   do
 318:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 319:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     HSEStatus = RCC_GetFlagStatus(RCC_FLAG_HSERDY);
 224              		.loc 1 319 0 discriminator 1
 225 00d0 4FF03100 		mov	r0, #49
 226 00d4 FFF7FEFF 		bl	RCC_GetFlagStatus
 227 00d8 0346     		mov	r3, r0
 228 00da BB71     		strb	r3, [r7, #6]
 320:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     StartUpCounter++;  
 229              		.loc 1 320 0 discriminator 1
 230 00dc 3B68     		ldr	r3, [r7, #0]
 231 00de 03F10103 		add	r3, r3, #1
 232 00e2 3B60     		str	r3, [r7, #0]
 321:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   } while((StartUpCounter != HSE_STARTUP_TIMEOUT) && (HSEStatus == RESET));
 233              		.loc 1 321 0 discriminator 1
 234 00e4 3B68     		ldr	r3, [r7, #0]
 235 00e6 B3F5A06F 		cmp	r3, #1280
 236 00ea 02D0     		beq	.L13
 237 00ec BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 238 00ee 002B     		cmp	r3, #0
 239 00f0 EED0     		beq	.L14
 240              	.L13:
 322:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   
 323:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if (RCC_GetFlagStatus(RCC_FLAG_HSERDY) != RESET)
 241              		.loc 1 323 0
 242 00f2 4FF03100 		mov	r0, #49
 243 00f6 FFF7FEFF 		bl	RCC_GetFlagStatus
 244 00fa 0346     		mov	r3, r0
 245 00fc 002B     		cmp	r3, #0
 246 00fe 03D0     		beq	.L15
 324:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 325:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     status = SUCCESS;
 247              		.loc 1 325 0
 248 0100 4FF00103 		mov	r3, #1
 249 0104 FB71     		strb	r3, [r7, #7]
 250 0106 02E0     		b	.L16
 251              	.L15:
 326:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
 327:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else
 328:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 329:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     status = ERROR;
 252              		.loc 1 329 0
 253 0108 4FF00003 		mov	r3, #0
 254 010c FB71     		strb	r3, [r7, #7]
 255              	.L16:
 330:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }  
 331:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   return (status);
 256              		.loc 1 331 0
 257 010e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 332:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 258              		.loc 1 332 0
 259 0110 1846     		mov	r0, r3
 260 0112 07F10807 		add	r7, r7, #8
 261 0116 BD46     		mov	sp, r7
 262 0118 80BD     		pop	{r7, pc}
 263              		.cfi_endproc
 264              	.LFE57:
 266 011a 00BF     		.align	2
 267              		.global	RCC_AdjustHSICalibrationValue
 268              		.thumb
 269              		.thumb_func
 271              	RCC_AdjustHSICalibrationValue:
 272              	.LFB58:
 333:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 334:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 335:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Adjusts the Internal High Speed oscillator (HSI) calibration value.
 336:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  HSICalibrationValue: specifies the calibration trimming value.
 337:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter must be a number between 0 and 0x1F.
 338:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 339:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 340:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_AdjustHSICalibrationValue(uint8_t HSICalibrationValue)
 341:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 273              		.loc 1 341 0
 274              		.cfi_startproc
 275              		@ args = 0, pretend = 0, frame = 16
 276              		@ frame_needed = 1, uses_anonymous_args = 0
 277              		@ link register save eliminated.
 278 011c 80B4     		push	{r7}
 279              	.LCFI8:
 280              		.cfi_def_cfa_offset 4
 281              		.cfi_offset 7, -4
 282 011e 85B0     		sub	sp, sp, #20
 283              	.LCFI9:
 284              		.cfi_def_cfa_offset 24
 285 0120 00AF     		add	r7, sp, #0
 286              	.LCFI10:
 287              		.cfi_def_cfa_register 7
 288 0122 0346     		mov	r3, r0
 289 0124 FB71     		strb	r3, [r7, #7]
 342:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 290              		.loc 1 342 0
 291 0126 4FF00003 		mov	r3, #0
 292 012a FB60     		str	r3, [r7, #12]
 343:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 344:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_CALIBRATION_VALUE(HSICalibrationValue));
 345:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CR;
 293              		.loc 1 345 0
 294 012c 0A4B     		ldr	r3, .L19
 295 012e 1B68     		ldr	r3, [r3, #0]
 296 0130 FB60     		str	r3, [r7, #12]
 346:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear HSITRIM[4:0] bits */
 347:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= CR_HSITRIM_Mask;
 297              		.loc 1 347 0
 298 0132 FB68     		ldr	r3, [r7, #12]
 299 0134 23F0F803 		bic	r3, r3, #248
 300 0138 FB60     		str	r3, [r7, #12]
 348:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set the HSITRIM[4:0] bits according to HSICalibrationValue value */
 349:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= (uint32_t)HSICalibrationValue << 3;
 301              		.loc 1 349 0
 302 013a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 303 013c 4FEAC303 		lsl	r3, r3, #3
 304 0140 FA68     		ldr	r2, [r7, #12]
 305 0142 1343     		orrs	r3, r3, r2
 306 0144 FB60     		str	r3, [r7, #12]
 350:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 351:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CR = tmpreg;
 307              		.loc 1 351 0
 308 0146 044B     		ldr	r3, .L19
 309 0148 FA68     		ldr	r2, [r7, #12]
 310 014a 1A60     		str	r2, [r3, #0]
 352:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 311              		.loc 1 352 0
 312 014c 07F11407 		add	r7, r7, #20
 313 0150 BD46     		mov	sp, r7
 314 0152 80BC     		pop	{r7}
 315 0154 7047     		bx	lr
 316              	.L20:
 317 0156 00BF     		.align	2
 318              	.L19:
 319 0158 00100240 		.word	1073876992
 320              		.cfi_endproc
 321              	.LFE58:
 323              		.align	2
 324              		.global	RCC_HSICmd
 325              		.thumb
 326              		.thumb_func
 328              	RCC_HSICmd:
 329              	.LFB59:
 353:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 354:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 355:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the Internal High Speed oscillator (HSI).
 356:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   HSI can not be stopped if it is used directly or through the PLL as system clock.
 357:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the HSI. This parameter can be: ENABLE or DISABLE.
 358:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 359:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 360:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_HSICmd(FunctionalState NewState)
 361:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 330              		.loc 1 361 0
 331              		.cfi_startproc
 332              		@ args = 0, pretend = 0, frame = 8
 333              		@ frame_needed = 1, uses_anonymous_args = 0
 334              		@ link register save eliminated.
 335 015c 80B4     		push	{r7}
 336              	.LCFI11:
 337              		.cfi_def_cfa_offset 4
 338              		.cfi_offset 7, -4
 339 015e 83B0     		sub	sp, sp, #12
 340              	.LCFI12:
 341              		.cfi_def_cfa_offset 16
 342 0160 00AF     		add	r7, sp, #0
 343              	.LCFI13:
 344              		.cfi_def_cfa_register 7
 345 0162 0346     		mov	r3, r0
 346 0164 FB71     		strb	r3, [r7, #7]
 362:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 363:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 364:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CR_HSION_BB = (uint32_t)NewState;
 347              		.loc 1 364 0
 348 0166 044B     		ldr	r3, .L22
 349 0168 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 350 016a 1A60     		str	r2, [r3, #0]
 365:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 351              		.loc 1 365 0
 352 016c 07F10C07 		add	r7, r7, #12
 353 0170 BD46     		mov	sp, r7
 354 0172 80BC     		pop	{r7}
 355 0174 7047     		bx	lr
 356              	.L23:
 357 0176 00BF     		.align	2
 358              	.L22:
 359 0178 00004242 		.word	1111621632
 360              		.cfi_endproc
 361              	.LFE59:
 363              		.align	2
 364              		.global	RCC_PLLConfig
 365              		.thumb
 366              		.thumb_func
 368              	RCC_PLLConfig:
 369              	.LFB60:
 366:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 367:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 368:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the PLL clock source and multiplication factor.
 369:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   This function must be used only when the PLL is disabled.
 370:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_PLLSource: specifies the PLL entry clock source.
 371:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices or @b STM32_Value_line_devices, 
 372:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   this parameter can be one of the following values:
 373:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PLLSource_HSI_Div2: HSI oscillator clock divided by 2 selected as PLL clock entry
 374:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PLLSource_PREDIV1: PREDIV1 clock selected as PLL clock entry
 375:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be one of the following values:
 376:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PLLSource_HSI_Div2: HSI oscillator clock divided by 2 selected as PLL clock entry
 377:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PLLSource_HSE_Div1: HSE oscillator clock selected as PLL clock entry
 378:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PLLSource_HSE_Div2: HSE oscillator clock divided by 2 selected as PLL clock entry 
 379:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_PLLMul: specifies the PLL multiplication factor.
 380:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be RCC_PLLMul_x where x:{[4,9], 6_
 381:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be RCC_PLLMul_x where x:[2,16]  
 382:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 383:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 384:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_PLLConfig(uint32_t RCC_PLLSource, uint32_t RCC_PLLMul)
 385:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 370              		.loc 1 385 0
 371              		.cfi_startproc
 372              		@ args = 0, pretend = 0, frame = 16
 373              		@ frame_needed = 1, uses_anonymous_args = 0
 374              		@ link register save eliminated.
 375 017c 80B4     		push	{r7}
 376              	.LCFI14:
 377              		.cfi_def_cfa_offset 4
 378              		.cfi_offset 7, -4
 379 017e 85B0     		sub	sp, sp, #20
 380              	.LCFI15:
 381              		.cfi_def_cfa_offset 24
 382 0180 00AF     		add	r7, sp, #0
 383              	.LCFI16:
 384              		.cfi_def_cfa_register 7
 385 0182 7860     		str	r0, [r7, #4]
 386 0184 3960     		str	r1, [r7, #0]
 386:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 387              		.loc 1 386 0
 388 0186 4FF00003 		mov	r3, #0
 389 018a FB60     		str	r3, [r7, #12]
 387:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 388:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 389:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PLL_SOURCE(RCC_PLLSource));
 390:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PLL_MUL(RCC_PLLMul));
 391:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 392:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 390              		.loc 1 392 0
 391 018c 0A4B     		ldr	r3, .L25
 392 018e 5B68     		ldr	r3, [r3, #4]
 393 0190 FB60     		str	r3, [r7, #12]
 393:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear PLLSRC, PLLXTPRE and PLLMUL[3:0] bits */
 394:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_PLL_Mask;
 394              		.loc 1 394 0
 395 0192 FB68     		ldr	r3, [r7, #12]
 396 0194 23F47C13 		bic	r3, r3, #4128768
 397 0198 FB60     		str	r3, [r7, #12]
 395:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set the PLL configuration bits */
 396:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PLLSource | RCC_PLLMul;
 398              		.loc 1 396 0
 399 019a 7A68     		ldr	r2, [r7, #4]
 400 019c 3B68     		ldr	r3, [r7, #0]
 401 019e 1343     		orrs	r3, r3, r2
 402 01a0 FA68     		ldr	r2, [r7, #12]
 403 01a2 1343     		orrs	r3, r3, r2
 404 01a4 FB60     		str	r3, [r7, #12]
 397:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 398:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 405              		.loc 1 398 0
 406 01a6 044B     		ldr	r3, .L25
 407 01a8 FA68     		ldr	r2, [r7, #12]
 408 01aa 5A60     		str	r2, [r3, #4]
 399:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 409              		.loc 1 399 0
 410 01ac 07F11407 		add	r7, r7, #20
 411 01b0 BD46     		mov	sp, r7
 412 01b2 80BC     		pop	{r7}
 413 01b4 7047     		bx	lr
 414              	.L26:
 415 01b6 00BF     		.align	2
 416              	.L25:
 417 01b8 00100240 		.word	1073876992
 418              		.cfi_endproc
 419              	.LFE60:
 421              		.align	2
 422              		.global	RCC_PLLCmd
 423              		.thumb
 424              		.thumb_func
 426              	RCC_PLLCmd:
 427              	.LFB61:
 400:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 401:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 402:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the PLL.
 403:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   The PLL can not be disabled if it is used as system clock.
 404:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the PLL. This parameter can be: ENABLE or DISABLE.
 405:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 406:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 407:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_PLLCmd(FunctionalState NewState)
 408:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 428              		.loc 1 408 0
 429              		.cfi_startproc
 430              		@ args = 0, pretend = 0, frame = 8
 431              		@ frame_needed = 1, uses_anonymous_args = 0
 432              		@ link register save eliminated.
 433 01bc 80B4     		push	{r7}
 434              	.LCFI17:
 435              		.cfi_def_cfa_offset 4
 436              		.cfi_offset 7, -4
 437 01be 83B0     		sub	sp, sp, #12
 438              	.LCFI18:
 439              		.cfi_def_cfa_offset 16
 440 01c0 00AF     		add	r7, sp, #0
 441              	.LCFI19:
 442              		.cfi_def_cfa_register 7
 443 01c2 0346     		mov	r3, r0
 444 01c4 FB71     		strb	r3, [r7, #7]
 409:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 410:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 411:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 412:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CR_PLLON_BB = (uint32_t)NewState;
 445              		.loc 1 412 0
 446 01c6 044B     		ldr	r3, .L28
 447 01c8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 448 01ca 1A60     		str	r2, [r3, #0]
 413:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 449              		.loc 1 413 0
 450 01cc 07F10C07 		add	r7, r7, #12
 451 01d0 BD46     		mov	sp, r7
 452 01d2 80BC     		pop	{r7}
 453 01d4 7047     		bx	lr
 454              	.L29:
 455 01d6 00BF     		.align	2
 456              	.L28:
 457 01d8 60004242 		.word	1111621728
 458              		.cfi_endproc
 459              	.LFE61:
 461              		.align	2
 462              		.global	RCC_SYSCLKConfig
 463              		.thumb
 464              		.thumb_func
 466              	RCC_SYSCLKConfig:
 467              	.LFB62:
 414:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 415:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL) || defined 
 416:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 417:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the PREDIV1 division factor.
 418:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note 
 419:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function must be used only when the PLL is disabled.
 420:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line and Value line 
 421:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     devices.
 422:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_PREDIV1_Source: specifies the PREDIV1 clock source.
 423:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 424:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PREDIV1_Source_HSE: HSE selected as PREDIV1 clock
 425:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PREDIV1_Source_PLL2: PLL2 selected as PREDIV1 clock
 426:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note 
 427:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b STM32_Value_line_devices this parameter is always RCC_PREDIV1_Source_HSE  
 428:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_PREDIV1_Div: specifies the PREDIV1 clock division factor.
 429:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be RCC_PREDIV1_Divx where x:[1,16]
 430:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 431:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 432:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_PREDIV1Config(uint32_t RCC_PREDIV1_Source, uint32_t RCC_PREDIV1_Div)
 433:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 434:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 435:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   
 436:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 437:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PREDIV1_SOURCE(RCC_PREDIV1_Source));
 438:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PREDIV1(RCC_PREDIV1_Div));
 439:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 440:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR2;
 441:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear PREDIV1[3:0] and PREDIV1SRC bits */
 442:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= ~(CFGR2_PREDIV1 | CFGR2_PREDIV1SRC);
 443:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set the PREDIV1 clock source and division factor */
 444:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PREDIV1_Source | RCC_PREDIV1_Div ;
 445:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 446:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR2 = tmpreg;
 447:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 448:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif
 449:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 450:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
 451:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 452:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the PREDIV2 division factor.
 453:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note 
 454:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function must be used only when both PLL2 and PLL3 are disabled.
 455:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 456:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_PREDIV2_Div: specifies the PREDIV2 clock division factor.
 457:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be RCC_PREDIV2_Divx where x:[1,16]
 458:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 459:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 460:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_PREDIV2Config(uint32_t RCC_PREDIV2_Div)
 461:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 462:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 463:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 464:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 465:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PREDIV2(RCC_PREDIV2_Div));
 466:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 467:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR2;
 468:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear PREDIV2[3:0] bits */
 469:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= ~CFGR2_PREDIV2;
 470:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set the PREDIV2 division factor */
 471:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PREDIV2_Div;
 472:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 473:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR2 = tmpreg;
 474:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 475:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 476:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 477:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the PLL2 multiplication factor.
 478:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note
 479:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function must be used only when the PLL2 is disabled.
 480:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 481:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_PLL2Mul: specifies the PLL2 multiplication factor.
 482:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be RCC_PLL2Mul_x where x:{[8,14], 16, 20}
 483:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 484:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 485:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_PLL2Config(uint32_t RCC_PLL2Mul)
 486:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 487:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 488:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 489:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 490:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PLL2_MUL(RCC_PLL2Mul));
 491:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 492:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR2;
 493:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear PLL2Mul[3:0] bits */
 494:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= ~CFGR2_PLL2MUL;
 495:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set the PLL2 configuration bits */
 496:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PLL2Mul;
 497:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 498:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR2 = tmpreg;
 499:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 500:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 501:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 502:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 503:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the PLL2.
 504:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note 
 505:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - The PLL2 can not be disabled if it is used indirectly as system clock
 506:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     (i.e. it is used as PLL clock entry that is used as System clock).
 507:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 508:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the PLL2. This parameter can be: ENABLE or DISABLE.
 509:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 510:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 511:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_PLL2Cmd(FunctionalState NewState)
 512:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 513:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 514:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 515:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 516:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CR_PLL2ON_BB = (uint32_t)NewState;
 517:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 518:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 519:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 520:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 521:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the PLL3 multiplication factor.
 522:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note 
 523:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function must be used only when the PLL3 is disabled.
 524:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 525:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_PLL3Mul: specifies the PLL3 multiplication factor.
 526:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be RCC_PLL3Mul_x where x:{[8,14], 16, 20}
 527:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 528:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 529:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_PLL3Config(uint32_t RCC_PLL3Mul)
 530:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 531:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 532:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 533:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 534:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PLL3_MUL(RCC_PLL3Mul));
 535:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 536:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR2;
 537:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear PLL3Mul[3:0] bits */
 538:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= ~CFGR2_PLL3MUL;
 539:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set the PLL3 configuration bits */
 540:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PLL3Mul;
 541:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 542:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR2 = tmpreg;
 543:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 544:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 545:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 546:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 547:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the PLL3.
 548:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   This function applies only to STM32 Connectivity line devices.
 549:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the PLL3. This parameter can be: ENABLE or DISABLE.
 550:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 551:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 552:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_PLL3Cmd(FunctionalState NewState)
 553:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 554:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 555:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 556:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 557:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CR_PLL3ON_BB = (uint32_t)NewState;
 558:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 559:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */
 560:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 561:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 562:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the system clock (SYSCLK).
 563:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_SYSCLKSource: specifies the clock source used as system clock.
 564:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 565:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLKSource_HSI: HSI selected as system clock
 566:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLKSource_HSE: HSE selected as system clock
 567:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLKSource_PLLCLK: PLL selected as system clock
 568:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 569:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 570:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_SYSCLKConfig(uint32_t RCC_SYSCLKSource)
 571:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 468              		.loc 1 571 0
 469              		.cfi_startproc
 470              		@ args = 0, pretend = 0, frame = 16
 471              		@ frame_needed = 1, uses_anonymous_args = 0
 472              		@ link register save eliminated.
 473 01dc 80B4     		push	{r7}
 474              	.LCFI20:
 475              		.cfi_def_cfa_offset 4
 476              		.cfi_offset 7, -4
 477 01de 85B0     		sub	sp, sp, #20
 478              	.LCFI21:
 479              		.cfi_def_cfa_offset 24
 480 01e0 00AF     		add	r7, sp, #0
 481              	.LCFI22:
 482              		.cfi_def_cfa_register 7
 483 01e2 7860     		str	r0, [r7, #4]
 572:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 484              		.loc 1 572 0
 485 01e4 4FF00003 		mov	r3, #0
 486 01e8 FB60     		str	r3, [r7, #12]
 573:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 574:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_SYSCLK_SOURCE(RCC_SYSCLKSource));
 575:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 487              		.loc 1 575 0
 488 01ea 094B     		ldr	r3, .L31
 489 01ec 5B68     		ldr	r3, [r3, #4]
 490 01ee FB60     		str	r3, [r7, #12]
 576:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear SW[1:0] bits */
 577:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_SW_Mask;
 491              		.loc 1 577 0
 492 01f0 FB68     		ldr	r3, [r7, #12]
 493 01f2 23F00303 		bic	r3, r3, #3
 494 01f6 FB60     		str	r3, [r7, #12]
 578:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set SW[1:0] bits according to RCC_SYSCLKSource value */
 579:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_SYSCLKSource;
 495              		.loc 1 579 0
 496 01f8 FA68     		ldr	r2, [r7, #12]
 497 01fa 7B68     		ldr	r3, [r7, #4]
 498 01fc 1343     		orrs	r3, r3, r2
 499 01fe FB60     		str	r3, [r7, #12]
 580:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 581:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 500              		.loc 1 581 0
 501 0200 034B     		ldr	r3, .L31
 502 0202 FA68     		ldr	r2, [r7, #12]
 503 0204 5A60     		str	r2, [r3, #4]
 582:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 504              		.loc 1 582 0
 505 0206 07F11407 		add	r7, r7, #20
 506 020a BD46     		mov	sp, r7
 507 020c 80BC     		pop	{r7}
 508 020e 7047     		bx	lr
 509              	.L32:
 510              		.align	2
 511              	.L31:
 512 0210 00100240 		.word	1073876992
 513              		.cfi_endproc
 514              	.LFE62:
 516              		.align	2
 517              		.global	RCC_GetSYSCLKSource
 518              		.thumb
 519              		.thumb_func
 521              	RCC_GetSYSCLKSource:
 522              	.LFB63:
 583:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 584:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 585:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Returns the clock source used as system clock.
 586:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  None
 587:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval The clock source used as system clock. The returned value can
 588:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   be one of the following:
 589:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     - 0x00: HSI used as system clock
 590:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     - 0x04: HSE used as system clock
 591:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     - 0x08: PLL used as system clock
 592:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 593:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** uint8_t RCC_GetSYSCLKSource(void)
 594:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 523              		.loc 1 594 0
 524              		.cfi_startproc
 525              		@ args = 0, pretend = 0, frame = 0
 526              		@ frame_needed = 1, uses_anonymous_args = 0
 527              		@ link register save eliminated.
 528 0214 80B4     		push	{r7}
 529              	.LCFI23:
 530              		.cfi_def_cfa_offset 4
 531              		.cfi_offset 7, -4
 532 0216 00AF     		add	r7, sp, #0
 533              	.LCFI24:
 534              		.cfi_def_cfa_register 7
 595:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   return ((uint8_t)(RCC->CFGR & CFGR_SWS_Mask));
 535              		.loc 1 595 0
 536 0218 044B     		ldr	r3, .L35
 537 021a 5B68     		ldr	r3, [r3, #4]
 538 021c DBB2     		uxtb	r3, r3
 539 021e 03F00C03 		and	r3, r3, #12
 540 0222 DBB2     		uxtb	r3, r3
 596:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 541              		.loc 1 596 0
 542 0224 1846     		mov	r0, r3
 543 0226 BD46     		mov	sp, r7
 544 0228 80BC     		pop	{r7}
 545 022a 7047     		bx	lr
 546              	.L36:
 547              		.align	2
 548              	.L35:
 549 022c 00100240 		.word	1073876992
 550              		.cfi_endproc
 551              	.LFE63:
 553              		.align	2
 554              		.global	RCC_HCLKConfig
 555              		.thumb
 556              		.thumb_func
 558              	RCC_HCLKConfig:
 559              	.LFB64:
 597:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 598:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 599:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the AHB clock (HCLK).
 600:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_SYSCLK: defines the AHB clock divider. This clock is derived from 
 601:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   the system clock (SYSCLK).
 602:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 603:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div1: AHB clock = SYSCLK
 604:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div2: AHB clock = SYSCLK/2
 605:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div4: AHB clock = SYSCLK/4
 606:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div8: AHB clock = SYSCLK/8
 607:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div16: AHB clock = SYSCLK/16
 608:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div64: AHB clock = SYSCLK/64
 609:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div128: AHB clock = SYSCLK/128
 610:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div256: AHB clock = SYSCLK/256
 611:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div512: AHB clock = SYSCLK/512
 612:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 613:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 614:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_HCLKConfig(uint32_t RCC_SYSCLK)
 615:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 560              		.loc 1 615 0
 561              		.cfi_startproc
 562              		@ args = 0, pretend = 0, frame = 16
 563              		@ frame_needed = 1, uses_anonymous_args = 0
 564              		@ link register save eliminated.
 565 0230 80B4     		push	{r7}
 566              	.LCFI25:
 567              		.cfi_def_cfa_offset 4
 568              		.cfi_offset 7, -4
 569 0232 85B0     		sub	sp, sp, #20
 570              	.LCFI26:
 571              		.cfi_def_cfa_offset 24
 572 0234 00AF     		add	r7, sp, #0
 573              	.LCFI27:
 574              		.cfi_def_cfa_register 7
 575 0236 7860     		str	r0, [r7, #4]
 616:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 576              		.loc 1 616 0
 577 0238 4FF00003 		mov	r3, #0
 578 023c FB60     		str	r3, [r7, #12]
 617:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 618:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_HCLK(RCC_SYSCLK));
 619:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 579              		.loc 1 619 0
 580 023e 094B     		ldr	r3, .L38
 581 0240 5B68     		ldr	r3, [r3, #4]
 582 0242 FB60     		str	r3, [r7, #12]
 620:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear HPRE[3:0] bits */
 621:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_HPRE_Reset_Mask;
 583              		.loc 1 621 0
 584 0244 FB68     		ldr	r3, [r7, #12]
 585 0246 23F0F003 		bic	r3, r3, #240
 586 024a FB60     		str	r3, [r7, #12]
 622:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set HPRE[3:0] bits according to RCC_SYSCLK value */
 623:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_SYSCLK;
 587              		.loc 1 623 0
 588 024c FA68     		ldr	r2, [r7, #12]
 589 024e 7B68     		ldr	r3, [r7, #4]
 590 0250 1343     		orrs	r3, r3, r2
 591 0252 FB60     		str	r3, [r7, #12]
 624:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 625:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 592              		.loc 1 625 0
 593 0254 034B     		ldr	r3, .L38
 594 0256 FA68     		ldr	r2, [r7, #12]
 595 0258 5A60     		str	r2, [r3, #4]
 626:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 596              		.loc 1 626 0
 597 025a 07F11407 		add	r7, r7, #20
 598 025e BD46     		mov	sp, r7
 599 0260 80BC     		pop	{r7}
 600 0262 7047     		bx	lr
 601              	.L39:
 602              		.align	2
 603              	.L38:
 604 0264 00100240 		.word	1073876992
 605              		.cfi_endproc
 606              	.LFE64:
 608              		.align	2
 609              		.global	RCC_PCLK1Config
 610              		.thumb
 611              		.thumb_func
 613              	RCC_PCLK1Config:
 614              	.LFB65:
 627:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 628:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 629:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the Low Speed APB clock (PCLK1).
 630:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_HCLK: defines the APB1 clock divider. This clock is derived from 
 631:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   the AHB clock (HCLK).
 632:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 633:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div1: APB1 clock = HCLK
 634:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div2: APB1 clock = HCLK/2
 635:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div4: APB1 clock = HCLK/4
 636:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div8: APB1 clock = HCLK/8
 637:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div16: APB1 clock = HCLK/16
 638:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 639:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 640:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_PCLK1Config(uint32_t RCC_HCLK)
 641:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 615              		.loc 1 641 0
 616              		.cfi_startproc
 617              		@ args = 0, pretend = 0, frame = 16
 618              		@ frame_needed = 1, uses_anonymous_args = 0
 619              		@ link register save eliminated.
 620 0268 80B4     		push	{r7}
 621              	.LCFI28:
 622              		.cfi_def_cfa_offset 4
 623              		.cfi_offset 7, -4
 624 026a 85B0     		sub	sp, sp, #20
 625              	.LCFI29:
 626              		.cfi_def_cfa_offset 24
 627 026c 00AF     		add	r7, sp, #0
 628              	.LCFI30:
 629              		.cfi_def_cfa_register 7
 630 026e 7860     		str	r0, [r7, #4]
 642:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 631              		.loc 1 642 0
 632 0270 4FF00003 		mov	r3, #0
 633 0274 FB60     		str	r3, [r7, #12]
 643:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 644:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PCLK(RCC_HCLK));
 645:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 634              		.loc 1 645 0
 635 0276 094B     		ldr	r3, .L41
 636 0278 5B68     		ldr	r3, [r3, #4]
 637 027a FB60     		str	r3, [r7, #12]
 646:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear PPRE1[2:0] bits */
 647:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_PPRE1_Reset_Mask;
 638              		.loc 1 647 0
 639 027c FB68     		ldr	r3, [r7, #12]
 640 027e 23F4E063 		bic	r3, r3, #1792
 641 0282 FB60     		str	r3, [r7, #12]
 648:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set PPRE1[2:0] bits according to RCC_HCLK value */
 649:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_HCLK;
 642              		.loc 1 649 0
 643 0284 FA68     		ldr	r2, [r7, #12]
 644 0286 7B68     		ldr	r3, [r7, #4]
 645 0288 1343     		orrs	r3, r3, r2
 646 028a FB60     		str	r3, [r7, #12]
 650:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 651:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 647              		.loc 1 651 0
 648 028c 034B     		ldr	r3, .L41
 649 028e FA68     		ldr	r2, [r7, #12]
 650 0290 5A60     		str	r2, [r3, #4]
 652:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 651              		.loc 1 652 0
 652 0292 07F11407 		add	r7, r7, #20
 653 0296 BD46     		mov	sp, r7
 654 0298 80BC     		pop	{r7}
 655 029a 7047     		bx	lr
 656              	.L42:
 657              		.align	2
 658              	.L41:
 659 029c 00100240 		.word	1073876992
 660              		.cfi_endproc
 661              	.LFE65:
 663              		.align	2
 664              		.global	RCC_PCLK2Config
 665              		.thumb
 666              		.thumb_func
 668              	RCC_PCLK2Config:
 669              	.LFB66:
 653:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 654:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 655:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the High Speed APB clock (PCLK2).
 656:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_HCLK: defines the APB2 clock divider. This clock is derived from 
 657:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   the AHB clock (HCLK).
 658:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 659:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div1: APB2 clock = HCLK
 660:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div2: APB2 clock = HCLK/2
 661:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div4: APB2 clock = HCLK/4
 662:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div8: APB2 clock = HCLK/8
 663:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div16: APB2 clock = HCLK/16
 664:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 665:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 666:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_PCLK2Config(uint32_t RCC_HCLK)
 667:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 670              		.loc 1 667 0
 671              		.cfi_startproc
 672              		@ args = 0, pretend = 0, frame = 16
 673              		@ frame_needed = 1, uses_anonymous_args = 0
 674              		@ link register save eliminated.
 675 02a0 80B4     		push	{r7}
 676              	.LCFI31:
 677              		.cfi_def_cfa_offset 4
 678              		.cfi_offset 7, -4
 679 02a2 85B0     		sub	sp, sp, #20
 680              	.LCFI32:
 681              		.cfi_def_cfa_offset 24
 682 02a4 00AF     		add	r7, sp, #0
 683              	.LCFI33:
 684              		.cfi_def_cfa_register 7
 685 02a6 7860     		str	r0, [r7, #4]
 668:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 686              		.loc 1 668 0
 687 02a8 4FF00003 		mov	r3, #0
 688 02ac FB60     		str	r3, [r7, #12]
 669:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 670:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PCLK(RCC_HCLK));
 671:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 689              		.loc 1 671 0
 690 02ae 0A4B     		ldr	r3, .L44
 691 02b0 5B68     		ldr	r3, [r3, #4]
 692 02b2 FB60     		str	r3, [r7, #12]
 672:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear PPRE2[2:0] bits */
 673:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_PPRE2_Reset_Mask;
 693              		.loc 1 673 0
 694 02b4 FB68     		ldr	r3, [r7, #12]
 695 02b6 23F46053 		bic	r3, r3, #14336
 696 02ba FB60     		str	r3, [r7, #12]
 674:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set PPRE2[2:0] bits according to RCC_HCLK value */
 675:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_HCLK << 3;
 697              		.loc 1 675 0
 698 02bc 7B68     		ldr	r3, [r7, #4]
 699 02be 4FEAC303 		lsl	r3, r3, #3
 700 02c2 FA68     		ldr	r2, [r7, #12]
 701 02c4 1343     		orrs	r3, r3, r2
 702 02c6 FB60     		str	r3, [r7, #12]
 676:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 677:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 703              		.loc 1 677 0
 704 02c8 034B     		ldr	r3, .L44
 705 02ca FA68     		ldr	r2, [r7, #12]
 706 02cc 5A60     		str	r2, [r3, #4]
 678:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 707              		.loc 1 678 0
 708 02ce 07F11407 		add	r7, r7, #20
 709 02d2 BD46     		mov	sp, r7
 710 02d4 80BC     		pop	{r7}
 711 02d6 7047     		bx	lr
 712              	.L45:
 713              		.align	2
 714              	.L44:
 715 02d8 00100240 		.word	1073876992
 716              		.cfi_endproc
 717              	.LFE66:
 719              		.align	2
 720              		.global	RCC_ITConfig
 721              		.thumb
 722              		.thumb_func
 724              	RCC_ITConfig:
 725              	.LFB67:
 679:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 680:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 681:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the specified RCC interrupts.
 682:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_IT: specifies the RCC interrupt sources to be enabled or disabled.
 683:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * 
 684:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be any combination
 685:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   of the following values        
 686:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
 687:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
 688:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
 689:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
 690:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
 691:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL2RDY: PLL2 ready interrupt
 692:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL3RDY: PLL3 ready interrupt
 693:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * 
 694:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be any combination of the 
 695:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   following values        
 696:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
 697:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
 698:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
 699:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
 700:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
 701:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *       
 702:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified RCC interrupts.
 703:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
 704:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 705:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 706:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_ITConfig(uint8_t RCC_IT, FunctionalState NewState)
 707:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 726              		.loc 1 707 0
 727              		.cfi_startproc
 728              		@ args = 0, pretend = 0, frame = 8
 729              		@ frame_needed = 1, uses_anonymous_args = 0
 730              		@ link register save eliminated.
 731 02dc 80B4     		push	{r7}
 732              	.LCFI34:
 733              		.cfi_def_cfa_offset 4
 734              		.cfi_offset 7, -4
 735 02de 83B0     		sub	sp, sp, #12
 736              	.LCFI35:
 737              		.cfi_def_cfa_offset 16
 738 02e0 00AF     		add	r7, sp, #0
 739              	.LCFI36:
 740              		.cfi_def_cfa_register 7
 741 02e2 0246     		mov	r2, r0
 742 02e4 0B46     		mov	r3, r1
 743 02e6 FA71     		strb	r2, [r7, #7]
 744 02e8 BB71     		strb	r3, [r7, #6]
 708:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 709:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_IT(RCC_IT));
 710:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 711:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
 745              		.loc 1 711 0
 746 02ea BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 747 02ec 002B     		cmp	r3, #0
 748 02ee 08D0     		beq	.L47
 712:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 713:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     /* Perform Byte access to RCC_CIR bits to enable the selected interrupts */
 714:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     *(__IO uint8_t *) CIR_BYTE2_ADDRESS |= RCC_IT;
 749              		.loc 1 714 0
 750 02f0 0C4B     		ldr	r3, .L49
 751 02f2 0C4A     		ldr	r2, .L49
 752 02f4 1278     		ldrb	r2, [r2, #0]
 753 02f6 D1B2     		uxtb	r1, r2
 754 02f8 FA79     		ldrb	r2, [r7, #7]
 755 02fa 0A43     		orrs	r2, r2, r1
 756 02fc D2B2     		uxtb	r2, r2
 757 02fe 1A70     		strb	r2, [r3, #0]
 758 0300 0AE0     		b	.L46
 759              	.L47:
 715:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
 716:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else
 717:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 718:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     /* Perform Byte access to RCC_CIR bits to disable the selected interrupts */
 719:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     *(__IO uint8_t *) CIR_BYTE2_ADDRESS &= (uint8_t)~RCC_IT;
 760              		.loc 1 719 0
 761 0302 084B     		ldr	r3, .L49
 762 0304 074A     		ldr	r2, .L49
 763 0306 1278     		ldrb	r2, [r2, #0]
 764 0308 D1B2     		uxtb	r1, r2
 765 030a FA79     		ldrb	r2, [r7, #7]
 766 030c 6FEA0202 		mvn	r2, r2
 767 0310 D2B2     		uxtb	r2, r2
 768 0312 0A40     		ands	r2, r2, r1
 769 0314 D2B2     		uxtb	r2, r2
 770 0316 1A70     		strb	r2, [r3, #0]
 771              	.L46:
 720:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
 721:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 772              		.loc 1 721 0
 773 0318 07F10C07 		add	r7, r7, #12
 774 031c BD46     		mov	sp, r7
 775 031e 80BC     		pop	{r7}
 776 0320 7047     		bx	lr
 777              	.L50:
 778 0322 00BF     		.align	2
 779              	.L49:
 780 0324 09100240 		.word	1073877001
 781              		.cfi_endproc
 782              	.LFE67:
 784              		.align	2
 785              		.global	RCC_USBCLKConfig
 786              		.thumb
 787              		.thumb_func
 789              	RCC_USBCLKConfig:
 790              	.LFB68:
 722:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 723:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifndef STM32F10X_CL
 724:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 725:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the USB clock (USBCLK).
 726:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_USBCLKSource: specifies the USB clock source. This clock is 
 727:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   derived from the PLL output.
 728:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 729:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_USBCLKSource_PLLCLK_1Div5: PLL clock divided by 1,5 selected as USB 
 730:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *                                     clock source
 731:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_USBCLKSource_PLLCLK_Div1: PLL clock selected as USB clock source
 732:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 733:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 734:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_USBCLKConfig(uint32_t RCC_USBCLKSource)
 735:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 791              		.loc 1 735 0
 792              		.cfi_startproc
 793              		@ args = 0, pretend = 0, frame = 8
 794              		@ frame_needed = 1, uses_anonymous_args = 0
 795              		@ link register save eliminated.
 796 0328 80B4     		push	{r7}
 797              	.LCFI37:
 798              		.cfi_def_cfa_offset 4
 799              		.cfi_offset 7, -4
 800 032a 83B0     		sub	sp, sp, #12
 801              	.LCFI38:
 802              		.cfi_def_cfa_offset 16
 803 032c 00AF     		add	r7, sp, #0
 804              	.LCFI39:
 805              		.cfi_def_cfa_register 7
 806 032e 7860     		str	r0, [r7, #4]
 736:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 737:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_USBCLK_SOURCE(RCC_USBCLKSource));
 738:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 739:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CFGR_USBPRE_BB = RCC_USBCLKSource;
 807              		.loc 1 739 0
 808 0330 034B     		ldr	r3, .L52
 809 0332 7A68     		ldr	r2, [r7, #4]
 810 0334 1A60     		str	r2, [r3, #0]
 740:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 811              		.loc 1 740 0
 812 0336 07F10C07 		add	r7, r7, #12
 813 033a BD46     		mov	sp, r7
 814 033c 80BC     		pop	{r7}
 815 033e 7047     		bx	lr
 816              	.L53:
 817              		.align	2
 818              	.L52:
 819 0340 D8004242 		.word	1111621848
 820              		.cfi_endproc
 821              	.LFE68:
 823              		.align	2
 824              		.global	RCC_ADCCLKConfig
 825              		.thumb
 826              		.thumb_func
 828              	RCC_ADCCLKConfig:
 829              	.LFB69:
 741:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #else
 742:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 743:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the USB OTG FS clock (OTGFSCLK).
 744:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This function applies only to STM32 Connectivity line devices.
 745:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_OTGFSCLKSource: specifies the USB OTG FS clock source.
 746:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This clock is derived from the PLL output.
 747:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 748:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg  RCC_OTGFSCLKSource_PLLVCO_Div3: PLL VCO clock divided by 2 selected as USB OTG FS clo
 749:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg  RCC_OTGFSCLKSource_PLLVCO_Div2: PLL VCO clock divided by 2 selected as USB OTG FS clo
 750:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 751:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 752:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_OTGFSCLKConfig(uint32_t RCC_OTGFSCLKSource)
 753:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 754:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 755:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_OTGFSCLK_SOURCE(RCC_OTGFSCLKSource));
 756:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 757:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CFGR_OTGFSPRE_BB = RCC_OTGFSCLKSource;
 758:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 759:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
 760:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 761:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 762:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the ADC clock (ADCCLK).
 763:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_PCLK2: defines the ADC clock divider. This clock is derived from 
 764:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   the APB2 clock (PCLK2).
 765:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 766:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PCLK2_Div2: ADC clock = PCLK2/2
 767:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PCLK2_Div4: ADC clock = PCLK2/4
 768:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PCLK2_Div6: ADC clock = PCLK2/6
 769:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PCLK2_Div8: ADC clock = PCLK2/8
 770:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 771:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 772:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_ADCCLKConfig(uint32_t RCC_PCLK2)
 773:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 830              		.loc 1 773 0
 831              		.cfi_startproc
 832              		@ args = 0, pretend = 0, frame = 16
 833              		@ frame_needed = 1, uses_anonymous_args = 0
 834              		@ link register save eliminated.
 835 0344 80B4     		push	{r7}
 836              	.LCFI40:
 837              		.cfi_def_cfa_offset 4
 838              		.cfi_offset 7, -4
 839 0346 85B0     		sub	sp, sp, #20
 840              	.LCFI41:
 841              		.cfi_def_cfa_offset 24
 842 0348 00AF     		add	r7, sp, #0
 843              	.LCFI42:
 844              		.cfi_def_cfa_register 7
 845 034a 7860     		str	r0, [r7, #4]
 774:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 846              		.loc 1 774 0
 847 034c 4FF00003 		mov	r3, #0
 848 0350 FB60     		str	r3, [r7, #12]
 775:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 776:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_ADCCLK(RCC_PCLK2));
 777:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 849              		.loc 1 777 0
 850 0352 094B     		ldr	r3, .L55
 851 0354 5B68     		ldr	r3, [r3, #4]
 852 0356 FB60     		str	r3, [r7, #12]
 778:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear ADCPRE[1:0] bits */
 779:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_ADCPRE_Reset_Mask;
 853              		.loc 1 779 0
 854 0358 FB68     		ldr	r3, [r7, #12]
 855 035a 23F44043 		bic	r3, r3, #49152
 856 035e FB60     		str	r3, [r7, #12]
 780:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set ADCPRE[1:0] bits according to RCC_PCLK2 value */
 781:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PCLK2;
 857              		.loc 1 781 0
 858 0360 FA68     		ldr	r2, [r7, #12]
 859 0362 7B68     		ldr	r3, [r7, #4]
 860 0364 1343     		orrs	r3, r3, r2
 861 0366 FB60     		str	r3, [r7, #12]
 782:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 783:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 862              		.loc 1 783 0
 863 0368 034B     		ldr	r3, .L55
 864 036a FA68     		ldr	r2, [r7, #12]
 865 036c 5A60     		str	r2, [r3, #4]
 784:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 866              		.loc 1 784 0
 867 036e 07F11407 		add	r7, r7, #20
 868 0372 BD46     		mov	sp, r7
 869 0374 80BC     		pop	{r7}
 870 0376 7047     		bx	lr
 871              	.L56:
 872              		.align	2
 873              	.L55:
 874 0378 00100240 		.word	1073876992
 875              		.cfi_endproc
 876              	.LFE69:
 878              		.align	2
 879              		.global	RCC_LSEConfig
 880              		.thumb
 881              		.thumb_func
 883              	RCC_LSEConfig:
 884              	.LFB70:
 785:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 786:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
 787:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 788:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the I2S2 clock source(I2S2CLK).
 789:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note
 790:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function must be called before enabling I2S2 APB clock.
 791:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 792:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_I2S2CLKSource: specifies the I2S2 clock source.
 793:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 794:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_I2S2CLKSource_SYSCLK: system clock selected as I2S2 clock entry
 795:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_I2S2CLKSource_PLL3_VCO: PLL3 VCO clock selected as I2S2 clock entry
 796:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 797:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 798:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_I2S2CLKConfig(uint32_t RCC_I2S2CLKSource)
 799:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 800:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 801:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_I2S2CLK_SOURCE(RCC_I2S2CLKSource));
 802:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 803:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CFGR2_I2S2SRC_BB = RCC_I2S2CLKSource;
 804:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 805:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 806:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 807:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the I2S3 clock source(I2S2CLK).
 808:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note
 809:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function must be called before enabling I2S3 APB clock.
 810:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 811:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_I2S3CLKSource: specifies the I2S3 clock source.
 812:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 813:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_I2S3CLKSource_SYSCLK: system clock selected as I2S3 clock entry
 814:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_I2S3CLKSource_PLL3_VCO: PLL3 VCO clock selected as I2S3 clock entry
 815:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 816:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 817:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_I2S3CLKConfig(uint32_t RCC_I2S3CLKSource)
 818:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 819:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 820:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_I2S3CLK_SOURCE(RCC_I2S3CLKSource));
 821:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 822:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CFGR2_I2S3SRC_BB = RCC_I2S3CLKSource;
 823:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 824:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */
 825:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 826:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 827:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the External Low Speed oscillator (LSE).
 828:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_LSE: specifies the new state of the LSE.
 829:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 830:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_LSE_OFF: LSE oscillator OFF
 831:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_LSE_ON: LSE oscillator ON
 832:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_LSE_Bypass: LSE oscillator bypassed with external clock
 833:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 834:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 835:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_LSEConfig(uint8_t RCC_LSE)
 836:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 885              		.loc 1 836 0
 886              		.cfi_startproc
 887              		@ args = 0, pretend = 0, frame = 8
 888              		@ frame_needed = 1, uses_anonymous_args = 0
 889              		@ link register save eliminated.
 890 037c 80B4     		push	{r7}
 891              	.LCFI43:
 892              		.cfi_def_cfa_offset 4
 893              		.cfi_offset 7, -4
 894 037e 83B0     		sub	sp, sp, #12
 895              	.LCFI44:
 896              		.cfi_def_cfa_offset 16
 897 0380 00AF     		add	r7, sp, #0
 898              	.LCFI45:
 899              		.cfi_def_cfa_register 7
 900 0382 0346     		mov	r3, r0
 901 0384 FB71     		strb	r3, [r7, #7]
 837:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 838:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_LSE(RCC_LSE));
 839:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset LSEON and LSEBYP bits before configuring the LSE ------------------*/
 840:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset LSEON bit */
 841:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_OFF;
 902              		.loc 1 841 0
 903 0386 0F4B     		ldr	r3, .L63
 904 0388 4FF00002 		mov	r2, #0
 905 038c 1A70     		strb	r2, [r3, #0]
 842:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset LSEBYP bit */
 843:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_OFF;
 906              		.loc 1 843 0
 907 038e 0D4B     		ldr	r3, .L63
 908 0390 4FF00002 		mov	r2, #0
 909 0394 1A70     		strb	r2, [r3, #0]
 844:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Configure LSE (RCC_LSE_OFF is already covered by the code section above) */
 845:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   switch(RCC_LSE)
 910              		.loc 1 845 0
 911 0396 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 912 0398 012B     		cmp	r3, #1
 913 039a 02D0     		beq	.L59
 914 039c 042B     		cmp	r3, #4
 915 039e 05D0     		beq	.L60
 916 03a0 09E0     		b	.L62
 917              	.L59:
 846:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 847:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     case RCC_LSE_ON:
 848:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       /* Set LSEON bit */
 849:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_ON;
 918              		.loc 1 849 0
 919 03a2 084B     		ldr	r3, .L63
 920 03a4 4FF00102 		mov	r2, #1
 921 03a8 1A70     		strb	r2, [r3, #0]
 850:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;
 922              		.loc 1 850 0
 923 03aa 05E0     		b	.L57
 924              	.L60:
 851:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       
 852:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     case RCC_LSE_Bypass:
 853:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       /* Set LSEBYP and LSEON bits */
 854:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_Bypass | RCC_LSE_ON;
 925              		.loc 1 854 0
 926 03ac 054B     		ldr	r3, .L63
 927 03ae 4FF00502 		mov	r2, #5
 928 03b2 1A70     		strb	r2, [r3, #0]
 855:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;            
 929              		.loc 1 855 0
 930 03b4 00E0     		b	.L57
 931              	.L62:
 856:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       
 857:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     default:
 858:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;      
 932              		.loc 1 858 0
 933 03b6 00BF     		nop
 934              	.L57:
 859:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
 860:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 935              		.loc 1 860 0
 936 03b8 07F10C07 		add	r7, r7, #12
 937 03bc BD46     		mov	sp, r7
 938 03be 80BC     		pop	{r7}
 939 03c0 7047     		bx	lr
 940              	.L64:
 941 03c2 00BF     		.align	2
 942              	.L63:
 943 03c4 20100240 		.word	1073877024
 944              		.cfi_endproc
 945              	.LFE70:
 947              		.align	2
 948              		.global	RCC_LSICmd
 949              		.thumb
 950              		.thumb_func
 952              	RCC_LSICmd:
 953              	.LFB71:
 861:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 862:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 863:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the Internal Low Speed oscillator (LSI).
 864:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   LSI can not be disabled if the IWDG is running.
 865:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the LSI. This parameter can be: ENABLE or DISABLE.
 866:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 867:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 868:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_LSICmd(FunctionalState NewState)
 869:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 954              		.loc 1 869 0
 955              		.cfi_startproc
 956              		@ args = 0, pretend = 0, frame = 8
 957              		@ frame_needed = 1, uses_anonymous_args = 0
 958              		@ link register save eliminated.
 959 03c8 80B4     		push	{r7}
 960              	.LCFI46:
 961              		.cfi_def_cfa_offset 4
 962              		.cfi_offset 7, -4
 963 03ca 83B0     		sub	sp, sp, #12
 964              	.LCFI47:
 965              		.cfi_def_cfa_offset 16
 966 03cc 00AF     		add	r7, sp, #0
 967              	.LCFI48:
 968              		.cfi_def_cfa_register 7
 969 03ce 0346     		mov	r3, r0
 970 03d0 FB71     		strb	r3, [r7, #7]
 870:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 871:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 872:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CSR_LSION_BB = (uint32_t)NewState;
 971              		.loc 1 872 0
 972 03d2 044B     		ldr	r3, .L66
 973 03d4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 974 03d6 1A60     		str	r2, [r3, #0]
 873:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 975              		.loc 1 873 0
 976 03d8 07F10C07 		add	r7, r7, #12
 977 03dc BD46     		mov	sp, r7
 978 03de 80BC     		pop	{r7}
 979 03e0 7047     		bx	lr
 980              	.L67:
 981 03e2 00BF     		.align	2
 982              	.L66:
 983 03e4 80044242 		.word	1111622784
 984              		.cfi_endproc
 985              	.LFE71:
 987              		.align	2
 988              		.global	RCC_RTCCLKConfig
 989              		.thumb
 990              		.thumb_func
 992              	RCC_RTCCLKConfig:
 993              	.LFB72:
 874:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 875:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 876:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the RTC clock (RTCCLK).
 877:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   Once the RTC clock is selected it can't be changed unless the Backup domain is reset.
 878:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_RTCCLKSource: specifies the RTC clock source.
 879:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 880:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_RTCCLKSource_LSE: LSE selected as RTC clock
 881:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_RTCCLKSource_LSI: LSI selected as RTC clock
 882:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_RTCCLKSource_HSE_Div128: HSE clock divided by 128 selected as RTC clock
 883:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 884:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 885:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_RTCCLKConfig(uint32_t RCC_RTCCLKSource)
 886:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 994              		.loc 1 886 0
 995              		.cfi_startproc
 996              		@ args = 0, pretend = 0, frame = 8
 997              		@ frame_needed = 1, uses_anonymous_args = 0
 998              		@ link register save eliminated.
 999 03e8 80B4     		push	{r7}
 1000              	.LCFI49:
 1001              		.cfi_def_cfa_offset 4
 1002              		.cfi_offset 7, -4
 1003 03ea 83B0     		sub	sp, sp, #12
 1004              	.LCFI50:
 1005              		.cfi_def_cfa_offset 16
 1006 03ec 00AF     		add	r7, sp, #0
 1007              	.LCFI51:
 1008              		.cfi_def_cfa_register 7
 1009 03ee 7860     		str	r0, [r7, #4]
 887:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 888:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_RTCCLK_SOURCE(RCC_RTCCLKSource));
 889:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Select the RTC clock source */
 890:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->BDCR |= RCC_RTCCLKSource;
 1010              		.loc 1 890 0
 1011 03f0 054B     		ldr	r3, .L69
 1012 03f2 054A     		ldr	r2, .L69
 1013 03f4 116A     		ldr	r1, [r2, #32]
 1014 03f6 7A68     		ldr	r2, [r7, #4]
 1015 03f8 0A43     		orrs	r2, r2, r1
 1016 03fa 1A62     		str	r2, [r3, #32]
 891:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 1017              		.loc 1 891 0
 1018 03fc 07F10C07 		add	r7, r7, #12
 1019 0400 BD46     		mov	sp, r7
 1020 0402 80BC     		pop	{r7}
 1021 0404 7047     		bx	lr
 1022              	.L70:
 1023 0406 00BF     		.align	2
 1024              	.L69:
 1025 0408 00100240 		.word	1073876992
 1026              		.cfi_endproc
 1027              	.LFE72:
 1029              		.align	2
 1030              		.global	RCC_RTCCLKCmd
 1031              		.thumb
 1032              		.thumb_func
 1034              	RCC_RTCCLKCmd:
 1035              	.LFB73:
 892:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 893:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 894:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the RTC clock.
 895:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   This function must be used only after the RTC clock was selected using the RCC_RTCCLKCo
 896:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the RTC clock. This parameter can be: ENABLE or DISABLE.
 897:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 898:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 899:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_RTCCLKCmd(FunctionalState NewState)
 900:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 1036              		.loc 1 900 0
 1037              		.cfi_startproc
 1038              		@ args = 0, pretend = 0, frame = 8
 1039              		@ frame_needed = 1, uses_anonymous_args = 0
 1040              		@ link register save eliminated.
 1041 040c 80B4     		push	{r7}
 1042              	.LCFI52:
 1043              		.cfi_def_cfa_offset 4
 1044              		.cfi_offset 7, -4
 1045 040e 83B0     		sub	sp, sp, #12
 1046              	.LCFI53:
 1047              		.cfi_def_cfa_offset 16
 1048 0410 00AF     		add	r7, sp, #0
 1049              	.LCFI54:
 1050              		.cfi_def_cfa_register 7
 1051 0412 0346     		mov	r3, r0
 1052 0414 FB71     		strb	r3, [r7, #7]
 901:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 902:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 903:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) BDCR_RTCEN_BB = (uint32_t)NewState;
 1053              		.loc 1 903 0
 1054 0416 044B     		ldr	r3, .L72
 1055 0418 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1056 041a 1A60     		str	r2, [r3, #0]
 904:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 1057              		.loc 1 904 0
 1058 041c 07F10C07 		add	r7, r7, #12
 1059 0420 BD46     		mov	sp, r7
 1060 0422 80BC     		pop	{r7}
 1061 0424 7047     		bx	lr
 1062              	.L73:
 1063 0426 00BF     		.align	2
 1064              	.L72:
 1065 0428 3C044242 		.word	1111622716
 1066              		.cfi_endproc
 1067              	.LFE73:
 1069              		.align	2
 1070              		.global	RCC_GetClocksFreq
 1071              		.thumb
 1072              		.thumb_func
 1074              	RCC_GetClocksFreq:
 1075              	.LFB74:
 905:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 906:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 907:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Returns the frequencies of different on chip clocks.
 908:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_Clocks: pointer to a RCC_ClocksTypeDef structure which will hold
 909:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *         the clocks frequencies.
 910:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   The result of this function could be not correct when using 
 911:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *         fractional value for HSE crystal.  
 912:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 913:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 914:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_GetClocksFreq(RCC_ClocksTypeDef* RCC_Clocks)
 915:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 1076              		.loc 1 915 0
 1077              		.cfi_startproc
 1078              		@ args = 0, pretend = 0, frame = 24
 1079              		@ frame_needed = 1, uses_anonymous_args = 0
 1080              		@ link register save eliminated.
 1081 042c 80B4     		push	{r7}
 1082              	.LCFI55:
 1083              		.cfi_def_cfa_offset 4
 1084              		.cfi_offset 7, -4
 1085 042e 87B0     		sub	sp, sp, #28
 1086              	.LCFI56:
 1087              		.cfi_def_cfa_offset 32
 1088 0430 00AF     		add	r7, sp, #0
 1089              	.LCFI57:
 1090              		.cfi_def_cfa_register 7
 1091 0432 7860     		str	r0, [r7, #4]
 916:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmp = 0, pllmull = 0, pllsource = 0, presc = 0;
 1092              		.loc 1 916 0
 1093 0434 4FF00003 		mov	r3, #0
 1094 0438 7B61     		str	r3, [r7, #20]
 1095 043a 4FF00003 		mov	r3, #0
 1096 043e 3B61     		str	r3, [r7, #16]
 1097 0440 4FF00003 		mov	r3, #0
 1098 0444 FB60     		str	r3, [r7, #12]
 1099 0446 4FF00003 		mov	r3, #0
 1100 044a BB60     		str	r3, [r7, #8]
 917:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 918:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifdef  STM32F10X_CL
 919:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t prediv1source = 0, prediv1factor = 0, prediv2factor = 0, pll2mull = 0;
 920:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */
 921:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 922:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL)
 923:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t prediv1factor = 0;
 924:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif
 925:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     
 926:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 927:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = RCC->CFGR & CFGR_SWS_Mask;
 1101              		.loc 1 927 0
 1102 044c 514B     		ldr	r3, .L84
 1103 044e 5B68     		ldr	r3, [r3, #4]
 1104 0450 03F00C03 		and	r3, r3, #12
 1105 0454 7B61     		str	r3, [r7, #20]
 928:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   
 929:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   switch (tmp)
 1106              		.loc 1 929 0
 1107 0456 7B69     		ldr	r3, [r7, #20]
 1108 0458 042B     		cmp	r3, #4
 1109 045a 07D0     		beq	.L77
 1110 045c 082B     		cmp	r3, #8
 1111 045e 09D0     		beq	.L78
 1112 0460 002B     		cmp	r3, #0
 1113 0462 35D1     		bne	.L83
 1114              	.L76:
 930:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 931:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     case 0x00:  /* HSI used as system clock */
 932:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       RCC_Clocks->SYSCLK_Frequency = HSI_VALUE;
 1115              		.loc 1 932 0
 1116 0464 7B68     		ldr	r3, [r7, #4]
 1117 0466 4C4A     		ldr	r2, .L84+4
 1118 0468 1A60     		str	r2, [r3, #0]
 933:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;
 1119              		.loc 1 933 0
 1120 046a 35E0     		b	.L79
 1121              	.L77:
 934:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     case 0x04:  /* HSE used as system clock */
 935:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       RCC_Clocks->SYSCLK_Frequency = HSE_VALUE;
 1122              		.loc 1 935 0
 1123 046c 7B68     		ldr	r3, [r7, #4]
 1124 046e 4A4A     		ldr	r2, .L84+4
 1125 0470 1A60     		str	r2, [r3, #0]
 936:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;
 1126              		.loc 1 936 0
 1127 0472 31E0     		b	.L79
 1128              	.L78:
 937:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     case 0x08:  /* PLL used as system clock */
 938:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 939:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       /* Get PLL clock source and multiplication factor ----------------------*/
 940:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       pllmull = RCC->CFGR & CFGR_PLLMull_Mask;
 1129              		.loc 1 940 0
 1130 0474 474B     		ldr	r3, .L84
 1131 0476 5B68     		ldr	r3, [r3, #4]
 1132 0478 03F47013 		and	r3, r3, #3932160
 1133 047c 3B61     		str	r3, [r7, #16]
 941:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       pllsource = RCC->CFGR & CFGR_PLLSRC_Mask;
 1134              		.loc 1 941 0
 1135 047e 454B     		ldr	r3, .L84
 1136 0480 5B68     		ldr	r3, [r3, #4]
 1137 0482 03F48033 		and	r3, r3, #65536
 1138 0486 FB60     		str	r3, [r7, #12]
 942:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       
 943:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifndef STM32F10X_CL      
 944:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       pllmull = ( pllmull >> 18) + 2;
 1139              		.loc 1 944 0
 1140 0488 3B69     		ldr	r3, [r7, #16]
 1141 048a 4FEA9343 		lsr	r3, r3, #18
 1142 048e 03F10203 		add	r3, r3, #2
 1143 0492 3B61     		str	r3, [r7, #16]
 945:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       
 946:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       if (pllsource == 0x00)
 1144              		.loc 1 946 0
 1145 0494 FB68     		ldr	r3, [r7, #12]
 1146 0496 002B     		cmp	r3, #0
 1147 0498 06D1     		bne	.L80
 947:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       {/* HSI oscillator clock divided by 2 selected as PLL clock entry */
 948:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         RCC_Clocks->SYSCLK_Frequency = (HSI_VALUE >> 1) * pllmull;
 1148              		.loc 1 948 0
 1149 049a 3B69     		ldr	r3, [r7, #16]
 1150 049c 3F4A     		ldr	r2, .L84+8
 1151 049e 02FB03F2 		mul	r2, r2, r3
 1152 04a2 7B68     		ldr	r3, [r7, #4]
 1153 04a4 1A60     		str	r2, [r3, #0]
 949:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       }
 950:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       else
 951:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       {
 952:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL)
 953:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****        prediv1factor = (RCC->CFGR2 & CFGR2_PREDIV1) + 1;
 954:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****        /* HSE oscillator clock selected as PREDIV1 clock entry */
 955:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****        RCC_Clocks->SYSCLK_Frequency = (HSE_VALUE / prediv1factor) * pllmull; 
 956:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #else
 957:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         /* HSE selected as PLL clock entry */
 958:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         if ((RCC->CFGR & CFGR_PLLXTPRE_Mask) != (uint32_t)RESET)
 959:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         {/* HSE oscillator clock divided by 2 */
 960:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****           RCC_Clocks->SYSCLK_Frequency = (HSE_VALUE >> 1) * pllmull;
 961:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         }
 962:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         else
 963:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         {
 964:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****           RCC_Clocks->SYSCLK_Frequency = HSE_VALUE * pllmull;
 965:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         }
 966:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #endif
 967:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       }
 968:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #else
 969:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       pllmull = pllmull >> 18;
 970:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       
 971:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       if (pllmull != 0x0D)
 972:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       {
 973:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****          pllmull += 2;
 974:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       }
 975:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       else
 976:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       { /* PLL multiplication factor = PLL input clock * 6.5 */
 977:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         pllmull = 13 / 2; 
 978:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       }
 979:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****             
 980:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       if (pllsource == 0x00)
 981:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       {/* HSI oscillator clock divided by 2 selected as PLL clock entry */
 982:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         RCC_Clocks->SYSCLK_Frequency = (HSI_VALUE >> 1) * pllmull;
 983:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       }
 984:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       else
 985:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       {/* PREDIV1 selected as PLL clock entry */
 986:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         
 987:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         /* Get PREDIV1 clock source and division factor */
 988:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         prediv1source = RCC->CFGR2 & CFGR2_PREDIV1SRC;
 989:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         prediv1factor = (RCC->CFGR2 & CFGR2_PREDIV1) + 1;
 990:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         
 991:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         if (prediv1source == 0)
 992:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         { /* HSE oscillator clock selected as PREDIV1 clock entry */
 993:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****           RCC_Clocks->SYSCLK_Frequency = (HSE_VALUE / prediv1factor) * pllmull;          
 994:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         }
 995:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         else
 996:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         {/* PLL2 clock selected as PREDIV1 clock entry */
 997:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****           
 998:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****           /* Get PREDIV2 division factor and PLL2 multiplication factor */
 999:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****           prediv2factor = ((RCC->CFGR2 & CFGR2_PREDIV2) >> 4) + 1;
1000:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****           pll2mull = ((RCC->CFGR2 & CFGR2_PLL2MUL) >> 8 ) + 2; 
1001:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****           RCC_Clocks->SYSCLK_Frequency = (((HSE_VALUE / prediv2factor) * pll2mull) / prediv1factor)
1002:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         }
1003:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       }
1004:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
1005:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;
 1154              		.loc 1 1005 0
 1155 04a6 17E0     		b	.L79
 1156              	.L80:
 958:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         if ((RCC->CFGR & CFGR_PLLXTPRE_Mask) != (uint32_t)RESET)
 1157              		.loc 1 958 0
 1158 04a8 3A4B     		ldr	r3, .L84
 1159 04aa 5B68     		ldr	r3, [r3, #4]
 1160 04ac 03F40033 		and	r3, r3, #131072
 1161 04b0 002B     		cmp	r3, #0
 1162 04b2 06D0     		beq	.L82
 960:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****           RCC_Clocks->SYSCLK_Frequency = (HSE_VALUE >> 1) * pllmull;
 1163              		.loc 1 960 0
 1164 04b4 3B69     		ldr	r3, [r7, #16]
 1165 04b6 394A     		ldr	r2, .L84+8
 1166 04b8 02FB03F2 		mul	r2, r2, r3
 1167 04bc 7B68     		ldr	r3, [r7, #4]
 1168 04be 1A60     		str	r2, [r3, #0]
 1169              		.loc 1 1005 0
 1170 04c0 0AE0     		b	.L79
 1171              	.L82:
 964:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****           RCC_Clocks->SYSCLK_Frequency = HSE_VALUE * pllmull;
 1172              		.loc 1 964 0
 1173 04c2 3B69     		ldr	r3, [r7, #16]
 1174 04c4 344A     		ldr	r2, .L84+4
 1175 04c6 02FB03F2 		mul	r2, r2, r3
 1176 04ca 7B68     		ldr	r3, [r7, #4]
 1177 04cc 1A60     		str	r2, [r3, #0]
 1178              		.loc 1 1005 0
 1179 04ce 03E0     		b	.L79
 1180              	.L83:
1006:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1007:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     default:
1008:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       RCC_Clocks->SYSCLK_Frequency = HSI_VALUE;
 1181              		.loc 1 1008 0
 1182 04d0 7B68     		ldr	r3, [r7, #4]
 1183 04d2 314A     		ldr	r2, .L84+4
 1184 04d4 1A60     		str	r2, [r3, #0]
1009:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;
 1185              		.loc 1 1009 0
 1186 04d6 00BF     		nop
 1187              	.L79:
1010:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1011:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1012:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Compute HCLK, PCLK1, PCLK2 and ADCCLK clocks frequencies ----------------*/
1013:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Get HCLK prescaler */
1014:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = RCC->CFGR & CFGR_HPRE_Set_Mask;
 1188              		.loc 1 1014 0
 1189 04d8 2E4B     		ldr	r3, .L84
 1190 04da 5B68     		ldr	r3, [r3, #4]
 1191 04dc 03F0F003 		and	r3, r3, #240
 1192 04e0 7B61     		str	r3, [r7, #20]
1015:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = tmp >> 4;
 1193              		.loc 1 1015 0
 1194 04e2 7B69     		ldr	r3, [r7, #20]
 1195 04e4 4FEA1313 		lsr	r3, r3, #4
 1196 04e8 7B61     		str	r3, [r7, #20]
1016:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   presc = APBAHBPrescTable[tmp];
 1197              		.loc 1 1016 0
 1198 04ea 2D4A     		ldr	r2, .L84+12
 1199 04ec 7B69     		ldr	r3, [r7, #20]
 1200 04ee D318     		adds	r3, r2, r3
 1201 04f0 1B78     		ldrb	r3, [r3, #0]
 1202 04f2 DBB2     		uxtb	r3, r3
 1203 04f4 BB60     		str	r3, [r7, #8]
1017:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* HCLK clock frequency */
1018:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC_Clocks->HCLK_Frequency = RCC_Clocks->SYSCLK_Frequency >> presc;
 1204              		.loc 1 1018 0
 1205 04f6 7B68     		ldr	r3, [r7, #4]
 1206 04f8 1A68     		ldr	r2, [r3, #0]
 1207 04fa BB68     		ldr	r3, [r7, #8]
 1208 04fc 22FA03F2 		lsr	r2, r2, r3
 1209 0500 7B68     		ldr	r3, [r7, #4]
 1210 0502 5A60     		str	r2, [r3, #4]
1019:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Get PCLK1 prescaler */
1020:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = RCC->CFGR & CFGR_PPRE1_Set_Mask;
 1211              		.loc 1 1020 0
 1212 0504 234B     		ldr	r3, .L84
 1213 0506 5B68     		ldr	r3, [r3, #4]
 1214 0508 03F4E063 		and	r3, r3, #1792
 1215 050c 7B61     		str	r3, [r7, #20]
1021:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = tmp >> 8;
 1216              		.loc 1 1021 0
 1217 050e 7B69     		ldr	r3, [r7, #20]
 1218 0510 4FEA1323 		lsr	r3, r3, #8
 1219 0514 7B61     		str	r3, [r7, #20]
1022:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   presc = APBAHBPrescTable[tmp];
 1220              		.loc 1 1022 0
 1221 0516 224A     		ldr	r2, .L84+12
 1222 0518 7B69     		ldr	r3, [r7, #20]
 1223 051a D318     		adds	r3, r2, r3
 1224 051c 1B78     		ldrb	r3, [r3, #0]
 1225 051e DBB2     		uxtb	r3, r3
 1226 0520 BB60     		str	r3, [r7, #8]
1023:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* PCLK1 clock frequency */
1024:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC_Clocks->PCLK1_Frequency = RCC_Clocks->HCLK_Frequency >> presc;
 1227              		.loc 1 1024 0
 1228 0522 7B68     		ldr	r3, [r7, #4]
 1229 0524 5A68     		ldr	r2, [r3, #4]
 1230 0526 BB68     		ldr	r3, [r7, #8]
 1231 0528 22FA03F2 		lsr	r2, r2, r3
 1232 052c 7B68     		ldr	r3, [r7, #4]
 1233 052e 9A60     		str	r2, [r3, #8]
1025:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Get PCLK2 prescaler */
1026:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = RCC->CFGR & CFGR_PPRE2_Set_Mask;
 1234              		.loc 1 1026 0
 1235 0530 184B     		ldr	r3, .L84
 1236 0532 5B68     		ldr	r3, [r3, #4]
 1237 0534 03F46053 		and	r3, r3, #14336
 1238 0538 7B61     		str	r3, [r7, #20]
1027:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = tmp >> 11;
 1239              		.loc 1 1027 0
 1240 053a 7B69     		ldr	r3, [r7, #20]
 1241 053c 4FEAD323 		lsr	r3, r3, #11
 1242 0540 7B61     		str	r3, [r7, #20]
1028:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   presc = APBAHBPrescTable[tmp];
 1243              		.loc 1 1028 0
 1244 0542 174A     		ldr	r2, .L84+12
 1245 0544 7B69     		ldr	r3, [r7, #20]
 1246 0546 D318     		adds	r3, r2, r3
 1247 0548 1B78     		ldrb	r3, [r3, #0]
 1248 054a DBB2     		uxtb	r3, r3
 1249 054c BB60     		str	r3, [r7, #8]
1029:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* PCLK2 clock frequency */
1030:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC_Clocks->PCLK2_Frequency = RCC_Clocks->HCLK_Frequency >> presc;
 1250              		.loc 1 1030 0
 1251 054e 7B68     		ldr	r3, [r7, #4]
 1252 0550 5A68     		ldr	r2, [r3, #4]
 1253 0552 BB68     		ldr	r3, [r7, #8]
 1254 0554 22FA03F2 		lsr	r2, r2, r3
 1255 0558 7B68     		ldr	r3, [r7, #4]
 1256 055a DA60     		str	r2, [r3, #12]
1031:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Get ADCCLK prescaler */
1032:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = RCC->CFGR & CFGR_ADCPRE_Set_Mask;
 1257              		.loc 1 1032 0
 1258 055c 0D4B     		ldr	r3, .L84
 1259 055e 5B68     		ldr	r3, [r3, #4]
 1260 0560 03F44043 		and	r3, r3, #49152
 1261 0564 7B61     		str	r3, [r7, #20]
1033:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = tmp >> 14;
 1262              		.loc 1 1033 0
 1263 0566 7B69     		ldr	r3, [r7, #20]
 1264 0568 4FEA9333 		lsr	r3, r3, #14
 1265 056c 7B61     		str	r3, [r7, #20]
1034:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   presc = ADCPrescTable[tmp];
 1266              		.loc 1 1034 0
 1267 056e 0D4A     		ldr	r2, .L84+16
 1268 0570 7B69     		ldr	r3, [r7, #20]
 1269 0572 D318     		adds	r3, r2, r3
 1270 0574 1B78     		ldrb	r3, [r3, #0]
 1271 0576 DBB2     		uxtb	r3, r3
 1272 0578 BB60     		str	r3, [r7, #8]
1035:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* ADCCLK clock frequency */
1036:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC_Clocks->ADCCLK_Frequency = RCC_Clocks->PCLK2_Frequency / presc;
 1273              		.loc 1 1036 0
 1274 057a 7B68     		ldr	r3, [r7, #4]
 1275 057c DA68     		ldr	r2, [r3, #12]
 1276 057e BB68     		ldr	r3, [r7, #8]
 1277 0580 B2FBF3F2 		udiv	r2, r2, r3
 1278 0584 7B68     		ldr	r3, [r7, #4]
 1279 0586 1A61     		str	r2, [r3, #16]
1037:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 1280              		.loc 1 1037 0
 1281 0588 07F11C07 		add	r7, r7, #28
 1282 058c BD46     		mov	sp, r7
 1283 058e 80BC     		pop	{r7}
 1284 0590 7047     		bx	lr
 1285              	.L85:
 1286 0592 00BF     		.align	2
 1287              	.L84:
 1288 0594 00100240 		.word	1073876992
 1289 0598 00127A00 		.word	8000000
 1290 059c 00093D00 		.word	4000000
 1291 05a0 00000000 		.word	APBAHBPrescTable
 1292 05a4 10000000 		.word	ADCPrescTable
 1293              		.cfi_endproc
 1294              	.LFE74:
 1296              		.align	2
 1297              		.global	RCC_AHBPeriphClockCmd
 1298              		.thumb
 1299              		.thumb_func
 1301              	RCC_AHBPeriphClockCmd:
 1302              	.LFB75:
1038:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1039:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1040:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the AHB peripheral clock.
1041:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_AHBPeriph: specifies the AHB peripheral to gates its clock.
1042:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   
1043:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be any combination
1044:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   of the following values:        
1045:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_DMA1
1046:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_DMA2
1047:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_SRAM
1048:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_FLITF
1049:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_CRC
1050:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_OTG_FS    
1051:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_ETH_MAC   
1052:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_ETH_MAC_Tx
1053:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_ETH_MAC_Rx
1054:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * 
1055:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be any combination of the 
1056:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   following values:        
1057:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_DMA1
1058:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_DMA2
1059:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_SRAM
1060:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_FLITF
1061:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_CRC
1062:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_FSMC
1063:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_SDIO
1064:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   
1065:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note SRAM and FLITF clock can be disabled only during sleep mode.
1066:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
1067:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1068:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1069:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1070:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_AHBPeriphClockCmd(uint32_t RCC_AHBPeriph, FunctionalState NewState)
1071:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 1303              		.loc 1 1071 0
 1304              		.cfi_startproc
 1305              		@ args = 0, pretend = 0, frame = 8
 1306              		@ frame_needed = 1, uses_anonymous_args = 0
 1307              		@ link register save eliminated.
 1308 05a8 80B4     		push	{r7}
 1309              	.LCFI58:
 1310              		.cfi_def_cfa_offset 4
 1311              		.cfi_offset 7, -4
 1312 05aa 83B0     		sub	sp, sp, #12
 1313              	.LCFI59:
 1314              		.cfi_def_cfa_offset 16
 1315 05ac 00AF     		add	r7, sp, #0
 1316              	.LCFI60:
 1317              		.cfi_def_cfa_register 7
 1318 05ae 7860     		str	r0, [r7, #4]
 1319 05b0 0B46     		mov	r3, r1
 1320 05b2 FB70     		strb	r3, [r7, #3]
1072:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1073:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_AHB_PERIPH(RCC_AHBPeriph));
1074:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1075:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1076:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
 1321              		.loc 1 1076 0
 1322 05b4 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1323 05b6 002B     		cmp	r3, #0
 1324 05b8 06D0     		beq	.L87
1077:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1078:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->AHBENR |= RCC_AHBPeriph;
 1325              		.loc 1 1078 0
 1326 05ba 0A4B     		ldr	r3, .L89
 1327 05bc 094A     		ldr	r2, .L89
 1328 05be 5169     		ldr	r1, [r2, #20]
 1329 05c0 7A68     		ldr	r2, [r7, #4]
 1330 05c2 0A43     		orrs	r2, r2, r1
 1331 05c4 5A61     		str	r2, [r3, #20]
 1332 05c6 07E0     		b	.L86
 1333              	.L87:
1079:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1080:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else
1081:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1082:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->AHBENR &= ~RCC_AHBPeriph;
 1334              		.loc 1 1082 0
 1335 05c8 064B     		ldr	r3, .L89
 1336 05ca 064A     		ldr	r2, .L89
 1337 05cc 5169     		ldr	r1, [r2, #20]
 1338 05ce 7A68     		ldr	r2, [r7, #4]
 1339 05d0 6FEA0202 		mvn	r2, r2
 1340 05d4 0A40     		ands	r2, r2, r1
 1341 05d6 5A61     		str	r2, [r3, #20]
 1342              	.L86:
1083:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1084:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 1343              		.loc 1 1084 0
 1344 05d8 07F10C07 		add	r7, r7, #12
 1345 05dc BD46     		mov	sp, r7
 1346 05de 80BC     		pop	{r7}
 1347 05e0 7047     		bx	lr
 1348              	.L90:
 1349 05e2 00BF     		.align	2
 1350              	.L89:
 1351 05e4 00100240 		.word	1073876992
 1352              		.cfi_endproc
 1353              	.LFE75:
 1355              		.align	2
 1356              		.global	RCC_APB2PeriphClockCmd
 1357              		.thumb
 1358              		.thumb_func
 1360              	RCC_APB2PeriphClockCmd:
 1361              	.LFB76:
1085:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1086:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1087:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the High Speed APB (APB2) peripheral clock.
1088:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_APB2Periph: specifies the APB2 peripheral to gates its clock.
1089:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be any combination of the following values:
1090:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_APB2Periph_AFIO, RCC_APB2Periph_GPIOA, RCC_APB2Periph_GPIOB,
1091:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_GPIOC, RCC_APB2Periph_GPIOD, RCC_APB2Periph_GPIOE,
1092:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_GPIOF, RCC_APB2Periph_GPIOG, RCC_APB2Periph_ADC1,
1093:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_ADC2, RCC_APB2Periph_TIM1, RCC_APB2Periph_SPI1,
1094:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM8, RCC_APB2Periph_USART1, RCC_APB2Periph_ADC3,
1095:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM15, RCC_APB2Periph_TIM16, RCC_APB2Periph_TIM17,
1096:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM9, RCC_APB2Periph_TIM10, RCC_APB2Periph_TIM11     
1097:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
1098:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1099:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1100:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1101:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_APB2PeriphClockCmd(uint32_t RCC_APB2Periph, FunctionalState NewState)
1102:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 1362              		.loc 1 1102 0
 1363              		.cfi_startproc
 1364              		@ args = 0, pretend = 0, frame = 8
 1365              		@ frame_needed = 1, uses_anonymous_args = 0
 1366              		@ link register save eliminated.
 1367 05e8 80B4     		push	{r7}
 1368              	.LCFI61:
 1369              		.cfi_def_cfa_offset 4
 1370              		.cfi_offset 7, -4
 1371 05ea 83B0     		sub	sp, sp, #12
 1372              	.LCFI62:
 1373              		.cfi_def_cfa_offset 16
 1374 05ec 00AF     		add	r7, sp, #0
 1375              	.LCFI63:
 1376              		.cfi_def_cfa_register 7
 1377 05ee 7860     		str	r0, [r7, #4]
 1378 05f0 0B46     		mov	r3, r1
 1379 05f2 FB70     		strb	r3, [r7, #3]
1103:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1104:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_APB2_PERIPH(RCC_APB2Periph));
1105:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1106:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
 1380              		.loc 1 1106 0
 1381 05f4 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1382 05f6 002B     		cmp	r3, #0
 1383 05f8 06D0     		beq	.L92
1107:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1108:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->APB2ENR |= RCC_APB2Periph;
 1384              		.loc 1 1108 0
 1385 05fa 0A4B     		ldr	r3, .L94
 1386 05fc 094A     		ldr	r2, .L94
 1387 05fe 9169     		ldr	r1, [r2, #24]
 1388 0600 7A68     		ldr	r2, [r7, #4]
 1389 0602 0A43     		orrs	r2, r2, r1
 1390 0604 9A61     		str	r2, [r3, #24]
 1391 0606 07E0     		b	.L91
 1392              	.L92:
1109:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1110:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else
1111:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1112:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->APB2ENR &= ~RCC_APB2Periph;
 1393              		.loc 1 1112 0
 1394 0608 064B     		ldr	r3, .L94
 1395 060a 064A     		ldr	r2, .L94
 1396 060c 9169     		ldr	r1, [r2, #24]
 1397 060e 7A68     		ldr	r2, [r7, #4]
 1398 0610 6FEA0202 		mvn	r2, r2
 1399 0614 0A40     		ands	r2, r2, r1
 1400 0616 9A61     		str	r2, [r3, #24]
 1401              	.L91:
1113:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1114:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 1402              		.loc 1 1114 0
 1403 0618 07F10C07 		add	r7, r7, #12
 1404 061c BD46     		mov	sp, r7
 1405 061e 80BC     		pop	{r7}
 1406 0620 7047     		bx	lr
 1407              	.L95:
 1408 0622 00BF     		.align	2
 1409              	.L94:
 1410 0624 00100240 		.word	1073876992
 1411              		.cfi_endproc
 1412              	.LFE76:
 1414              		.align	2
 1415              		.global	RCC_APB1PeriphClockCmd
 1416              		.thumb
 1417              		.thumb_func
 1419              	RCC_APB1PeriphClockCmd:
 1420              	.LFB77:
1115:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1116:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1117:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the Low Speed APB (APB1) peripheral clock.
1118:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_APB1Periph: specifies the APB1 peripheral to gates its clock.
1119:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be any combination of the following values:
1120:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_APB1Periph_TIM2, RCC_APB1Periph_TIM3, RCC_APB1Periph_TIM4,
1121:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_TIM5, RCC_APB1Periph_TIM6, RCC_APB1Periph_TIM7,
1122:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_WWDG, RCC_APB1Periph_SPI2, RCC_APB1Periph_SPI3,
1123:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USART2, RCC_APB1Periph_USART3, RCC_APB1Periph_USART4, 
1124:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USART5, RCC_APB1Periph_I2C1, RCC_APB1Periph_I2C2,
1125:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USB, RCC_APB1Periph_CAN1, RCC_APB1Periph_BKP,
1126:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_PWR, RCC_APB1Periph_DAC, RCC_APB1Periph_CEC,
1127:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_TIM12, RCC_APB1Periph_TIM13, RCC_APB1Periph_TIM14
1128:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
1129:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1130:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1131:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1132:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_APB1PeriphClockCmd(uint32_t RCC_APB1Periph, FunctionalState NewState)
1133:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 1421              		.loc 1 1133 0
 1422              		.cfi_startproc
 1423              		@ args = 0, pretend = 0, frame = 8
 1424              		@ frame_needed = 1, uses_anonymous_args = 0
 1425              		@ link register save eliminated.
 1426 0628 80B4     		push	{r7}
 1427              	.LCFI64:
 1428              		.cfi_def_cfa_offset 4
 1429              		.cfi_offset 7, -4
 1430 062a 83B0     		sub	sp, sp, #12
 1431              	.LCFI65:
 1432              		.cfi_def_cfa_offset 16
 1433 062c 00AF     		add	r7, sp, #0
 1434              	.LCFI66:
 1435              		.cfi_def_cfa_register 7
 1436 062e 7860     		str	r0, [r7, #4]
 1437 0630 0B46     		mov	r3, r1
 1438 0632 FB70     		strb	r3, [r7, #3]
1134:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1135:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_APB1_PERIPH(RCC_APB1Periph));
1136:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1137:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
 1439              		.loc 1 1137 0
 1440 0634 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1441 0636 002B     		cmp	r3, #0
 1442 0638 06D0     		beq	.L97
1138:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1139:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->APB1ENR |= RCC_APB1Periph;
 1443              		.loc 1 1139 0
 1444 063a 0A4B     		ldr	r3, .L99
 1445 063c 094A     		ldr	r2, .L99
 1446 063e D169     		ldr	r1, [r2, #28]
 1447 0640 7A68     		ldr	r2, [r7, #4]
 1448 0642 0A43     		orrs	r2, r2, r1
 1449 0644 DA61     		str	r2, [r3, #28]
 1450 0646 07E0     		b	.L96
 1451              	.L97:
1140:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1141:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else
1142:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1143:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->APB1ENR &= ~RCC_APB1Periph;
 1452              		.loc 1 1143 0
 1453 0648 064B     		ldr	r3, .L99
 1454 064a 064A     		ldr	r2, .L99
 1455 064c D169     		ldr	r1, [r2, #28]
 1456 064e 7A68     		ldr	r2, [r7, #4]
 1457 0650 6FEA0202 		mvn	r2, r2
 1458 0654 0A40     		ands	r2, r2, r1
 1459 0656 DA61     		str	r2, [r3, #28]
 1460              	.L96:
1144:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1145:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 1461              		.loc 1 1145 0
 1462 0658 07F10C07 		add	r7, r7, #12
 1463 065c BD46     		mov	sp, r7
 1464 065e 80BC     		pop	{r7}
 1465 0660 7047     		bx	lr
 1466              	.L100:
 1467 0662 00BF     		.align	2
 1468              	.L99:
 1469 0664 00100240 		.word	1073876992
 1470              		.cfi_endproc
 1471              	.LFE77:
 1473              		.align	2
 1474              		.global	RCC_APB2PeriphResetCmd
 1475              		.thumb
 1476              		.thumb_func
 1478              	RCC_APB2PeriphResetCmd:
 1479              	.LFB78:
1146:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1147:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
1148:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1149:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Forces or releases AHB peripheral reset.
1150:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   This function applies only to STM32 Connectivity line devices.
1151:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_AHBPeriph: specifies the AHB peripheral to reset.
1152:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be any combination of the following values:
1153:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_OTG_FS 
1154:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_ETH_MAC
1155:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral reset.
1156:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1157:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1158:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1159:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_AHBPeriphResetCmd(uint32_t RCC_AHBPeriph, FunctionalState NewState)
1160:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
1161:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1162:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_AHB_PERIPH_RESET(RCC_AHBPeriph));
1163:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1164:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1165:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
1166:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1167:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->AHBRSTR |= RCC_AHBPeriph;
1168:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1169:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else
1170:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1171:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->AHBRSTR &= ~RCC_AHBPeriph;
1172:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1173:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
1174:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
1175:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1176:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1177:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Forces or releases High Speed APB (APB2) peripheral reset.
1178:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_APB2Periph: specifies the APB2 peripheral to reset.
1179:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be any combination of the following values:
1180:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_APB2Periph_AFIO, RCC_APB2Periph_GPIOA, RCC_APB2Periph_GPIOB,
1181:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_GPIOC, RCC_APB2Periph_GPIOD, RCC_APB2Periph_GPIOE,
1182:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_GPIOF, RCC_APB2Periph_GPIOG, RCC_APB2Periph_ADC1,
1183:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_ADC2, RCC_APB2Periph_TIM1, RCC_APB2Periph_SPI1,
1184:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM8, RCC_APB2Periph_USART1, RCC_APB2Periph_ADC3,
1185:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM15, RCC_APB2Periph_TIM16, RCC_APB2Periph_TIM17,
1186:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM9, RCC_APB2Periph_TIM10, RCC_APB2Periph_TIM11  
1187:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral reset.
1188:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1189:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1190:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1191:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_APB2PeriphResetCmd(uint32_t RCC_APB2Periph, FunctionalState NewState)
1192:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 1480              		.loc 1 1192 0
 1481              		.cfi_startproc
 1482              		@ args = 0, pretend = 0, frame = 8
 1483              		@ frame_needed = 1, uses_anonymous_args = 0
 1484              		@ link register save eliminated.
 1485 0668 80B4     		push	{r7}
 1486              	.LCFI67:
 1487              		.cfi_def_cfa_offset 4
 1488              		.cfi_offset 7, -4
 1489 066a 83B0     		sub	sp, sp, #12
 1490              	.LCFI68:
 1491              		.cfi_def_cfa_offset 16
 1492 066c 00AF     		add	r7, sp, #0
 1493              	.LCFI69:
 1494              		.cfi_def_cfa_register 7
 1495 066e 7860     		str	r0, [r7, #4]
 1496 0670 0B46     		mov	r3, r1
 1497 0672 FB70     		strb	r3, [r7, #3]
1193:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1194:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_APB2_PERIPH(RCC_APB2Periph));
1195:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1196:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
 1498              		.loc 1 1196 0
 1499 0674 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1500 0676 002B     		cmp	r3, #0
 1501 0678 06D0     		beq	.L102
1197:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1198:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->APB2RSTR |= RCC_APB2Periph;
 1502              		.loc 1 1198 0
 1503 067a 0A4B     		ldr	r3, .L104
 1504 067c 094A     		ldr	r2, .L104
 1505 067e D168     		ldr	r1, [r2, #12]
 1506 0680 7A68     		ldr	r2, [r7, #4]
 1507 0682 0A43     		orrs	r2, r2, r1
 1508 0684 DA60     		str	r2, [r3, #12]
 1509 0686 07E0     		b	.L101
 1510              	.L102:
1199:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1200:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else
1201:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1202:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->APB2RSTR &= ~RCC_APB2Periph;
 1511              		.loc 1 1202 0
 1512 0688 064B     		ldr	r3, .L104
 1513 068a 064A     		ldr	r2, .L104
 1514 068c D168     		ldr	r1, [r2, #12]
 1515 068e 7A68     		ldr	r2, [r7, #4]
 1516 0690 6FEA0202 		mvn	r2, r2
 1517 0694 0A40     		ands	r2, r2, r1
 1518 0696 DA60     		str	r2, [r3, #12]
 1519              	.L101:
1203:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1204:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 1520              		.loc 1 1204 0
 1521 0698 07F10C07 		add	r7, r7, #12
 1522 069c BD46     		mov	sp, r7
 1523 069e 80BC     		pop	{r7}
 1524 06a0 7047     		bx	lr
 1525              	.L105:
 1526 06a2 00BF     		.align	2
 1527              	.L104:
 1528 06a4 00100240 		.word	1073876992
 1529              		.cfi_endproc
 1530              	.LFE78:
 1532              		.align	2
 1533              		.global	RCC_APB1PeriphResetCmd
 1534              		.thumb
 1535              		.thumb_func
 1537              	RCC_APB1PeriphResetCmd:
 1538              	.LFB79:
1205:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1206:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1207:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Forces or releases Low Speed APB (APB1) peripheral reset.
1208:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_APB1Periph: specifies the APB1 peripheral to reset.
1209:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be any combination of the following values:
1210:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_APB1Periph_TIM2, RCC_APB1Periph_TIM3, RCC_APB1Periph_TIM4,
1211:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_TIM5, RCC_APB1Periph_TIM6, RCC_APB1Periph_TIM7,
1212:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_WWDG, RCC_APB1Periph_SPI2, RCC_APB1Periph_SPI3,
1213:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USART2, RCC_APB1Periph_USART3, RCC_APB1Periph_USART4, 
1214:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USART5, RCC_APB1Periph_I2C1, RCC_APB1Periph_I2C2,
1215:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USB, RCC_APB1Periph_CAN1, RCC_APB1Periph_BKP,
1216:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_PWR, RCC_APB1Periph_DAC, RCC_APB1Periph_CEC,
1217:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_TIM12, RCC_APB1Periph_TIM13, RCC_APB1Periph_TIM14  
1218:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
1219:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1220:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1221:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1222:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_APB1PeriphResetCmd(uint32_t RCC_APB1Periph, FunctionalState NewState)
1223:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 1539              		.loc 1 1223 0
 1540              		.cfi_startproc
 1541              		@ args = 0, pretend = 0, frame = 8
 1542              		@ frame_needed = 1, uses_anonymous_args = 0
 1543              		@ link register save eliminated.
 1544 06a8 80B4     		push	{r7}
 1545              	.LCFI70:
 1546              		.cfi_def_cfa_offset 4
 1547              		.cfi_offset 7, -4
 1548 06aa 83B0     		sub	sp, sp, #12
 1549              	.LCFI71:
 1550              		.cfi_def_cfa_offset 16
 1551 06ac 00AF     		add	r7, sp, #0
 1552              	.LCFI72:
 1553              		.cfi_def_cfa_register 7
 1554 06ae 7860     		str	r0, [r7, #4]
 1555 06b0 0B46     		mov	r3, r1
 1556 06b2 FB70     		strb	r3, [r7, #3]
1224:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1225:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_APB1_PERIPH(RCC_APB1Periph));
1226:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1227:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
 1557              		.loc 1 1227 0
 1558 06b4 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1559 06b6 002B     		cmp	r3, #0
 1560 06b8 06D0     		beq	.L107
1228:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1229:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->APB1RSTR |= RCC_APB1Periph;
 1561              		.loc 1 1229 0
 1562 06ba 0A4B     		ldr	r3, .L109
 1563 06bc 094A     		ldr	r2, .L109
 1564 06be 1169     		ldr	r1, [r2, #16]
 1565 06c0 7A68     		ldr	r2, [r7, #4]
 1566 06c2 0A43     		orrs	r2, r2, r1
 1567 06c4 1A61     		str	r2, [r3, #16]
 1568 06c6 07E0     		b	.L106
 1569              	.L107:
1230:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1231:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else
1232:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1233:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->APB1RSTR &= ~RCC_APB1Periph;
 1570              		.loc 1 1233 0
 1571 06c8 064B     		ldr	r3, .L109
 1572 06ca 064A     		ldr	r2, .L109
 1573 06cc 1169     		ldr	r1, [r2, #16]
 1574 06ce 7A68     		ldr	r2, [r7, #4]
 1575 06d0 6FEA0202 		mvn	r2, r2
 1576 06d4 0A40     		ands	r2, r2, r1
 1577 06d6 1A61     		str	r2, [r3, #16]
 1578              	.L106:
1234:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1235:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 1579              		.loc 1 1235 0
 1580 06d8 07F10C07 		add	r7, r7, #12
 1581 06dc BD46     		mov	sp, r7
 1582 06de 80BC     		pop	{r7}
 1583 06e0 7047     		bx	lr
 1584              	.L110:
 1585 06e2 00BF     		.align	2
 1586              	.L109:
 1587 06e4 00100240 		.word	1073876992
 1588              		.cfi_endproc
 1589              	.LFE79:
 1591              		.align	2
 1592              		.global	RCC_BackupResetCmd
 1593              		.thumb
 1594              		.thumb_func
 1596              	RCC_BackupResetCmd:
 1597              	.LFB80:
1236:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1237:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1238:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Forces or releases the Backup domain reset.
1239:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the Backup domain reset.
1240:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1241:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1242:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1243:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_BackupResetCmd(FunctionalState NewState)
1244:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 1598              		.loc 1 1244 0
 1599              		.cfi_startproc
 1600              		@ args = 0, pretend = 0, frame = 8
 1601              		@ frame_needed = 1, uses_anonymous_args = 0
 1602              		@ link register save eliminated.
 1603 06e8 80B4     		push	{r7}
 1604              	.LCFI73:
 1605              		.cfi_def_cfa_offset 4
 1606              		.cfi_offset 7, -4
 1607 06ea 83B0     		sub	sp, sp, #12
 1608              	.LCFI74:
 1609              		.cfi_def_cfa_offset 16
 1610 06ec 00AF     		add	r7, sp, #0
 1611              	.LCFI75:
 1612              		.cfi_def_cfa_register 7
 1613 06ee 0346     		mov	r3, r0
 1614 06f0 FB71     		strb	r3, [r7, #7]
1245:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1246:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1247:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) BDCR_BDRST_BB = (uint32_t)NewState;
 1615              		.loc 1 1247 0
 1616 06f2 044B     		ldr	r3, .L112
 1617 06f4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1618 06f6 1A60     		str	r2, [r3, #0]
1248:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 1619              		.loc 1 1248 0
 1620 06f8 07F10C07 		add	r7, r7, #12
 1621 06fc BD46     		mov	sp, r7
 1622 06fe 80BC     		pop	{r7}
 1623 0700 7047     		bx	lr
 1624              	.L113:
 1625 0702 00BF     		.align	2
 1626              	.L112:
 1627 0704 40044242 		.word	1111622720
 1628              		.cfi_endproc
 1629              	.LFE80:
 1631              		.align	2
 1632              		.global	RCC_ClockSecuritySystemCmd
 1633              		.thumb
 1634              		.thumb_func
 1636              	RCC_ClockSecuritySystemCmd:
 1637              	.LFB81:
1249:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1250:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1251:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the Clock Security System.
1252:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the Clock Security System..
1253:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1254:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1255:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1256:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_ClockSecuritySystemCmd(FunctionalState NewState)
1257:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 1638              		.loc 1 1257 0
 1639              		.cfi_startproc
 1640              		@ args = 0, pretend = 0, frame = 8
 1641              		@ frame_needed = 1, uses_anonymous_args = 0
 1642              		@ link register save eliminated.
 1643 0708 80B4     		push	{r7}
 1644              	.LCFI76:
 1645              		.cfi_def_cfa_offset 4
 1646              		.cfi_offset 7, -4
 1647 070a 83B0     		sub	sp, sp, #12
 1648              	.LCFI77:
 1649              		.cfi_def_cfa_offset 16
 1650 070c 00AF     		add	r7, sp, #0
 1651              	.LCFI78:
 1652              		.cfi_def_cfa_register 7
 1653 070e 0346     		mov	r3, r0
 1654 0710 FB71     		strb	r3, [r7, #7]
1258:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1259:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1260:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CR_CSSON_BB = (uint32_t)NewState;
 1655              		.loc 1 1260 0
 1656 0712 044B     		ldr	r3, .L115
 1657 0714 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1658 0716 1A60     		str	r2, [r3, #0]
1261:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 1659              		.loc 1 1261 0
 1660 0718 07F10C07 		add	r7, r7, #12
 1661 071c BD46     		mov	sp, r7
 1662 071e 80BC     		pop	{r7}
 1663 0720 7047     		bx	lr
 1664              	.L116:
 1665 0722 00BF     		.align	2
 1666              	.L115:
 1667 0724 4C004242 		.word	1111621708
 1668              		.cfi_endproc
 1669              	.LFE81:
 1671              		.align	2
 1672              		.global	RCC_MCOConfig
 1673              		.thumb
 1674              		.thumb_func
 1676              	RCC_MCOConfig:
 1677              	.LFB82:
1262:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1263:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1264:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Selects the clock source to output on MCO pin.
1265:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_MCO: specifies the clock source to output.
1266:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   
1267:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be one of the
1268:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   following values:       
1269:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_NoClock: No clock selected
1270:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_SYSCLK: System clock selected
1271:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_HSI: HSI oscillator clock selected
1272:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_HSE: HSE oscillator clock selected
1273:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_PLLCLK_Div2: PLL clock divided by 2 selected
1274:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_PLL2CLK: PLL2 clock selected                     
1275:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_PLL3CLK_Div2: PLL3 clock divided by 2 selected   
1276:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_XT1: External 3-25 MHz oscillator clock selected  
1277:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_PLL3CLK: PLL3 clock selected 
1278:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * 
1279:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For  @b other_STM32_devices, this parameter can be one of the following values:        
1280:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_NoClock: No clock selected
1281:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_SYSCLK: System clock selected
1282:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_HSI: HSI oscillator clock selected
1283:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_HSE: HSE oscillator clock selected
1284:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_PLLCLK_Div2: PLL clock divided by 2 selected
1285:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   
1286:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1287:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1288:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_MCOConfig(uint8_t RCC_MCO)
1289:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 1678              		.loc 1 1289 0
 1679              		.cfi_startproc
 1680              		@ args = 0, pretend = 0, frame = 8
 1681              		@ frame_needed = 1, uses_anonymous_args = 0
 1682              		@ link register save eliminated.
 1683 0728 80B4     		push	{r7}
 1684              	.LCFI79:
 1685              		.cfi_def_cfa_offset 4
 1686              		.cfi_offset 7, -4
 1687 072a 83B0     		sub	sp, sp, #12
 1688              	.LCFI80:
 1689              		.cfi_def_cfa_offset 16
 1690 072c 00AF     		add	r7, sp, #0
 1691              	.LCFI81:
 1692              		.cfi_def_cfa_register 7
 1693 072e 0346     		mov	r3, r0
 1694 0730 FB71     		strb	r3, [r7, #7]
1290:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1291:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_MCO(RCC_MCO));
1292:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1293:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Perform Byte access to MCO bits to select the MCO source */
1294:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint8_t *) CFGR_BYTE4_ADDRESS = RCC_MCO;
 1695              		.loc 1 1294 0
 1696 0732 044B     		ldr	r3, .L118
 1697 0734 FA79     		ldrb	r2, [r7, #7]
 1698 0736 1A70     		strb	r2, [r3, #0]
1295:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 1699              		.loc 1 1295 0
 1700 0738 07F10C07 		add	r7, r7, #12
 1701 073c BD46     		mov	sp, r7
 1702 073e 80BC     		pop	{r7}
 1703 0740 7047     		bx	lr
 1704              	.L119:
 1705 0742 00BF     		.align	2
 1706              	.L118:
 1707 0744 07100240 		.word	1073876999
 1708              		.cfi_endproc
 1709              	.LFE82:
 1711              		.align	2
 1712              		.global	RCC_GetFlagStatus
 1713              		.thumb
 1714              		.thumb_func
 1716              	RCC_GetFlagStatus:
 1717              	.LFB83:
1296:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1297:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1298:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Checks whether the specified RCC flag is set or not.
1299:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_FLAG: specifies the flag to check.
1300:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   
1301:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be one of the
1302:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   following values:
1303:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_HSIRDY: HSI oscillator clock ready
1304:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_HSERDY: HSE oscillator clock ready
1305:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PLLRDY: PLL clock ready
1306:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PLL2RDY: PLL2 clock ready      
1307:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PLL3RDY: PLL3 clock ready                           
1308:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LSERDY: LSE oscillator clock ready
1309:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LSIRDY: LSI oscillator clock ready
1310:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PINRST: Pin reset
1311:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PORRST: POR/PDR reset
1312:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_SFTRST: Software reset
1313:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_IWDGRST: Independent Watchdog reset
1314:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_WWDGRST: Window Watchdog reset
1315:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LPWRRST: Low Power reset
1316:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * 
1317:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be one of the following values:        
1318:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_HSIRDY: HSI oscillator clock ready
1319:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_HSERDY: HSE oscillator clock ready
1320:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PLLRDY: PLL clock ready
1321:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LSERDY: LSE oscillator clock ready
1322:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LSIRDY: LSI oscillator clock ready
1323:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PINRST: Pin reset
1324:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PORRST: POR/PDR reset
1325:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_SFTRST: Software reset
1326:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_IWDGRST: Independent Watchdog reset
1327:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_WWDGRST: Window Watchdog reset
1328:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LPWRRST: Low Power reset
1329:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   
1330:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval The new state of RCC_FLAG (SET or RESET).
1331:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1332:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** FlagStatus RCC_GetFlagStatus(uint8_t RCC_FLAG)
1333:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 1718              		.loc 1 1333 0
 1719              		.cfi_startproc
 1720              		@ args = 0, pretend = 0, frame = 24
 1721              		@ frame_needed = 1, uses_anonymous_args = 0
 1722              		@ link register save eliminated.
 1723 0748 80B4     		push	{r7}
 1724              	.LCFI82:
 1725              		.cfi_def_cfa_offset 4
 1726              		.cfi_offset 7, -4
 1727 074a 87B0     		sub	sp, sp, #28
 1728              	.LCFI83:
 1729              		.cfi_def_cfa_offset 32
 1730 074c 00AF     		add	r7, sp, #0
 1731              	.LCFI84:
 1732              		.cfi_def_cfa_register 7
 1733 074e 0346     		mov	r3, r0
 1734 0750 FB71     		strb	r3, [r7, #7]
1334:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmp = 0;
 1735              		.loc 1 1334 0
 1736 0752 4FF00003 		mov	r3, #0
 1737 0756 FB60     		str	r3, [r7, #12]
1335:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t statusreg = 0;
 1738              		.loc 1 1335 0
 1739 0758 4FF00003 		mov	r3, #0
 1740 075c 7B61     		str	r3, [r7, #20]
1336:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   FlagStatus bitstatus = RESET;
 1741              		.loc 1 1336 0
 1742 075e 4FF00003 		mov	r3, #0
 1743 0762 FB74     		strb	r3, [r7, #19]
1337:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1338:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_FLAG(RCC_FLAG));
1339:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1340:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Get the RCC register index */
1341:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = RCC_FLAG >> 5;
 1744              		.loc 1 1341 0
 1745 0764 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1746 0766 4FEA5313 		lsr	r3, r3, #5
 1747 076a DBB2     		uxtb	r3, r3
 1748 076c FB60     		str	r3, [r7, #12]
1342:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if (tmp == 1)               /* The flag to check is in CR register */
 1749              		.loc 1 1342 0
 1750 076e FB68     		ldr	r3, [r7, #12]
 1751 0770 012B     		cmp	r3, #1
 1752 0772 03D1     		bne	.L121
1343:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1344:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     statusreg = RCC->CR;
 1753              		.loc 1 1344 0
 1754 0774 134B     		ldr	r3, .L127
 1755 0776 1B68     		ldr	r3, [r3, #0]
 1756 0778 7B61     		str	r3, [r7, #20]
 1757 077a 09E0     		b	.L122
 1758              	.L121:
1345:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1346:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else if (tmp == 2)          /* The flag to check is in BDCR register */
 1759              		.loc 1 1346 0
 1760 077c FB68     		ldr	r3, [r7, #12]
 1761 077e 022B     		cmp	r3, #2
 1762 0780 03D1     		bne	.L123
1347:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1348:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     statusreg = RCC->BDCR;
 1763              		.loc 1 1348 0
 1764 0782 104B     		ldr	r3, .L127
 1765 0784 1B6A     		ldr	r3, [r3, #32]
 1766 0786 7B61     		str	r3, [r7, #20]
 1767 0788 02E0     		b	.L122
 1768              	.L123:
1349:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1350:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else                       /* The flag to check is in CSR register */
1351:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1352:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     statusreg = RCC->CSR;
 1769              		.loc 1 1352 0
 1770 078a 0E4B     		ldr	r3, .L127
 1771 078c 5B6A     		ldr	r3, [r3, #36]
 1772 078e 7B61     		str	r3, [r7, #20]
 1773              	.L122:
1353:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1354:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1355:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Get the flag position */
1356:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = RCC_FLAG & FLAG_Mask;
 1774              		.loc 1 1356 0
 1775 0790 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1776 0792 03F01F03 		and	r3, r3, #31
 1777 0796 FB60     		str	r3, [r7, #12]
1357:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if ((statusreg & ((uint32_t)1 << tmp)) != (uint32_t)RESET)
 1778              		.loc 1 1357 0
 1779 0798 FB68     		ldr	r3, [r7, #12]
 1780 079a 7A69     		ldr	r2, [r7, #20]
 1781 079c 22FA03F3 		lsr	r3, r2, r3
 1782 07a0 03F00103 		and	r3, r3, #1
 1783 07a4 002B     		cmp	r3, #0
 1784 07a6 03D0     		beq	.L124
1358:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1359:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     bitstatus = SET;
 1785              		.loc 1 1359 0
 1786 07a8 4FF00103 		mov	r3, #1
 1787 07ac FB74     		strb	r3, [r7, #19]
 1788 07ae 02E0     		b	.L125
 1789              	.L124:
1360:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1361:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else
1362:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1363:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     bitstatus = RESET;
 1790              		.loc 1 1363 0
 1791 07b0 4FF00003 		mov	r3, #0
 1792 07b4 FB74     		strb	r3, [r7, #19]
 1793              	.L125:
1364:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1365:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1366:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Return the flag status */
1367:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   return bitstatus;
 1794              		.loc 1 1367 0
 1795 07b6 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
1368:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 1796              		.loc 1 1368 0
 1797 07b8 1846     		mov	r0, r3
 1798 07ba 07F11C07 		add	r7, r7, #28
 1799 07be BD46     		mov	sp, r7
 1800 07c0 80BC     		pop	{r7}
 1801 07c2 7047     		bx	lr
 1802              	.L128:
 1803              		.align	2
 1804              	.L127:
 1805 07c4 00100240 		.word	1073876992
 1806              		.cfi_endproc
 1807              	.LFE83:
 1809              		.align	2
 1810              		.global	RCC_ClearFlag
 1811              		.thumb
 1812              		.thumb_func
 1814              	RCC_ClearFlag:
 1815              	.LFB84:
1369:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1370:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1371:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Clears the RCC reset flags.
1372:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   The reset flags are: RCC_FLAG_PINRST, RCC_FLAG_PORRST, RCC_FLAG_SFTRST,
1373:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   RCC_FLAG_IWDGRST, RCC_FLAG_WWDGRST, RCC_FLAG_LPWRRST
1374:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  None
1375:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1376:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1377:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_ClearFlag(void)
1378:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 1816              		.loc 1 1378 0
 1817              		.cfi_startproc
 1818              		@ args = 0, pretend = 0, frame = 0
 1819              		@ frame_needed = 1, uses_anonymous_args = 0
 1820              		@ link register save eliminated.
 1821 07c8 80B4     		push	{r7}
 1822              	.LCFI85:
 1823              		.cfi_def_cfa_offset 4
 1824              		.cfi_offset 7, -4
 1825 07ca 00AF     		add	r7, sp, #0
 1826              	.LCFI86:
 1827              		.cfi_def_cfa_register 7
1379:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set RMVF bit to clear the reset flags */
1380:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CSR |= CSR_RMVF_Set;
 1828              		.loc 1 1380 0
 1829 07cc 044B     		ldr	r3, .L130
 1830 07ce 044A     		ldr	r2, .L130
 1831 07d0 526A     		ldr	r2, [r2, #36]
 1832 07d2 42F08072 		orr	r2, r2, #16777216
 1833 07d6 5A62     		str	r2, [r3, #36]
1381:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 1834              		.loc 1 1381 0
 1835 07d8 BD46     		mov	sp, r7
 1836 07da 80BC     		pop	{r7}
 1837 07dc 7047     		bx	lr
 1838              	.L131:
 1839 07de 00BF     		.align	2
 1840              	.L130:
 1841 07e0 00100240 		.word	1073876992
 1842              		.cfi_endproc
 1843              	.LFE84:
 1845              		.align	2
 1846              		.global	RCC_GetITStatus
 1847              		.thumb
 1848              		.thumb_func
 1850              	RCC_GetITStatus:
 1851              	.LFB85:
1382:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1383:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1384:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Checks whether the specified RCC interrupt has occurred or not.
1385:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_IT: specifies the RCC interrupt source to check.
1386:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   
1387:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be one of the
1388:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   following values:
1389:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
1390:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
1391:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
1392:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
1393:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
1394:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL2RDY: PLL2 ready interrupt 
1395:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL3RDY: PLL3 ready interrupt                      
1396:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_CSS: Clock Security System interrupt
1397:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * 
1398:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be one of the following values:        
1399:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
1400:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
1401:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
1402:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
1403:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
1404:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_CSS: Clock Security System interrupt
1405:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   
1406:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval The new state of RCC_IT (SET or RESET).
1407:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1408:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** ITStatus RCC_GetITStatus(uint8_t RCC_IT)
1409:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 1852              		.loc 1 1409 0
 1853              		.cfi_startproc
 1854              		@ args = 0, pretend = 0, frame = 16
 1855              		@ frame_needed = 1, uses_anonymous_args = 0
 1856              		@ link register save eliminated.
 1857 07e4 80B4     		push	{r7}
 1858              	.LCFI87:
 1859              		.cfi_def_cfa_offset 4
 1860              		.cfi_offset 7, -4
 1861 07e6 85B0     		sub	sp, sp, #20
 1862              	.LCFI88:
 1863              		.cfi_def_cfa_offset 24
 1864 07e8 00AF     		add	r7, sp, #0
 1865              	.LCFI89:
 1866              		.cfi_def_cfa_register 7
 1867 07ea 0346     		mov	r3, r0
 1868 07ec FB71     		strb	r3, [r7, #7]
1410:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   ITStatus bitstatus = RESET;
 1869              		.loc 1 1410 0
 1870 07ee 4FF00003 		mov	r3, #0
 1871 07f2 FB73     		strb	r3, [r7, #15]
1411:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1412:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_GET_IT(RCC_IT));
1413:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1414:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the status of the specified RCC interrupt */
1415:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if ((RCC->CIR & RCC_IT) != (uint32_t)RESET)
 1872              		.loc 1 1415 0
 1873 07f4 094B     		ldr	r3, .L136
 1874 07f6 9A68     		ldr	r2, [r3, #8]
 1875 07f8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1876 07fa 1340     		ands	r3, r3, r2
 1877 07fc 002B     		cmp	r3, #0
 1878 07fe 03D0     		beq	.L133
1416:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1417:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     bitstatus = SET;
 1879              		.loc 1 1417 0
 1880 0800 4FF00103 		mov	r3, #1
 1881 0804 FB73     		strb	r3, [r7, #15]
 1882 0806 02E0     		b	.L134
 1883              	.L133:
1418:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1419:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else
1420:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1421:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     bitstatus = RESET;
 1884              		.loc 1 1421 0
 1885 0808 4FF00003 		mov	r3, #0
 1886 080c FB73     		strb	r3, [r7, #15]
 1887              	.L134:
1422:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1423:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1424:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Return the RCC_IT status */
1425:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   return  bitstatus;
 1888              		.loc 1 1425 0
 1889 080e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1426:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 1890              		.loc 1 1426 0
 1891 0810 1846     		mov	r0, r3
 1892 0812 07F11407 		add	r7, r7, #20
 1893 0816 BD46     		mov	sp, r7
 1894 0818 80BC     		pop	{r7}
 1895 081a 7047     		bx	lr
 1896              	.L137:
 1897              		.align	2
 1898              	.L136:
 1899 081c 00100240 		.word	1073876992
 1900              		.cfi_endproc
 1901              	.LFE85:
 1903              		.align	2
 1904              		.global	RCC_ClearITPendingBit
 1905              		.thumb
 1906              		.thumb_func
 1908              	RCC_ClearITPendingBit:
 1909              	.LFB86:
1427:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1428:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1429:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Clears the RCC's interrupt pending bits.
1430:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_IT: specifies the interrupt pending bit to clear.
1431:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   
1432:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be any combination
1433:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   of the following values:
1434:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
1435:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
1436:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
1437:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
1438:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
1439:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL2RDY: PLL2 ready interrupt 
1440:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL3RDY: PLL3 ready interrupt                      
1441:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_CSS: Clock Security System interrupt
1442:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * 
1443:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be any combination of the
1444:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   following values:        
1445:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
1446:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
1447:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
1448:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
1449:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
1450:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   
1451:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_CSS: Clock Security System interrupt
1452:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1453:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1454:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_ClearITPendingBit(uint8_t RCC_IT)
1455:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 1910              		.loc 1 1455 0
 1911              		.cfi_startproc
 1912              		@ args = 0, pretend = 0, frame = 8
 1913              		@ frame_needed = 1, uses_anonymous_args = 0
 1914              		@ link register save eliminated.
 1915 0820 80B4     		push	{r7}
 1916              	.LCFI90:
 1917              		.cfi_def_cfa_offset 4
 1918              		.cfi_offset 7, -4
 1919 0822 83B0     		sub	sp, sp, #12
 1920              	.LCFI91:
 1921              		.cfi_def_cfa_offset 16
 1922 0824 00AF     		add	r7, sp, #0
 1923              	.LCFI92:
 1924              		.cfi_def_cfa_register 7
 1925 0826 0346     		mov	r3, r0
 1926 0828 FB71     		strb	r3, [r7, #7]
1456:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1457:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_CLEAR_IT(RCC_IT));
1458:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1459:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Perform Byte access to RCC_CIR[23:16] bits to clear the selected interrupt
1460:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****      pending bits */
1461:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint8_t *) CIR_BYTE3_ADDRESS = RCC_IT;
 1927              		.loc 1 1461 0
 1928 082a 044B     		ldr	r3, .L139
 1929 082c FA79     		ldrb	r2, [r7, #7]
 1930 082e 1A70     		strb	r2, [r3, #0]
1462:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 1931              		.loc 1 1462 0
 1932 0830 07F10C07 		add	r7, r7, #12
 1933 0834 BD46     		mov	sp, r7
 1934 0836 80BC     		pop	{r7}
 1935 0838 7047     		bx	lr
 1936              	.L140:
 1937 083a 00BF     		.align	2
 1938              	.L139:
 1939 083c 0A100240 		.word	1073877002
 1940              		.cfi_endproc
 1941              	.LFE86:
 1943              	.Letext0:
 1944              		.file 2 "c:\\program files (x86)\\codesourcery\\sourcery_codebench_lite_for_arm_eabi\\bin\\../lib/
 1945              		.file 3 "D:\\EclipseIndigo\\workspace\\xelo\\src/stm32f10x.h"
 1946              		.file 4 "D:\\EclipseIndigo\\workspace\\xelo\\Libraries\\STM32F10x_StdPeriph_Driver\\inc/stm32f10x_
 1947              		.file 5 "D:\\EclipseIndigo\\workspace\\xelo\\Libraries\\CMSIS\\Include/core_cm3.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f10x_rcc.c
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:19     .data:00000000 $d
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:22     .data:00000000 APBAHBPrescTable
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:42     .data:00000010 ADCPrescTable
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:48     .text:00000000 $t
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:53     .text:00000000 RCC_DeInit
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:111    .text:00000054 $d
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:116    .text:0000005c $t
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:121    .text:0000005c RCC_HSEConfig
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:188    .text:000000b4 $d
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:192    .text:000000b8 $t
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:197    .text:000000b8 RCC_WaitForHSEStartUp
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:1716   .text:00000748 RCC_GetFlagStatus
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:271    .text:0000011c RCC_AdjustHSICalibrationValue
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:319    .text:00000158 $d
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:323    .text:0000015c $t
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:328    .text:0000015c RCC_HSICmd
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:359    .text:00000178 $d
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:363    .text:0000017c $t
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:368    .text:0000017c RCC_PLLConfig
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:417    .text:000001b8 $d
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:421    .text:000001bc $t
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:426    .text:000001bc RCC_PLLCmd
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:457    .text:000001d8 $d
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:461    .text:000001dc $t
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:466    .text:000001dc RCC_SYSCLKConfig
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:512    .text:00000210 $d
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:516    .text:00000214 $t
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:521    .text:00000214 RCC_GetSYSCLKSource
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:549    .text:0000022c $d
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:553    .text:00000230 $t
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:558    .text:00000230 RCC_HCLKConfig
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:604    .text:00000264 $d
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:608    .text:00000268 $t
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:613    .text:00000268 RCC_PCLK1Config
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:659    .text:0000029c $d
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:663    .text:000002a0 $t
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:668    .text:000002a0 RCC_PCLK2Config
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:715    .text:000002d8 $d
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:719    .text:000002dc $t
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:724    .text:000002dc RCC_ITConfig
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:780    .text:00000324 $d
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:784    .text:00000328 $t
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:789    .text:00000328 RCC_USBCLKConfig
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:819    .text:00000340 $d
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:823    .text:00000344 $t
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:828    .text:00000344 RCC_ADCCLKConfig
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:874    .text:00000378 $d
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:878    .text:0000037c $t
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:883    .text:0000037c RCC_LSEConfig
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:943    .text:000003c4 $d
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:947    .text:000003c8 $t
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:952    .text:000003c8 RCC_LSICmd
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:983    .text:000003e4 $d
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:987    .text:000003e8 $t
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:992    .text:000003e8 RCC_RTCCLKConfig
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:1025   .text:00000408 $d
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:1029   .text:0000040c $t
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:1034   .text:0000040c RCC_RTCCLKCmd
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:1065   .text:00000428 $d
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:1069   .text:0000042c $t
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:1074   .text:0000042c RCC_GetClocksFreq
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:1288   .text:00000594 $d
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:1296   .text:000005a8 $t
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:1301   .text:000005a8 RCC_AHBPeriphClockCmd
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:1351   .text:000005e4 $d
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:1355   .text:000005e8 $t
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:1360   .text:000005e8 RCC_APB2PeriphClockCmd
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:1410   .text:00000624 $d
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:1414   .text:00000628 $t
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:1419   .text:00000628 RCC_APB1PeriphClockCmd
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:1469   .text:00000664 $d
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:1473   .text:00000668 $t
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:1478   .text:00000668 RCC_APB2PeriphResetCmd
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:1528   .text:000006a4 $d
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:1532   .text:000006a8 $t
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:1537   .text:000006a8 RCC_APB1PeriphResetCmd
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:1587   .text:000006e4 $d
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:1591   .text:000006e8 $t
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:1596   .text:000006e8 RCC_BackupResetCmd
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:1627   .text:00000704 $d
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:1631   .text:00000708 $t
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:1636   .text:00000708 RCC_ClockSecuritySystemCmd
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:1667   .text:00000724 $d
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:1671   .text:00000728 $t
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:1676   .text:00000728 RCC_MCOConfig
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:1707   .text:00000744 $d
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:1711   .text:00000748 $t
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:1805   .text:000007c4 $d
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:1809   .text:000007c8 $t
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:1814   .text:000007c8 RCC_ClearFlag
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:1841   .text:000007e0 $d
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:1845   .text:000007e4 $t
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:1850   .text:000007e4 RCC_GetITStatus
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:1899   .text:0000081c $d
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:1903   .text:00000820 $t
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:1908   .text:00000820 RCC_ClearITPendingBit
C:\Users\THANGN~1\AppData\Local\Temp\cc852ZPz.s:1939   .text:0000083c $d
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.6e5f3786b89b666b3dcc7c4c84d9d480
                           .group:00000000 wm4.stm32f10x.h.57.69ab29c83f735418a543aa508b559235
                           .group:00000000 wm4.core_cm3.h.32.49180ccb4d36cabd2d7016d2a51d91ae
                           .group:00000000 wm4.stdint.h.10.90b695f550ca6cc3fb08fa83baf01e05
                           .group:00000000 wm4.core_cmInstr.h.25.f50f886f2edf670cf199b35fd96f5c91
                           .group:00000000 wm4.core_cm3.h.130.36d879c1aefb6e578e399a5de749a503
                           .group:00000000 wm4.stm32f10x.h.532.b2b0c08e77686a45dbc3252d064cb2e1
                           .group:00000000 wm4.stm32f10x_adc.h.89.9f2b285fa0070185d48a05b61a05798c
                           .group:00000000 wm4.stm32f10x_bkp.h.31.74a586c036c8ee5d9205c6728cc8d6ab
                           .group:00000000 wm4.stm32f10x_can.h.31.b14273b95de79d8fbb020ba042473fb1
                           .group:00000000 wm4.stm32f10x_cec.h.31.29c77e36bfe4567e85f26cdcc60def64
                           .group:00000000 wm4.stm32f10x_dac.h.31.116c27cadc3b4ee8aa44ed11b14b64ae
                           .group:00000000 wm4.stm32f10x_dbgmcu.h.31.45f176e9b7a15051b8c69cb2700c78b8
                           .group:00000000 wm4.stm32f10x_dma.h.31.ef16218235edc52b414c0353f44b4bf0
                           .group:00000000 wm4.stm32f10x_exti.h.31.b25bcb4f1a2daad39d2d7dfa4e901646
                           .group:00000000 wm4.stm32f10x_flash.h.31.0203bc95b65c5396b67991e07a675efb
                           .group:00000000 wm4.stm32f10x_fsmc.h.31.a761d459aa046c2769a99b93e8763ba0
                           .group:00000000 wm4.stm32f10x_gpio.h.31.0a32659dbac1fc1055c7cbdc248963be
                           .group:00000000 wm4.stm32f10x_i2c.h.31.93d7dc2d477856f119d957730d4c6f1c
                           .group:00000000 wm4.stm32f10x_iwdg.h.31.959ae9b7e1d603f1e5ae6468c0fc1624
                           .group:00000000 wm4.stm32f10x_pwr.h.31.9168b6921e0cf03b467c7ed90861c701
                           .group:00000000 wm4.stm32f10x_rtc.h.31.00ba78fc0dbb06b6e6783a1e7fccf5a0
                           .group:00000000 wm4.stm32f10x_sdio.h.31.37dab89d08b2364a3dfaace444dec7c3
                           .group:00000000 wm4.stm32f10x_spi.h.31.d2f6e4626887cabe8c98f3a185590a36
                           .group:00000000 wm4.stm32f10x_tim.h.31.6c06f7f26e0864f9cd59597f46ca2c7c
                           .group:00000000 wm4.stm32f10x_usart.h.31.28d75d6af05cefbbfa00cf30a7c8a335
                           .group:00000000 wm4.stm32f10x_wwdg.h.31.4504f930b88ade4f56d1e3f2a11c098b
                           .group:00000000 wm4.misc.h.31.a89fba2040036f6f8c835a78a213e0cd
                           .group:00000000 wm4.stm32f10x.h.8356.9fd2fa84655112ac7dfc5c88beeb383d
                           .group:00000000 wm4.stm32f10x_rcc.h.73.39d0bf38e72896b342f8df9bde23ca46

NO UNDEFINED SYMBOLS
