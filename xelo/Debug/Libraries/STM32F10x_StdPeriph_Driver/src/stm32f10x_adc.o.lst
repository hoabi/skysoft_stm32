   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f10x_adc.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.align	2
  19              		.global	ADC_DeInit
  20              		.thumb
  21              		.thumb_func
  23              	ADC_DeInit:
  24              	.LFB55:
  25              		.file 1 "../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c"
   1:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
   2:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ******************************************************************************
   3:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @file    stm32f10x_adc.c
   4:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @author  MCD Application Team
   5:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @version V3.6.1
   6:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @date    05-March-2012
   7:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief   This file provides all the ADC firmware functions.
   8:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ******************************************************************************
   9:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @attention
  10:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *
  11:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * <h2><center>&copy; COPYRIGHT 2012 STMicroelectronics</center></h2>
  12:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *
  13:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  14:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * You may not use this file except in compliance with the License.
  15:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * You may obtain a copy of the License at:
  16:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *
  17:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  18:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *
  19:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * Unless required by applicable law or agreed to in writing, software 
  20:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  21:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  22:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * See the License for the specific language governing permissions and
  23:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * limitations under the License.
  24:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *
  25:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ******************************************************************************
  26:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
  27:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  28:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* Includes ------------------------------------------------------------------*/
  29:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #include "stm32f10x_adc.h"
  30:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #include "stm32f10x_rcc.h"
  31:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  32:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /** @addtogroup STM32F10x_StdPeriph_Driver
  33:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @{
  34:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
  35:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  36:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /** @defgroup ADC 
  37:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief ADC driver modules
  38:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @{
  39:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
  40:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  41:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /** @defgroup ADC_Private_TypesDefinitions
  42:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @{
  43:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
  44:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  45:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
  46:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @}
  47:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
  48:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  49:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /** @defgroup ADC_Private_Defines
  50:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @{
  51:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
  52:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  53:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC DISCNUM mask */
  54:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR1_DISCNUM_Reset           ((uint32_t)0xFFFF1FFF)
  55:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  56:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC DISCEN mask */
  57:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR1_DISCEN_Set              ((uint32_t)0x00000800)
  58:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR1_DISCEN_Reset            ((uint32_t)0xFFFFF7FF)
  59:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  60:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC JAUTO mask */
  61:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR1_JAUTO_Set               ((uint32_t)0x00000400)
  62:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR1_JAUTO_Reset             ((uint32_t)0xFFFFFBFF)
  63:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  64:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC JDISCEN mask */
  65:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR1_JDISCEN_Set             ((uint32_t)0x00001000)
  66:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR1_JDISCEN_Reset           ((uint32_t)0xFFFFEFFF)
  67:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  68:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC AWDCH mask */
  69:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR1_AWDCH_Reset             ((uint32_t)0xFFFFFFE0)
  70:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  71:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC Analog watchdog enable mode mask */
  72:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR1_AWDMode_Reset           ((uint32_t)0xFF3FFDFF)
  73:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  74:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* CR1 register Mask */
  75:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR1_CLEAR_Mask              ((uint32_t)0xFFF0FEFF)
  76:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  77:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC ADON mask */
  78:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_ADON_Set                ((uint32_t)0x00000001)
  79:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_ADON_Reset              ((uint32_t)0xFFFFFFFE)
  80:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  81:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC DMA mask */
  82:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_DMA_Set                 ((uint32_t)0x00000100)
  83:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_DMA_Reset               ((uint32_t)0xFFFFFEFF)
  84:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  85:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC RSTCAL mask */
  86:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_RSTCAL_Set              ((uint32_t)0x00000008)
  87:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  88:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC CAL mask */
  89:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_CAL_Set                 ((uint32_t)0x00000004)
  90:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  91:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC SWSTART mask */
  92:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_SWSTART_Set             ((uint32_t)0x00400000)
  93:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  94:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC EXTTRIG mask */
  95:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_EXTTRIG_Set             ((uint32_t)0x00100000)
  96:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_EXTTRIG_Reset           ((uint32_t)0xFFEFFFFF)
  97:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  98:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC Software start mask */
  99:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_EXTTRIG_SWSTART_Set     ((uint32_t)0x00500000)
 100:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_EXTTRIG_SWSTART_Reset   ((uint32_t)0xFFAFFFFF)
 101:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 102:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC JEXTSEL mask */
 103:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_JEXTSEL_Reset           ((uint32_t)0xFFFF8FFF)
 104:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 105:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC JEXTTRIG mask */
 106:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_JEXTTRIG_Set            ((uint32_t)0x00008000)
 107:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_JEXTTRIG_Reset          ((uint32_t)0xFFFF7FFF)
 108:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 109:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC JSWSTART mask */
 110:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_JSWSTART_Set            ((uint32_t)0x00200000)
 111:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 112:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC injected software start mask */
 113:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_JEXTTRIG_JSWSTART_Set   ((uint32_t)0x00208000)
 114:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_JEXTTRIG_JSWSTART_Reset ((uint32_t)0xFFDF7FFF)
 115:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 116:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC TSPD mask */
 117:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_TSVREFE_Set             ((uint32_t)0x00800000)
 118:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_TSVREFE_Reset           ((uint32_t)0xFF7FFFFF)
 119:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 120:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* CR2 register Mask */
 121:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_CLEAR_Mask              ((uint32_t)0xFFF1F7FD)
 122:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 123:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC SQx mask */
 124:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define SQR3_SQ_Set                 ((uint32_t)0x0000001F)
 125:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define SQR2_SQ_Set                 ((uint32_t)0x0000001F)
 126:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define SQR1_SQ_Set                 ((uint32_t)0x0000001F)
 127:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 128:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* SQR1 register Mask */
 129:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define SQR1_CLEAR_Mask             ((uint32_t)0xFF0FFFFF)
 130:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 131:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC JSQx mask */
 132:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define JSQR_JSQ_Set                ((uint32_t)0x0000001F)
 133:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 134:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC JL mask */
 135:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define JSQR_JL_Set                 ((uint32_t)0x00300000)
 136:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define JSQR_JL_Reset               ((uint32_t)0xFFCFFFFF)
 137:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 138:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC SMPx mask */
 139:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define SMPR1_SMP_Set               ((uint32_t)0x00000007)
 140:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define SMPR2_SMP_Set               ((uint32_t)0x00000007)
 141:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 142:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC JDRx registers offset */
 143:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define JDR_Offset                  ((uint8_t)0x28)
 144:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 145:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC1 DR register base address */
 146:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define DR_ADDRESS                  ((uint32_t)0x4001244C)
 147:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 148:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 149:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @}
 150:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 151:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 152:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /** @defgroup ADC_Private_Macros
 153:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @{
 154:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 155:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 156:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 157:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @}
 158:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 159:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 160:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /** @defgroup ADC_Private_Variables
 161:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @{
 162:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 163:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 164:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 165:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @}
 166:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 167:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 168:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /** @defgroup ADC_Private_FunctionPrototypes
 169:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @{
 170:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 171:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 172:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 173:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @}
 174:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 175:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 176:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /** @defgroup ADC_Private_Functions
 177:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @{
 178:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 179:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 180:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 181:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Deinitializes the ADCx peripheral registers to their default reset values.
 182:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 183:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 184:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 185:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_DeInit(ADC_TypeDef* ADCx)
 186:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
  26              		.loc 1 186 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 1, uses_anonymous_args = 0
  30 0000 80B5     		push	{r7, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 7, -8
  34              		.cfi_offset 14, -4
  35 0002 82B0     		sub	sp, sp, #8
  36              	.LCFI1:
  37              		.cfi_def_cfa_offset 16
  38 0004 00AF     		add	r7, sp, #0
  39              	.LCFI2:
  40              		.cfi_def_cfa_register 7
  41 0006 7860     		str	r0, [r7, #4]
 187:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 188:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 189:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   
 190:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (ADCx == ADC1)
  42              		.loc 1 190 0
  43 0008 7A68     		ldr	r2, [r7, #4]
  44 000a 1A4B     		ldr	r3, .L5
  45 000c 9A42     		cmp	r2, r3
  46 000e 0CD1     		bne	.L2
 191:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 192:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Enable ADC1 reset state */
 193:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC1, ENABLE);
  47              		.loc 1 193 0
  48 0010 4FF40070 		mov	r0, #512
  49 0014 4FF00101 		mov	r1, #1
  50 0018 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 194:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Release ADC1 from reset state */
 195:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC1, DISABLE);
  51              		.loc 1 195 0
  52 001c 4FF40070 		mov	r0, #512
  53 0020 4FF00001 		mov	r1, #0
  54 0024 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  55 0028 20E0     		b	.L1
  56              	.L2:
 196:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 197:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else if (ADCx == ADC2)
  57              		.loc 1 197 0
  58 002a 7A68     		ldr	r2, [r7, #4]
  59 002c 124B     		ldr	r3, .L5+4
  60 002e 9A42     		cmp	r2, r3
  61 0030 0CD1     		bne	.L4
 198:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 199:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Enable ADC2 reset state */
 200:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC2, ENABLE);
  62              		.loc 1 200 0
  63 0032 4FF48060 		mov	r0, #1024
  64 0036 4FF00101 		mov	r1, #1
  65 003a FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 201:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Release ADC2 from reset state */
 202:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC2, DISABLE);
  66              		.loc 1 202 0
  67 003e 4FF48060 		mov	r0, #1024
  68 0042 4FF00001 		mov	r1, #0
  69 0046 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  70 004a 0FE0     		b	.L1
  71              	.L4:
 203:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 204:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 205:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 206:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     if (ADCx == ADC3)
  72              		.loc 1 206 0
  73 004c 7A68     		ldr	r2, [r7, #4]
  74 004e 0B4B     		ldr	r3, .L5+8
  75 0050 9A42     		cmp	r2, r3
  76 0052 0BD1     		bne	.L1
 207:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     {
 208:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****       /* Enable ADC3 reset state */
 209:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC3, ENABLE);
  77              		.loc 1 209 0
  78 0054 4FF40040 		mov	r0, #32768
  79 0058 4FF00101 		mov	r1, #1
  80 005c FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 210:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****       /* Release ADC3 from reset state */
 211:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC3, DISABLE);
  81              		.loc 1 211 0
  82 0060 4FF40040 		mov	r0, #32768
  83 0064 4FF00001 		mov	r1, #0
  84 0068 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  85              	.L1:
 212:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     }
 213:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 214:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
  86              		.loc 1 214 0
  87 006c 07F10807 		add	r7, r7, #8
  88 0070 BD46     		mov	sp, r7
  89 0072 80BD     		pop	{r7, pc}
  90              	.L6:
  91              		.align	2
  92              	.L5:
  93 0074 00240140 		.word	1073816576
  94 0078 00280140 		.word	1073817600
  95 007c 003C0140 		.word	1073822720
  96              		.cfi_endproc
  97              	.LFE55:
  99              		.align	2
 100              		.global	ADC_Init
 101              		.thumb
 102              		.thumb_func
 104              	ADC_Init:
 105              	.LFB56:
 215:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 216:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 217:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Initializes the ADCx peripheral according to the specified parameters
 218:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         in the ADC_InitStruct.
 219:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 220:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_InitStruct: pointer to an ADC_InitTypeDef structure that contains
 221:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         the configuration information for the specified ADC peripheral.
 222:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 223:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 224:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_Init(ADC_TypeDef* ADCx, ADC_InitTypeDef* ADC_InitStruct)
 225:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 106              		.loc 1 225 0
 107              		.cfi_startproc
 108              		@ args = 0, pretend = 0, frame = 16
 109              		@ frame_needed = 1, uses_anonymous_args = 0
 110              		@ link register save eliminated.
 111 0080 80B4     		push	{r7}
 112              	.LCFI3:
 113              		.cfi_def_cfa_offset 4
 114              		.cfi_offset 7, -4
 115 0082 85B0     		sub	sp, sp, #20
 116              	.LCFI4:
 117              		.cfi_def_cfa_offset 24
 118 0084 00AF     		add	r7, sp, #0
 119              	.LCFI5:
 120              		.cfi_def_cfa_register 7
 121 0086 7860     		str	r0, [r7, #4]
 122 0088 3960     		str	r1, [r7, #0]
 226:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint32_t tmpreg1 = 0;
 123              		.loc 1 226 0
 124 008a 4FF00003 		mov	r3, #0
 125 008e FB60     		str	r3, [r7, #12]
 227:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint8_t tmpreg2 = 0;
 126              		.loc 1 227 0
 127 0090 4FF00003 		mov	r3, #0
 128 0094 FB72     		strb	r3, [r7, #11]
 228:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 229:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 230:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_MODE(ADC_InitStruct->ADC_Mode));
 231:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(ADC_InitStruct->ADC_ScanConvMode));
 232:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(ADC_InitStruct->ADC_ContinuousConvMode));
 233:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_EXT_TRIG(ADC_InitStruct->ADC_ExternalTrigConv));   
 234:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_DATA_ALIGN(ADC_InitStruct->ADC_DataAlign)); 
 235:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_REGULAR_LENGTH(ADC_InitStruct->ADC_NbrOfChannel));
 236:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 237:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /*---------------------------- ADCx CR1 Configuration -----------------*/
 238:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get the ADCx CR1 value */
 239:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 = ADCx->CR1;
 129              		.loc 1 239 0
 130 0096 7B68     		ldr	r3, [r7, #4]
 131 0098 5B68     		ldr	r3, [r3, #4]
 132 009a FB60     		str	r3, [r7, #12]
 240:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Clear DUALMOD and SCAN bits */
 241:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 &= CR1_CLEAR_Mask;
 133              		.loc 1 241 0
 134 009c FB68     		ldr	r3, [r7, #12]
 135 009e 23F47023 		bic	r3, r3, #983040
 136 00a2 23F48073 		bic	r3, r3, #256
 137 00a6 FB60     		str	r3, [r7, #12]
 242:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Configure ADCx: Dual mode and scan conversion mode */
 243:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set DUALMOD bits according to ADC_Mode value */
 244:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set SCAN bit according to ADC_ScanConvMode value */
 245:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 |= (uint32_t)(ADC_InitStruct->ADC_Mode | ((uint32_t)ADC_InitStruct->ADC_ScanConvMode << 8
 138              		.loc 1 245 0
 139 00a8 3B68     		ldr	r3, [r7, #0]
 140 00aa 1A68     		ldr	r2, [r3, #0]
 141 00ac 3B68     		ldr	r3, [r7, #0]
 142 00ae 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 143 00b0 4FEA0323 		lsl	r3, r3, #8
 144 00b4 1343     		orrs	r3, r3, r2
 145 00b6 FA68     		ldr	r2, [r7, #12]
 146 00b8 1343     		orrs	r3, r3, r2
 147 00ba FB60     		str	r3, [r7, #12]
 246:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Write to ADCx CR1 */
 247:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->CR1 = tmpreg1;
 148              		.loc 1 247 0
 149 00bc 7B68     		ldr	r3, [r7, #4]
 150 00be FA68     		ldr	r2, [r7, #12]
 151 00c0 5A60     		str	r2, [r3, #4]
 248:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 249:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /*---------------------------- ADCx CR2 Configuration -----------------*/
 250:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get the ADCx CR2 value */
 251:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 = ADCx->CR2;
 152              		.loc 1 251 0
 153 00c2 7B68     		ldr	r3, [r7, #4]
 154 00c4 9B68     		ldr	r3, [r3, #8]
 155 00c6 FB60     		str	r3, [r7, #12]
 252:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Clear CONT, ALIGN and EXTSEL bits */
 253:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 &= CR2_CLEAR_Mask;
 156              		.loc 1 253 0
 157 00c8 FA68     		ldr	r2, [r7, #12]
 158 00ca 184B     		ldr	r3, .L8
 159 00cc 1340     		ands	r3, r3, r2
 160 00ce FB60     		str	r3, [r7, #12]
 254:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Configure ADCx: external trigger event and continuous conversion mode */
 255:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set ALIGN bit according to ADC_DataAlign value */
 256:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set EXTSEL bits according to ADC_ExternalTrigConv value */
 257:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set CONT bit according to ADC_ContinuousConvMode value */
 258:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 |= (uint32_t)(ADC_InitStruct->ADC_DataAlign | ADC_InitStruct->ADC_ExternalTrigConv |
 161              		.loc 1 258 0
 162 00d0 3B68     		ldr	r3, [r7, #0]
 163 00d2 DA68     		ldr	r2, [r3, #12]
 164 00d4 3B68     		ldr	r3, [r7, #0]
 165 00d6 9B68     		ldr	r3, [r3, #8]
 166 00d8 1A43     		orrs	r2, r2, r3
 259:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****             ((uint32_t)ADC_InitStruct->ADC_ContinuousConvMode << 1));
 167              		.loc 1 259 0
 168 00da 3B68     		ldr	r3, [r7, #0]
 169 00dc 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 170 00de 4FEA4303 		lsl	r3, r3, #1
 258:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 |= (uint32_t)(ADC_InitStruct->ADC_DataAlign | ADC_InitStruct->ADC_ExternalTrigConv |
 171              		.loc 1 258 0
 172 00e2 1343     		orrs	r3, r3, r2
 173 00e4 FA68     		ldr	r2, [r7, #12]
 174 00e6 1343     		orrs	r3, r3, r2
 175 00e8 FB60     		str	r3, [r7, #12]
 260:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Write to ADCx CR2 */
 261:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->CR2 = tmpreg1;
 176              		.loc 1 261 0
 177 00ea 7B68     		ldr	r3, [r7, #4]
 178 00ec FA68     		ldr	r2, [r7, #12]
 179 00ee 9A60     		str	r2, [r3, #8]
 262:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 263:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /*---------------------------- ADCx SQR1 Configuration -----------------*/
 264:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get the ADCx SQR1 value */
 265:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 = ADCx->SQR1;
 180              		.loc 1 265 0
 181 00f0 7B68     		ldr	r3, [r7, #4]
 182 00f2 DB6A     		ldr	r3, [r3, #44]
 183 00f4 FB60     		str	r3, [r7, #12]
 266:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Clear L bits */
 267:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 &= SQR1_CLEAR_Mask;
 184              		.loc 1 267 0
 185 00f6 FB68     		ldr	r3, [r7, #12]
 186 00f8 23F47003 		bic	r3, r3, #15728640
 187 00fc FB60     		str	r3, [r7, #12]
 268:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Configure ADCx: regular channel sequence length */
 269:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set L bits according to ADC_NbrOfChannel value */
 270:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg2 |= (uint8_t) (ADC_InitStruct->ADC_NbrOfChannel - (uint8_t)1);
 188              		.loc 1 270 0
 189 00fe 3B68     		ldr	r3, [r7, #0]
 190 0100 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 191 0102 03F1FF33 		add	r3, r3, #-1
 192 0106 DAB2     		uxtb	r2, r3
 193 0108 FB7A     		ldrb	r3, [r7, #11]
 194 010a 1343     		orrs	r3, r3, r2
 195 010c FB72     		strb	r3, [r7, #11]
 271:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 |= (uint32_t)tmpreg2 << 20;
 196              		.loc 1 271 0
 197 010e FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 198 0110 4FEA0353 		lsl	r3, r3, #20
 199 0114 FA68     		ldr	r2, [r7, #12]
 200 0116 1343     		orrs	r3, r3, r2
 201 0118 FB60     		str	r3, [r7, #12]
 272:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Write to ADCx SQR1 */
 273:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->SQR1 = tmpreg1;
 202              		.loc 1 273 0
 203 011a 7B68     		ldr	r3, [r7, #4]
 204 011c FA68     		ldr	r2, [r7, #12]
 205 011e DA62     		str	r2, [r3, #44]
 274:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 206              		.loc 1 274 0
 207 0120 07F11407 		add	r7, r7, #20
 208 0124 BD46     		mov	sp, r7
 209 0126 80BC     		pop	{r7}
 210 0128 7047     		bx	lr
 211              	.L9:
 212 012a 00BF     		.align	2
 213              	.L8:
 214 012c FDF7F1FF 		.word	-919555
 215              		.cfi_endproc
 216              	.LFE56:
 218              		.align	2
 219              		.global	ADC_StructInit
 220              		.thumb
 221              		.thumb_func
 223              	ADC_StructInit:
 224              	.LFB57:
 275:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 276:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 277:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Fills each ADC_InitStruct member with its default value.
 278:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_InitStruct : pointer to an ADC_InitTypeDef structure which will be initialized.
 279:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 280:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 281:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_StructInit(ADC_InitTypeDef* ADC_InitStruct)
 282:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 225              		.loc 1 282 0
 226              		.cfi_startproc
 227              		@ args = 0, pretend = 0, frame = 8
 228              		@ frame_needed = 1, uses_anonymous_args = 0
 229              		@ link register save eliminated.
 230 0130 80B4     		push	{r7}
 231              	.LCFI6:
 232              		.cfi_def_cfa_offset 4
 233              		.cfi_offset 7, -4
 234 0132 83B0     		sub	sp, sp, #12
 235              	.LCFI7:
 236              		.cfi_def_cfa_offset 16
 237 0134 00AF     		add	r7, sp, #0
 238              	.LCFI8:
 239              		.cfi_def_cfa_register 7
 240 0136 7860     		str	r0, [r7, #4]
 283:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Reset ADC init structure parameters values */
 284:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Initialize the ADC_Mode member */
 285:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADC_InitStruct->ADC_Mode = ADC_Mode_Independent;
 241              		.loc 1 285 0
 242 0138 7B68     		ldr	r3, [r7, #4]
 243 013a 4FF00002 		mov	r2, #0
 244 013e 1A60     		str	r2, [r3, #0]
 286:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* initialize the ADC_ScanConvMode member */
 287:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADC_InitStruct->ADC_ScanConvMode = DISABLE;
 245              		.loc 1 287 0
 246 0140 7B68     		ldr	r3, [r7, #4]
 247 0142 4FF00002 		mov	r2, #0
 248 0146 1A71     		strb	r2, [r3, #4]
 288:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Initialize the ADC_ContinuousConvMode member */
 289:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADC_InitStruct->ADC_ContinuousConvMode = DISABLE;
 249              		.loc 1 289 0
 250 0148 7B68     		ldr	r3, [r7, #4]
 251 014a 4FF00002 		mov	r2, #0
 252 014e 5A71     		strb	r2, [r3, #5]
 290:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Initialize the ADC_ExternalTrigConv member */
 291:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADC_InitStruct->ADC_ExternalTrigConv = ADC_ExternalTrigConv_T1_CC1;
 253              		.loc 1 291 0
 254 0150 7B68     		ldr	r3, [r7, #4]
 255 0152 4FF00002 		mov	r2, #0
 256 0156 9A60     		str	r2, [r3, #8]
 292:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Initialize the ADC_DataAlign member */
 293:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADC_InitStruct->ADC_DataAlign = ADC_DataAlign_Right;
 257              		.loc 1 293 0
 258 0158 7B68     		ldr	r3, [r7, #4]
 259 015a 4FF00002 		mov	r2, #0
 260 015e DA60     		str	r2, [r3, #12]
 294:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Initialize the ADC_NbrOfChannel member */
 295:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADC_InitStruct->ADC_NbrOfChannel = 1;
 261              		.loc 1 295 0
 262 0160 7B68     		ldr	r3, [r7, #4]
 263 0162 4FF00102 		mov	r2, #1
 264 0166 1A74     		strb	r2, [r3, #16]
 296:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 265              		.loc 1 296 0
 266 0168 07F10C07 		add	r7, r7, #12
 267 016c BD46     		mov	sp, r7
 268 016e 80BC     		pop	{r7}
 269 0170 7047     		bx	lr
 270              		.cfi_endproc
 271              	.LFE57:
 273 0172 00BF     		.align	2
 274              		.global	ADC_Cmd
 275              		.thumb
 276              		.thumb_func
 278              	ADC_Cmd:
 279              	.LFB58:
 297:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 298:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 299:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the specified ADC peripheral.
 300:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 301:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the ADCx peripheral.
 302:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
 303:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 304:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 305:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_Cmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 306:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 280              		.loc 1 306 0
 281              		.cfi_startproc
 282              		@ args = 0, pretend = 0, frame = 8
 283              		@ frame_needed = 1, uses_anonymous_args = 0
 284              		@ link register save eliminated.
 285 0174 80B4     		push	{r7}
 286              	.LCFI9:
 287              		.cfi_def_cfa_offset 4
 288              		.cfi_offset 7, -4
 289 0176 83B0     		sub	sp, sp, #12
 290              	.LCFI10:
 291              		.cfi_def_cfa_offset 16
 292 0178 00AF     		add	r7, sp, #0
 293              	.LCFI11:
 294              		.cfi_def_cfa_register 7
 295 017a 7860     		str	r0, [r7, #4]
 296 017c 0B46     		mov	r3, r1
 297 017e FB70     		strb	r3, [r7, #3]
 307:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 308:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 309:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 310:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 298              		.loc 1 310 0
 299 0180 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 300 0182 002B     		cmp	r3, #0
 301 0184 06D0     		beq	.L12
 311:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 312:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Set the ADON bit to wake up the ADC from power down mode */
 313:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR2 |= CR2_ADON_Set;
 302              		.loc 1 313 0
 303 0186 7B68     		ldr	r3, [r7, #4]
 304 0188 9B68     		ldr	r3, [r3, #8]
 305 018a 43F00102 		orr	r2, r3, #1
 306 018e 7B68     		ldr	r3, [r7, #4]
 307 0190 9A60     		str	r2, [r3, #8]
 308 0192 05E0     		b	.L11
 309              	.L12:
 314:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 315:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 316:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 317:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Disable the selected ADC peripheral */
 318:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR2 &= CR2_ADON_Reset;
 310              		.loc 1 318 0
 311 0194 7B68     		ldr	r3, [r7, #4]
 312 0196 9B68     		ldr	r3, [r3, #8]
 313 0198 23F00102 		bic	r2, r3, #1
 314 019c 7B68     		ldr	r3, [r7, #4]
 315 019e 9A60     		str	r2, [r3, #8]
 316              	.L11:
 319:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 320:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 317              		.loc 1 320 0
 318 01a0 07F10C07 		add	r7, r7, #12
 319 01a4 BD46     		mov	sp, r7
 320 01a6 80BC     		pop	{r7}
 321 01a8 7047     		bx	lr
 322              		.cfi_endproc
 323              	.LFE58:
 325 01aa 00BF     		.align	2
 326              		.global	ADC_DMACmd
 327              		.thumb
 328              		.thumb_func
 330              	ADC_DMACmd:
 331              	.LFB59:
 321:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 322:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 323:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the specified ADC DMA request.
 324:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1 or 3 to select the ADC peripheral.
 325:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   Note: ADC2 hasn't a DMA capability.
 326:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the selected ADC DMA transfer.
 327:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
 328:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 329:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 330:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_DMACmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 331:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 332              		.loc 1 331 0
 333              		.cfi_startproc
 334              		@ args = 0, pretend = 0, frame = 8
 335              		@ frame_needed = 1, uses_anonymous_args = 0
 336              		@ link register save eliminated.
 337 01ac 80B4     		push	{r7}
 338              	.LCFI12:
 339              		.cfi_def_cfa_offset 4
 340              		.cfi_offset 7, -4
 341 01ae 83B0     		sub	sp, sp, #12
 342              	.LCFI13:
 343              		.cfi_def_cfa_offset 16
 344 01b0 00AF     		add	r7, sp, #0
 345              	.LCFI14:
 346              		.cfi_def_cfa_register 7
 347 01b2 7860     		str	r0, [r7, #4]
 348 01b4 0B46     		mov	r3, r1
 349 01b6 FB70     		strb	r3, [r7, #3]
 332:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 333:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_DMA_PERIPH(ADCx));
 334:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 335:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 350              		.loc 1 335 0
 351 01b8 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 352 01ba 002B     		cmp	r3, #0
 353 01bc 06D0     		beq	.L15
 336:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 337:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Enable the selected ADC DMA request */
 338:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR2 |= CR2_DMA_Set;
 354              		.loc 1 338 0
 355 01be 7B68     		ldr	r3, [r7, #4]
 356 01c0 9B68     		ldr	r3, [r3, #8]
 357 01c2 43F48072 		orr	r2, r3, #256
 358 01c6 7B68     		ldr	r3, [r7, #4]
 359 01c8 9A60     		str	r2, [r3, #8]
 360 01ca 05E0     		b	.L14
 361              	.L15:
 339:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 340:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 341:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 342:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Disable the selected ADC DMA request */
 343:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR2 &= CR2_DMA_Reset;
 362              		.loc 1 343 0
 363 01cc 7B68     		ldr	r3, [r7, #4]
 364 01ce 9B68     		ldr	r3, [r3, #8]
 365 01d0 23F48072 		bic	r2, r3, #256
 366 01d4 7B68     		ldr	r3, [r7, #4]
 367 01d6 9A60     		str	r2, [r3, #8]
 368              	.L14:
 344:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 345:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 369              		.loc 1 345 0
 370 01d8 07F10C07 		add	r7, r7, #12
 371 01dc BD46     		mov	sp, r7
 372 01de 80BC     		pop	{r7}
 373 01e0 7047     		bx	lr
 374              		.cfi_endproc
 375              	.LFE59:
 377 01e2 00BF     		.align	2
 378              		.global	ADC_ITConfig
 379              		.thumb
 380              		.thumb_func
 382              	ADC_ITConfig:
 383              	.LFB60:
 346:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 347:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 348:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the specified ADC interrupts.
 349:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 350:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_IT: specifies the ADC interrupt sources to be enabled or disabled. 
 351:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be any combination of the following values:
 352:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_IT_EOC: End of conversion interrupt mask
 353:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_IT_AWD: Analog watchdog interrupt mask
 354:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_IT_JEOC: End of injected conversion interrupt mask
 355:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the specified ADC interrupts.
 356:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
 357:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 358:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 359:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_ITConfig(ADC_TypeDef* ADCx, uint16_t ADC_IT, FunctionalState NewState)
 360:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 384              		.loc 1 360 0
 385              		.cfi_startproc
 386              		@ args = 0, pretend = 0, frame = 16
 387              		@ frame_needed = 1, uses_anonymous_args = 0
 388              		@ link register save eliminated.
 389 01e4 80B4     		push	{r7}
 390              	.LCFI15:
 391              		.cfi_def_cfa_offset 4
 392              		.cfi_offset 7, -4
 393 01e6 85B0     		sub	sp, sp, #20
 394              	.LCFI16:
 395              		.cfi_def_cfa_offset 24
 396 01e8 00AF     		add	r7, sp, #0
 397              	.LCFI17:
 398              		.cfi_def_cfa_register 7
 399 01ea 7860     		str	r0, [r7, #4]
 400 01ec 1346     		mov	r3, r2
 401 01ee 0A46     		mov	r2, r1	@ movhi
 402 01f0 7A80     		strh	r2, [r7, #2]	@ movhi
 403 01f2 7B70     		strb	r3, [r7, #1]
 361:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint8_t itmask = 0;
 404              		.loc 1 361 0
 405 01f4 4FF00003 		mov	r3, #0
 406 01f8 FB73     		strb	r3, [r7, #15]
 362:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 363:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 364:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 365:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_IT(ADC_IT));
 366:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get the ADC IT index */
 367:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   itmask = (uint8_t)ADC_IT;
 407              		.loc 1 367 0
 408 01fa 7B88     		ldrh	r3, [r7, #2]	@ movhi
 409 01fc FB73     		strb	r3, [r7, #15]
 368:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 410              		.loc 1 368 0
 411 01fe 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 412 0200 002B     		cmp	r3, #0
 413 0202 06D0     		beq	.L18
 369:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 370:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Enable the selected ADC interrupts */
 371:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR1 |= itmask;
 414              		.loc 1 371 0
 415 0204 7B68     		ldr	r3, [r7, #4]
 416 0206 5A68     		ldr	r2, [r3, #4]
 417 0208 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 418 020a 1A43     		orrs	r2, r2, r3
 419 020c 7B68     		ldr	r3, [r7, #4]
 420 020e 5A60     		str	r2, [r3, #4]
 421 0210 07E0     		b	.L17
 422              	.L18:
 372:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 373:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 374:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 375:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Disable the selected ADC interrupts */
 376:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR1 &= (~(uint32_t)itmask);
 423              		.loc 1 376 0
 424 0212 7B68     		ldr	r3, [r7, #4]
 425 0214 5A68     		ldr	r2, [r3, #4]
 426 0216 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 427 0218 6FEA0303 		mvn	r3, r3
 428 021c 1A40     		ands	r2, r2, r3
 429 021e 7B68     		ldr	r3, [r7, #4]
 430 0220 5A60     		str	r2, [r3, #4]
 431              	.L17:
 377:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 378:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 432              		.loc 1 378 0
 433 0222 07F11407 		add	r7, r7, #20
 434 0226 BD46     		mov	sp, r7
 435 0228 80BC     		pop	{r7}
 436 022a 7047     		bx	lr
 437              		.cfi_endproc
 438              	.LFE60:
 440              		.align	2
 441              		.global	ADC_ResetCalibration
 442              		.thumb
 443              		.thumb_func
 445              	ADC_ResetCalibration:
 446              	.LFB61:
 379:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 380:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 381:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Resets the selected ADC calibration registers.
 382:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 383:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 384:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 385:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_ResetCalibration(ADC_TypeDef* ADCx)
 386:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 447              		.loc 1 386 0
 448              		.cfi_startproc
 449              		@ args = 0, pretend = 0, frame = 8
 450              		@ frame_needed = 1, uses_anonymous_args = 0
 451              		@ link register save eliminated.
 452 022c 80B4     		push	{r7}
 453              	.LCFI18:
 454              		.cfi_def_cfa_offset 4
 455              		.cfi_offset 7, -4
 456 022e 83B0     		sub	sp, sp, #12
 457              	.LCFI19:
 458              		.cfi_def_cfa_offset 16
 459 0230 00AF     		add	r7, sp, #0
 460              	.LCFI20:
 461              		.cfi_def_cfa_register 7
 462 0232 7860     		str	r0, [r7, #4]
 387:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 388:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 389:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Resets the selected ADC calibration registers */  
 390:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->CR2 |= CR2_RSTCAL_Set;
 463              		.loc 1 390 0
 464 0234 7B68     		ldr	r3, [r7, #4]
 465 0236 9B68     		ldr	r3, [r3, #8]
 466 0238 43F00802 		orr	r2, r3, #8
 467 023c 7B68     		ldr	r3, [r7, #4]
 468 023e 9A60     		str	r2, [r3, #8]
 391:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 469              		.loc 1 391 0
 470 0240 07F10C07 		add	r7, r7, #12
 471 0244 BD46     		mov	sp, r7
 472 0246 80BC     		pop	{r7}
 473 0248 7047     		bx	lr
 474              		.cfi_endproc
 475              	.LFE61:
 477 024a 00BF     		.align	2
 478              		.global	ADC_GetResetCalibrationStatus
 479              		.thumb
 480              		.thumb_func
 482              	ADC_GetResetCalibrationStatus:
 483              	.LFB62:
 392:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 393:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 394:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Gets the selected ADC reset calibration registers status.
 395:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 396:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval The new state of ADC reset calibration registers (SET or RESET).
 397:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 398:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** FlagStatus ADC_GetResetCalibrationStatus(ADC_TypeDef* ADCx)
 399:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 484              		.loc 1 399 0
 485              		.cfi_startproc
 486              		@ args = 0, pretend = 0, frame = 16
 487              		@ frame_needed = 1, uses_anonymous_args = 0
 488              		@ link register save eliminated.
 489 024c 80B4     		push	{r7}
 490              	.LCFI21:
 491              		.cfi_def_cfa_offset 4
 492              		.cfi_offset 7, -4
 493 024e 85B0     		sub	sp, sp, #20
 494              	.LCFI22:
 495              		.cfi_def_cfa_offset 24
 496 0250 00AF     		add	r7, sp, #0
 497              	.LCFI23:
 498              		.cfi_def_cfa_register 7
 499 0252 7860     		str	r0, [r7, #4]
 400:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   FlagStatus bitstatus = RESET;
 500              		.loc 1 400 0
 501 0254 4FF00003 		mov	r3, #0
 502 0258 FB73     		strb	r3, [r7, #15]
 401:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 402:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 403:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the status of RSTCAL bit */
 404:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if ((ADCx->CR2 & CR2_RSTCAL_Set) != (uint32_t)RESET)
 503              		.loc 1 404 0
 504 025a 7B68     		ldr	r3, [r7, #4]
 505 025c 9B68     		ldr	r3, [r3, #8]
 506 025e 03F00803 		and	r3, r3, #8
 507 0262 002B     		cmp	r3, #0
 508 0264 03D0     		beq	.L22
 405:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 406:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* RSTCAL bit is set */
 407:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     bitstatus = SET;
 509              		.loc 1 407 0
 510 0266 4FF00103 		mov	r3, #1
 511 026a FB73     		strb	r3, [r7, #15]
 512 026c 02E0     		b	.L23
 513              	.L22:
 408:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 409:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 410:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 411:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* RSTCAL bit is reset */
 412:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     bitstatus = RESET;
 514              		.loc 1 412 0
 515 026e 4FF00003 		mov	r3, #0
 516 0272 FB73     		strb	r3, [r7, #15]
 517              	.L23:
 413:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 414:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Return the RSTCAL bit status */
 415:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   return  bitstatus;
 518              		.loc 1 415 0
 519 0274 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 416:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 520              		.loc 1 416 0
 521 0276 1846     		mov	r0, r3
 522 0278 07F11407 		add	r7, r7, #20
 523 027c BD46     		mov	sp, r7
 524 027e 80BC     		pop	{r7}
 525 0280 7047     		bx	lr
 526              		.cfi_endproc
 527              	.LFE62:
 529 0282 00BF     		.align	2
 530              		.global	ADC_StartCalibration
 531              		.thumb
 532              		.thumb_func
 534              	ADC_StartCalibration:
 535              	.LFB63:
 417:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 418:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 419:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Starts the selected ADC calibration process.
 420:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 421:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 422:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 423:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_StartCalibration(ADC_TypeDef* ADCx)
 424:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 536              		.loc 1 424 0
 537              		.cfi_startproc
 538              		@ args = 0, pretend = 0, frame = 8
 539              		@ frame_needed = 1, uses_anonymous_args = 0
 540              		@ link register save eliminated.
 541 0284 80B4     		push	{r7}
 542              	.LCFI24:
 543              		.cfi_def_cfa_offset 4
 544              		.cfi_offset 7, -4
 545 0286 83B0     		sub	sp, sp, #12
 546              	.LCFI25:
 547              		.cfi_def_cfa_offset 16
 548 0288 00AF     		add	r7, sp, #0
 549              	.LCFI26:
 550              		.cfi_def_cfa_register 7
 551 028a 7860     		str	r0, [r7, #4]
 425:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 426:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 427:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Enable the selected ADC calibration process */  
 428:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->CR2 |= CR2_CAL_Set;
 552              		.loc 1 428 0
 553 028c 7B68     		ldr	r3, [r7, #4]
 554 028e 9B68     		ldr	r3, [r3, #8]
 555 0290 43F00402 		orr	r2, r3, #4
 556 0294 7B68     		ldr	r3, [r7, #4]
 557 0296 9A60     		str	r2, [r3, #8]
 429:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 558              		.loc 1 429 0
 559 0298 07F10C07 		add	r7, r7, #12
 560 029c BD46     		mov	sp, r7
 561 029e 80BC     		pop	{r7}
 562 02a0 7047     		bx	lr
 563              		.cfi_endproc
 564              	.LFE63:
 566 02a2 00BF     		.align	2
 567              		.global	ADC_GetCalibrationStatus
 568              		.thumb
 569              		.thumb_func
 571              	ADC_GetCalibrationStatus:
 572              	.LFB64:
 430:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 431:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 432:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Gets the selected ADC calibration status.
 433:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 434:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval The new state of ADC calibration (SET or RESET).
 435:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 436:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** FlagStatus ADC_GetCalibrationStatus(ADC_TypeDef* ADCx)
 437:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 573              		.loc 1 437 0
 574              		.cfi_startproc
 575              		@ args = 0, pretend = 0, frame = 16
 576              		@ frame_needed = 1, uses_anonymous_args = 0
 577              		@ link register save eliminated.
 578 02a4 80B4     		push	{r7}
 579              	.LCFI27:
 580              		.cfi_def_cfa_offset 4
 581              		.cfi_offset 7, -4
 582 02a6 85B0     		sub	sp, sp, #20
 583              	.LCFI28:
 584              		.cfi_def_cfa_offset 24
 585 02a8 00AF     		add	r7, sp, #0
 586              	.LCFI29:
 587              		.cfi_def_cfa_register 7
 588 02aa 7860     		str	r0, [r7, #4]
 438:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   FlagStatus bitstatus = RESET;
 589              		.loc 1 438 0
 590 02ac 4FF00003 		mov	r3, #0
 591 02b0 FB73     		strb	r3, [r7, #15]
 439:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 440:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 441:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the status of CAL bit */
 442:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if ((ADCx->CR2 & CR2_CAL_Set) != (uint32_t)RESET)
 592              		.loc 1 442 0
 593 02b2 7B68     		ldr	r3, [r7, #4]
 594 02b4 9B68     		ldr	r3, [r3, #8]
 595 02b6 03F00403 		and	r3, r3, #4
 596 02ba 002B     		cmp	r3, #0
 597 02bc 03D0     		beq	.L27
 443:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 444:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* CAL bit is set: calibration on going */
 445:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     bitstatus = SET;
 598              		.loc 1 445 0
 599 02be 4FF00103 		mov	r3, #1
 600 02c2 FB73     		strb	r3, [r7, #15]
 601 02c4 02E0     		b	.L28
 602              	.L27:
 446:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 447:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 448:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 449:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* CAL bit is reset: end of calibration */
 450:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     bitstatus = RESET;
 603              		.loc 1 450 0
 604 02c6 4FF00003 		mov	r3, #0
 605 02ca FB73     		strb	r3, [r7, #15]
 606              	.L28:
 451:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 452:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Return the CAL bit status */
 453:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   return  bitstatus;
 607              		.loc 1 453 0
 608 02cc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 454:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 609              		.loc 1 454 0
 610 02ce 1846     		mov	r0, r3
 611 02d0 07F11407 		add	r7, r7, #20
 612 02d4 BD46     		mov	sp, r7
 613 02d6 80BC     		pop	{r7}
 614 02d8 7047     		bx	lr
 615              		.cfi_endproc
 616              	.LFE64:
 618 02da 00BF     		.align	2
 619              		.global	ADC_SoftwareStartConvCmd
 620              		.thumb
 621              		.thumb_func
 623              	ADC_SoftwareStartConvCmd:
 624              	.LFB65:
 455:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 456:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 457:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the selected ADC software start conversion .
 458:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 459:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the selected ADC software start conversion.
 460:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
 461:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 462:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 463:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_SoftwareStartConvCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 464:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 625              		.loc 1 464 0
 626              		.cfi_startproc
 627              		@ args = 0, pretend = 0, frame = 8
 628              		@ frame_needed = 1, uses_anonymous_args = 0
 629              		@ link register save eliminated.
 630 02dc 80B4     		push	{r7}
 631              	.LCFI30:
 632              		.cfi_def_cfa_offset 4
 633              		.cfi_offset 7, -4
 634 02de 83B0     		sub	sp, sp, #12
 635              	.LCFI31:
 636              		.cfi_def_cfa_offset 16
 637 02e0 00AF     		add	r7, sp, #0
 638              	.LCFI32:
 639              		.cfi_def_cfa_register 7
 640 02e2 7860     		str	r0, [r7, #4]
 641 02e4 0B46     		mov	r3, r1
 642 02e6 FB70     		strb	r3, [r7, #3]
 465:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 466:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 467:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 468:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 643              		.loc 1 468 0
 644 02e8 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 645 02ea 002B     		cmp	r3, #0
 646 02ec 06D0     		beq	.L31
 469:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 470:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Enable the selected ADC conversion on external event and start the selected
 471:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****        ADC conversion */
 472:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR2 |= CR2_EXTTRIG_SWSTART_Set;
 647              		.loc 1 472 0
 648 02ee 7B68     		ldr	r3, [r7, #4]
 649 02f0 9B68     		ldr	r3, [r3, #8]
 650 02f2 43F4A002 		orr	r2, r3, #5242880
 651 02f6 7B68     		ldr	r3, [r7, #4]
 652 02f8 9A60     		str	r2, [r3, #8]
 653 02fa 05E0     		b	.L30
 654              	.L31:
 473:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 474:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 475:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 476:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Disable the selected ADC conversion on external event and stop the selected
 477:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****        ADC conversion */
 478:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR2 &= CR2_EXTTRIG_SWSTART_Reset;
 655              		.loc 1 478 0
 656 02fc 7B68     		ldr	r3, [r7, #4]
 657 02fe 9B68     		ldr	r3, [r3, #8]
 658 0300 23F4A002 		bic	r2, r3, #5242880
 659 0304 7B68     		ldr	r3, [r7, #4]
 660 0306 9A60     		str	r2, [r3, #8]
 661              	.L30:
 479:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 480:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 662              		.loc 1 480 0
 663 0308 07F10C07 		add	r7, r7, #12
 664 030c BD46     		mov	sp, r7
 665 030e 80BC     		pop	{r7}
 666 0310 7047     		bx	lr
 667              		.cfi_endproc
 668              	.LFE65:
 670 0312 00BF     		.align	2
 671              		.global	ADC_GetSoftwareStartConvStatus
 672              		.thumb
 673              		.thumb_func
 675              	ADC_GetSoftwareStartConvStatus:
 676              	.LFB66:
 481:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 482:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 483:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Gets the selected ADC Software start conversion Status.
 484:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 485:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval The new state of ADC software start conversion (SET or RESET).
 486:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 487:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** FlagStatus ADC_GetSoftwareStartConvStatus(ADC_TypeDef* ADCx)
 488:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 677              		.loc 1 488 0
 678              		.cfi_startproc
 679              		@ args = 0, pretend = 0, frame = 16
 680              		@ frame_needed = 1, uses_anonymous_args = 0
 681              		@ link register save eliminated.
 682 0314 80B4     		push	{r7}
 683              	.LCFI33:
 684              		.cfi_def_cfa_offset 4
 685              		.cfi_offset 7, -4
 686 0316 85B0     		sub	sp, sp, #20
 687              	.LCFI34:
 688              		.cfi_def_cfa_offset 24
 689 0318 00AF     		add	r7, sp, #0
 690              	.LCFI35:
 691              		.cfi_def_cfa_register 7
 692 031a 7860     		str	r0, [r7, #4]
 489:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   FlagStatus bitstatus = RESET;
 693              		.loc 1 489 0
 694 031c 4FF00003 		mov	r3, #0
 695 0320 FB73     		strb	r3, [r7, #15]
 490:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 491:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 492:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the status of SWSTART bit */
 493:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if ((ADCx->CR2 & CR2_SWSTART_Set) != (uint32_t)RESET)
 696              		.loc 1 493 0
 697 0322 7B68     		ldr	r3, [r7, #4]
 698 0324 9B68     		ldr	r3, [r3, #8]
 699 0326 03F48003 		and	r3, r3, #4194304
 700 032a 002B     		cmp	r3, #0
 701 032c 03D0     		beq	.L34
 494:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 495:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* SWSTART bit is set */
 496:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     bitstatus = SET;
 702              		.loc 1 496 0
 703 032e 4FF00103 		mov	r3, #1
 704 0332 FB73     		strb	r3, [r7, #15]
 705 0334 02E0     		b	.L35
 706              	.L34:
 497:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 498:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 499:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 500:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* SWSTART bit is reset */
 501:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     bitstatus = RESET;
 707              		.loc 1 501 0
 708 0336 4FF00003 		mov	r3, #0
 709 033a FB73     		strb	r3, [r7, #15]
 710              	.L35:
 502:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 503:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Return the SWSTART bit status */
 504:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   return  bitstatus;
 711              		.loc 1 504 0
 712 033c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 505:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 713              		.loc 1 505 0
 714 033e 1846     		mov	r0, r3
 715 0340 07F11407 		add	r7, r7, #20
 716 0344 BD46     		mov	sp, r7
 717 0346 80BC     		pop	{r7}
 718 0348 7047     		bx	lr
 719              		.cfi_endproc
 720              	.LFE66:
 722 034a 00BF     		.align	2
 723              		.global	ADC_DiscModeChannelCountConfig
 724              		.thumb
 725              		.thumb_func
 727              	ADC_DiscModeChannelCountConfig:
 728              	.LFB67:
 506:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 507:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 508:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Configures the discontinuous mode for the selected ADC regular
 509:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         group channel.
 510:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 511:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  Number: specifies the discontinuous mode regular channel
 512:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         count value. This number must be between 1 and 8.
 513:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 514:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 515:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_DiscModeChannelCountConfig(ADC_TypeDef* ADCx, uint8_t Number)
 516:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 729              		.loc 1 516 0
 730              		.cfi_startproc
 731              		@ args = 0, pretend = 0, frame = 16
 732              		@ frame_needed = 1, uses_anonymous_args = 0
 733              		@ link register save eliminated.
 734 034c 80B4     		push	{r7}
 735              	.LCFI36:
 736              		.cfi_def_cfa_offset 4
 737              		.cfi_offset 7, -4
 738 034e 85B0     		sub	sp, sp, #20
 739              	.LCFI37:
 740              		.cfi_def_cfa_offset 24
 741 0350 00AF     		add	r7, sp, #0
 742              	.LCFI38:
 743              		.cfi_def_cfa_register 7
 744 0352 7860     		str	r0, [r7, #4]
 745 0354 0B46     		mov	r3, r1
 746 0356 FB70     		strb	r3, [r7, #3]
 517:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint32_t tmpreg1 = 0;
 747              		.loc 1 517 0
 748 0358 4FF00003 		mov	r3, #0
 749 035c FB60     		str	r3, [r7, #12]
 518:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint32_t tmpreg2 = 0;
 750              		.loc 1 518 0
 751 035e 4FF00003 		mov	r3, #0
 752 0362 BB60     		str	r3, [r7, #8]
 519:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 520:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 521:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_REGULAR_DISC_NUMBER(Number));
 522:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get the old register value */
 523:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 = ADCx->CR1;
 753              		.loc 1 523 0
 754 0364 7B68     		ldr	r3, [r7, #4]
 755 0366 5B68     		ldr	r3, [r3, #4]
 756 0368 FB60     		str	r3, [r7, #12]
 524:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Clear the old discontinuous mode channel count */
 525:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 &= CR1_DISCNUM_Reset;
 757              		.loc 1 525 0
 758 036a FB68     		ldr	r3, [r7, #12]
 759 036c 23F46043 		bic	r3, r3, #57344
 760 0370 FB60     		str	r3, [r7, #12]
 526:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set the discontinuous mode channel count */
 527:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg2 = Number - 1;
 761              		.loc 1 527 0
 762 0372 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 763 0374 03F1FF33 		add	r3, r3, #-1
 764 0378 BB60     		str	r3, [r7, #8]
 528:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 |= tmpreg2 << 13;
 765              		.loc 1 528 0
 766 037a BB68     		ldr	r3, [r7, #8]
 767 037c 4FEA4333 		lsl	r3, r3, #13
 768 0380 FA68     		ldr	r2, [r7, #12]
 769 0382 1343     		orrs	r3, r3, r2
 770 0384 FB60     		str	r3, [r7, #12]
 529:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Store the new register value */
 530:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->CR1 = tmpreg1;
 771              		.loc 1 530 0
 772 0386 7B68     		ldr	r3, [r7, #4]
 773 0388 FA68     		ldr	r2, [r7, #12]
 774 038a 5A60     		str	r2, [r3, #4]
 531:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 775              		.loc 1 531 0
 776 038c 07F11407 		add	r7, r7, #20
 777 0390 BD46     		mov	sp, r7
 778 0392 80BC     		pop	{r7}
 779 0394 7047     		bx	lr
 780              		.cfi_endproc
 781              	.LFE67:
 783 0396 00BF     		.align	2
 784              		.global	ADC_DiscModeCmd
 785              		.thumb
 786              		.thumb_func
 788              	ADC_DiscModeCmd:
 789              	.LFB68:
 532:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 533:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 534:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the discontinuous mode on regular group
 535:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         channel for the specified ADC
 536:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 537:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the selected ADC discontinuous mode
 538:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         on regular group channel.
 539:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         This parameter can be: ENABLE or DISABLE.
 540:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 541:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 542:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_DiscModeCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 543:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 790              		.loc 1 543 0
 791              		.cfi_startproc
 792              		@ args = 0, pretend = 0, frame = 8
 793              		@ frame_needed = 1, uses_anonymous_args = 0
 794              		@ link register save eliminated.
 795 0398 80B4     		push	{r7}
 796              	.LCFI39:
 797              		.cfi_def_cfa_offset 4
 798              		.cfi_offset 7, -4
 799 039a 83B0     		sub	sp, sp, #12
 800              	.LCFI40:
 801              		.cfi_def_cfa_offset 16
 802 039c 00AF     		add	r7, sp, #0
 803              	.LCFI41:
 804              		.cfi_def_cfa_register 7
 805 039e 7860     		str	r0, [r7, #4]
 806 03a0 0B46     		mov	r3, r1
 807 03a2 FB70     		strb	r3, [r7, #3]
 544:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 545:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 546:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 547:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 808              		.loc 1 547 0
 809 03a4 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 810 03a6 002B     		cmp	r3, #0
 811 03a8 06D0     		beq	.L39
 548:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 549:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Enable the selected ADC regular discontinuous mode */
 550:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR1 |= CR1_DISCEN_Set;
 812              		.loc 1 550 0
 813 03aa 7B68     		ldr	r3, [r7, #4]
 814 03ac 5B68     		ldr	r3, [r3, #4]
 815 03ae 43F40062 		orr	r2, r3, #2048
 816 03b2 7B68     		ldr	r3, [r7, #4]
 817 03b4 5A60     		str	r2, [r3, #4]
 818 03b6 05E0     		b	.L38
 819              	.L39:
 551:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 552:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 553:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 554:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Disable the selected ADC regular discontinuous mode */
 555:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR1 &= CR1_DISCEN_Reset;
 820              		.loc 1 555 0
 821 03b8 7B68     		ldr	r3, [r7, #4]
 822 03ba 5B68     		ldr	r3, [r3, #4]
 823 03bc 23F40062 		bic	r2, r3, #2048
 824 03c0 7B68     		ldr	r3, [r7, #4]
 825 03c2 5A60     		str	r2, [r3, #4]
 826              	.L38:
 556:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 557:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 827              		.loc 1 557 0
 828 03c4 07F10C07 		add	r7, r7, #12
 829 03c8 BD46     		mov	sp, r7
 830 03ca 80BC     		pop	{r7}
 831 03cc 7047     		bx	lr
 832              		.cfi_endproc
 833              	.LFE68:
 835 03ce 00BF     		.align	2
 836              		.global	ADC_RegularChannelConfig
 837              		.thumb
 838              		.thumb_func
 840              	ADC_RegularChannelConfig:
 841              	.LFB69:
 558:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 559:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 560:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Configures for the selected ADC regular channel its corresponding
 561:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         rank in the sequencer and its sample time.
 562:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 563:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_Channel: the ADC channel to configure. 
 564:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
 565:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_0: ADC Channel0 selected
 566:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_1: ADC Channel1 selected
 567:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_2: ADC Channel2 selected
 568:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_3: ADC Channel3 selected
 569:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_4: ADC Channel4 selected
 570:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_5: ADC Channel5 selected
 571:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_6: ADC Channel6 selected
 572:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_7: ADC Channel7 selected
 573:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_8: ADC Channel8 selected
 574:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_9: ADC Channel9 selected
 575:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_10: ADC Channel10 selected
 576:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_11: ADC Channel11 selected
 577:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_12: ADC Channel12 selected
 578:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_13: ADC Channel13 selected
 579:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_14: ADC Channel14 selected
 580:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_15: ADC Channel15 selected
 581:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_16: ADC Channel16 selected
 582:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_17: ADC Channel17 selected
 583:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  Rank: The rank in the regular group sequencer. This parameter must be between 1 to 16.
 584:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_SampleTime: The sample time value to be set for the selected channel. 
 585:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
 586:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_1Cycles5: Sample time equal to 1.5 cycles
 587:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_7Cycles5: Sample time equal to 7.5 cycles
 588:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_13Cycles5: Sample time equal to 13.5 cycles
 589:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_28Cycles5: Sample time equal to 28.5 cycles	
 590:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_41Cycles5: Sample time equal to 41.5 cycles	
 591:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_55Cycles5: Sample time equal to 55.5 cycles	
 592:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_71Cycles5: Sample time equal to 71.5 cycles	
 593:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_239Cycles5: Sample time equal to 239.5 cycles	
 594:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 595:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 596:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_RegularChannelConfig(ADC_TypeDef* ADCx, uint8_t ADC_Channel, uint8_t Rank, uint8_t ADC_Sam
 597:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 842              		.loc 1 597 0
 843              		.cfi_startproc
 844              		@ args = 0, pretend = 0, frame = 16
 845              		@ frame_needed = 1, uses_anonymous_args = 0
 846              		@ link register save eliminated.
 847 03d0 80B4     		push	{r7}
 848              	.LCFI42:
 849              		.cfi_def_cfa_offset 4
 850              		.cfi_offset 7, -4
 851 03d2 85B0     		sub	sp, sp, #20
 852              	.LCFI43:
 853              		.cfi_def_cfa_offset 24
 854 03d4 00AF     		add	r7, sp, #0
 855              	.LCFI44:
 856              		.cfi_def_cfa_register 7
 857 03d6 7860     		str	r0, [r7, #4]
 858 03d8 F970     		strb	r1, [r7, #3]
 859 03da BA70     		strb	r2, [r7, #2]
 860 03dc 7B70     		strb	r3, [r7, #1]
 598:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint32_t tmpreg1 = 0, tmpreg2 = 0;
 861              		.loc 1 598 0
 862 03de 4FF00003 		mov	r3, #0
 863 03e2 FB60     		str	r3, [r7, #12]
 864 03e4 4FF00003 		mov	r3, #0
 865 03e8 BB60     		str	r3, [r7, #8]
 599:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 600:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 601:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_CHANNEL(ADC_Channel));
 602:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_REGULAR_RANK(Rank));
 603:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(ADC_SampleTime));
 604:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* if ADC_Channel_10 ... ADC_Channel_17 is selected */
 605:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (ADC_Channel > ADC_Channel_9)
 866              		.loc 1 605 0
 867 03ea FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 868 03ec 092B     		cmp	r3, #9
 869 03ee 27D9     		bls	.L42
 606:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 607:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Get the old register value */
 608:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 = ADCx->SMPR1;
 870              		.loc 1 608 0
 871 03f0 7B68     		ldr	r3, [r7, #4]
 872 03f2 DB68     		ldr	r3, [r3, #12]
 873 03f4 FB60     		str	r3, [r7, #12]
 609:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to clear */
 610:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = SMPR1_SMP_Set << (3 * (ADC_Channel - 10));
 874              		.loc 1 610 0
 875 03f6 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 876 03f8 1346     		mov	r3, r2
 877 03fa 4FEA4303 		lsl	r3, r3, #1
 878 03fe 9B18     		adds	r3, r3, r2
 879 0400 A3F11E03 		sub	r3, r3, #30
 880 0404 4FF00702 		mov	r2, #7
 881 0408 02FA03F3 		lsl	r3, r2, r3
 882 040c BB60     		str	r3, [r7, #8]
 611:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Clear the old channel sample time */
 612:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 &= ~tmpreg2;
 883              		.loc 1 612 0
 884 040e BB68     		ldr	r3, [r7, #8]
 885 0410 6FEA0303 		mvn	r3, r3
 886 0414 FA68     		ldr	r2, [r7, #12]
 887 0416 1340     		ands	r3, r3, r2
 888 0418 FB60     		str	r3, [r7, #12]
 613:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to set */
 614:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = (uint32_t)ADC_SampleTime << (3 * (ADC_Channel - 10));
 889              		.loc 1 614 0
 890 041a 7978     		ldrb	r1, [r7, #1]	@ zero_extendqisi2
 891 041c FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 892 041e 1346     		mov	r3, r2
 893 0420 4FEA4303 		lsl	r3, r3, #1
 894 0424 9B18     		adds	r3, r3, r2
 895 0426 A3F11E03 		sub	r3, r3, #30
 896 042a 01FA03F3 		lsl	r3, r1, r3
 897 042e BB60     		str	r3, [r7, #8]
 615:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Set the new channel sample time */
 616:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 |= tmpreg2;
 898              		.loc 1 616 0
 899 0430 FA68     		ldr	r2, [r7, #12]
 900 0432 BB68     		ldr	r3, [r7, #8]
 901 0434 1343     		orrs	r3, r3, r2
 902 0436 FB60     		str	r3, [r7, #12]
 617:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Store the new register value */
 618:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->SMPR1 = tmpreg1;
 903              		.loc 1 618 0
 904 0438 7B68     		ldr	r3, [r7, #4]
 905 043a FA68     		ldr	r2, [r7, #12]
 906 043c DA60     		str	r2, [r3, #12]
 907 043e 22E0     		b	.L43
 908              	.L42:
 619:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 620:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else /* ADC_Channel include in ADC_Channel_[0..9] */
 621:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 622:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Get the old register value */
 623:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 = ADCx->SMPR2;
 909              		.loc 1 623 0
 910 0440 7B68     		ldr	r3, [r7, #4]
 911 0442 1B69     		ldr	r3, [r3, #16]
 912 0444 FB60     		str	r3, [r7, #12]
 624:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to clear */
 625:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = SMPR2_SMP_Set << (3 * ADC_Channel);
 913              		.loc 1 625 0
 914 0446 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 915 0448 1346     		mov	r3, r2
 916 044a 4FEA4303 		lsl	r3, r3, #1
 917 044e 9B18     		adds	r3, r3, r2
 918 0450 4FF00702 		mov	r2, #7
 919 0454 02FA03F3 		lsl	r3, r2, r3
 920 0458 BB60     		str	r3, [r7, #8]
 626:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Clear the old channel sample time */
 627:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 &= ~tmpreg2;
 921              		.loc 1 627 0
 922 045a BB68     		ldr	r3, [r7, #8]
 923 045c 6FEA0303 		mvn	r3, r3
 924 0460 FA68     		ldr	r2, [r7, #12]
 925 0462 1340     		ands	r3, r3, r2
 926 0464 FB60     		str	r3, [r7, #12]
 628:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to set */
 629:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = (uint32_t)ADC_SampleTime << (3 * ADC_Channel);
 927              		.loc 1 629 0
 928 0466 7978     		ldrb	r1, [r7, #1]	@ zero_extendqisi2
 929 0468 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 930 046a 1346     		mov	r3, r2
 931 046c 4FEA4303 		lsl	r3, r3, #1
 932 0470 9B18     		adds	r3, r3, r2
 933 0472 01FA03F3 		lsl	r3, r1, r3
 934 0476 BB60     		str	r3, [r7, #8]
 630:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Set the new channel sample time */
 631:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 |= tmpreg2;
 935              		.loc 1 631 0
 936 0478 FA68     		ldr	r2, [r7, #12]
 937 047a BB68     		ldr	r3, [r7, #8]
 938 047c 1343     		orrs	r3, r3, r2
 939 047e FB60     		str	r3, [r7, #12]
 632:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Store the new register value */
 633:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->SMPR2 = tmpreg1;
 940              		.loc 1 633 0
 941 0480 7B68     		ldr	r3, [r7, #4]
 942 0482 FA68     		ldr	r2, [r7, #12]
 943 0484 1A61     		str	r2, [r3, #16]
 944              	.L43:
 634:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 635:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* For Rank 1 to 6 */
 636:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (Rank < 7)
 945              		.loc 1 636 0
 946 0486 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 947 0488 062B     		cmp	r3, #6
 948 048a 27D8     		bhi	.L44
 637:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 638:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Get the old register value */
 639:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 = ADCx->SQR3;
 949              		.loc 1 639 0
 950 048c 7B68     		ldr	r3, [r7, #4]
 951 048e 5B6B     		ldr	r3, [r3, #52]
 952 0490 FB60     		str	r3, [r7, #12]
 640:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to clear */
 641:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = SQR3_SQ_Set << (5 * (Rank - 1));
 953              		.loc 1 641 0
 954 0492 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 955 0494 03F1FF32 		add	r2, r3, #-1
 956 0498 1346     		mov	r3, r2
 957 049a 4FEA8303 		lsl	r3, r3, #2
 958 049e 9B18     		adds	r3, r3, r2
 959 04a0 4FF01F02 		mov	r2, #31
 960 04a4 02FA03F3 		lsl	r3, r2, r3
 961 04a8 BB60     		str	r3, [r7, #8]
 642:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Clear the old SQx bits for the selected rank */
 643:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 &= ~tmpreg2;
 962              		.loc 1 643 0
 963 04aa BB68     		ldr	r3, [r7, #8]
 964 04ac 6FEA0303 		mvn	r3, r3
 965 04b0 FA68     		ldr	r2, [r7, #12]
 966 04b2 1340     		ands	r3, r3, r2
 967 04b4 FB60     		str	r3, [r7, #12]
 644:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to set */
 645:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = (uint32_t)ADC_Channel << (5 * (Rank - 1));
 968              		.loc 1 645 0
 969 04b6 F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 970 04b8 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 971 04ba 03F1FF32 		add	r2, r3, #-1
 972 04be 1346     		mov	r3, r2
 973 04c0 4FEA8303 		lsl	r3, r3, #2
 974 04c4 9B18     		adds	r3, r3, r2
 975 04c6 01FA03F3 		lsl	r3, r1, r3
 976 04ca BB60     		str	r3, [r7, #8]
 646:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Set the SQx bits for the selected rank */
 647:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 |= tmpreg2;
 977              		.loc 1 647 0
 978 04cc FA68     		ldr	r2, [r7, #12]
 979 04ce BB68     		ldr	r3, [r7, #8]
 980 04d0 1343     		orrs	r3, r3, r2
 981 04d2 FB60     		str	r3, [r7, #12]
 648:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Store the new register value */
 649:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->SQR3 = tmpreg1;
 982              		.loc 1 649 0
 983 04d4 7B68     		ldr	r3, [r7, #4]
 984 04d6 FA68     		ldr	r2, [r7, #12]
 985 04d8 5A63     		str	r2, [r3, #52]
 986 04da 51E0     		b	.L41
 987              	.L44:
 650:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 651:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* For Rank 7 to 12 */
 652:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else if (Rank < 13)
 988              		.loc 1 652 0
 989 04dc BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 990 04de 0C2B     		cmp	r3, #12
 991 04e0 27D8     		bhi	.L46
 653:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 654:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Get the old register value */
 655:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 = ADCx->SQR2;
 992              		.loc 1 655 0
 993 04e2 7B68     		ldr	r3, [r7, #4]
 994 04e4 1B6B     		ldr	r3, [r3, #48]
 995 04e6 FB60     		str	r3, [r7, #12]
 656:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to clear */
 657:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = SQR2_SQ_Set << (5 * (Rank - 7));
 996              		.loc 1 657 0
 997 04e8 BA78     		ldrb	r2, [r7, #2]	@ zero_extendqisi2
 998 04ea 1346     		mov	r3, r2
 999 04ec 4FEA8303 		lsl	r3, r3, #2
 1000 04f0 9B18     		adds	r3, r3, r2
 1001 04f2 A3F12303 		sub	r3, r3, #35
 1002 04f6 4FF01F02 		mov	r2, #31
 1003 04fa 02FA03F3 		lsl	r3, r2, r3
 1004 04fe BB60     		str	r3, [r7, #8]
 658:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Clear the old SQx bits for the selected rank */
 659:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 &= ~tmpreg2;
 1005              		.loc 1 659 0
 1006 0500 BB68     		ldr	r3, [r7, #8]
 1007 0502 6FEA0303 		mvn	r3, r3
 1008 0506 FA68     		ldr	r2, [r7, #12]
 1009 0508 1340     		ands	r3, r3, r2
 1010 050a FB60     		str	r3, [r7, #12]
 660:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to set */
 661:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = (uint32_t)ADC_Channel << (5 * (Rank - 7));
 1011              		.loc 1 661 0
 1012 050c F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 1013 050e BA78     		ldrb	r2, [r7, #2]	@ zero_extendqisi2
 1014 0510 1346     		mov	r3, r2
 1015 0512 4FEA8303 		lsl	r3, r3, #2
 1016 0516 9B18     		adds	r3, r3, r2
 1017 0518 A3F12303 		sub	r3, r3, #35
 1018 051c 01FA03F3 		lsl	r3, r1, r3
 1019 0520 BB60     		str	r3, [r7, #8]
 662:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Set the SQx bits for the selected rank */
 663:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 |= tmpreg2;
 1020              		.loc 1 663 0
 1021 0522 FA68     		ldr	r2, [r7, #12]
 1022 0524 BB68     		ldr	r3, [r7, #8]
 1023 0526 1343     		orrs	r3, r3, r2
 1024 0528 FB60     		str	r3, [r7, #12]
 664:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Store the new register value */
 665:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->SQR2 = tmpreg1;
 1025              		.loc 1 665 0
 1026 052a 7B68     		ldr	r3, [r7, #4]
 1027 052c FA68     		ldr	r2, [r7, #12]
 1028 052e 1A63     		str	r2, [r3, #48]
 1029 0530 26E0     		b	.L41
 1030              	.L46:
 666:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 667:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* For Rank 13 to 16 */
 668:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 669:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 670:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Get the old register value */
 671:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 = ADCx->SQR1;
 1031              		.loc 1 671 0
 1032 0532 7B68     		ldr	r3, [r7, #4]
 1033 0534 DB6A     		ldr	r3, [r3, #44]
 1034 0536 FB60     		str	r3, [r7, #12]
 672:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to clear */
 673:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = SQR1_SQ_Set << (5 * (Rank - 13));
 1035              		.loc 1 673 0
 1036 0538 BA78     		ldrb	r2, [r7, #2]	@ zero_extendqisi2
 1037 053a 1346     		mov	r3, r2
 1038 053c 4FEA8303 		lsl	r3, r3, #2
 1039 0540 9B18     		adds	r3, r3, r2
 1040 0542 A3F14103 		sub	r3, r3, #65
 1041 0546 4FF01F02 		mov	r2, #31
 1042 054a 02FA03F3 		lsl	r3, r2, r3
 1043 054e BB60     		str	r3, [r7, #8]
 674:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Clear the old SQx bits for the selected rank */
 675:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 &= ~tmpreg2;
 1044              		.loc 1 675 0
 1045 0550 BB68     		ldr	r3, [r7, #8]
 1046 0552 6FEA0303 		mvn	r3, r3
 1047 0556 FA68     		ldr	r2, [r7, #12]
 1048 0558 1340     		ands	r3, r3, r2
 1049 055a FB60     		str	r3, [r7, #12]
 676:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to set */
 677:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = (uint32_t)ADC_Channel << (5 * (Rank - 13));
 1050              		.loc 1 677 0
 1051 055c F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 1052 055e BA78     		ldrb	r2, [r7, #2]	@ zero_extendqisi2
 1053 0560 1346     		mov	r3, r2
 1054 0562 4FEA8303 		lsl	r3, r3, #2
 1055 0566 9B18     		adds	r3, r3, r2
 1056 0568 A3F14103 		sub	r3, r3, #65
 1057 056c 01FA03F3 		lsl	r3, r1, r3
 1058 0570 BB60     		str	r3, [r7, #8]
 678:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Set the SQx bits for the selected rank */
 679:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 |= tmpreg2;
 1059              		.loc 1 679 0
 1060 0572 FA68     		ldr	r2, [r7, #12]
 1061 0574 BB68     		ldr	r3, [r7, #8]
 1062 0576 1343     		orrs	r3, r3, r2
 1063 0578 FB60     		str	r3, [r7, #12]
 680:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Store the new register value */
 681:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->SQR1 = tmpreg1;
 1064              		.loc 1 681 0
 1065 057a 7B68     		ldr	r3, [r7, #4]
 1066 057c FA68     		ldr	r2, [r7, #12]
 1067 057e DA62     		str	r2, [r3, #44]
 1068              	.L41:
 682:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 683:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 1069              		.loc 1 683 0
 1070 0580 07F11407 		add	r7, r7, #20
 1071 0584 BD46     		mov	sp, r7
 1072 0586 80BC     		pop	{r7}
 1073 0588 7047     		bx	lr
 1074              		.cfi_endproc
 1075              	.LFE69:
 1077 058a 00BF     		.align	2
 1078              		.global	ADC_ExternalTrigConvCmd
 1079              		.thumb
 1080              		.thumb_func
 1082              	ADC_ExternalTrigConvCmd:
 1083              	.LFB70:
 684:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 685:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 686:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the ADCx conversion through external trigger.
 687:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 688:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the selected ADC external trigger start of conversion.
 689:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
 690:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 691:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 692:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_ExternalTrigConvCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 693:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 1084              		.loc 1 693 0
 1085              		.cfi_startproc
 1086              		@ args = 0, pretend = 0, frame = 8
 1087              		@ frame_needed = 1, uses_anonymous_args = 0
 1088              		@ link register save eliminated.
 1089 058c 80B4     		push	{r7}
 1090              	.LCFI45:
 1091              		.cfi_def_cfa_offset 4
 1092              		.cfi_offset 7, -4
 1093 058e 83B0     		sub	sp, sp, #12
 1094              	.LCFI46:
 1095              		.cfi_def_cfa_offset 16
 1096 0590 00AF     		add	r7, sp, #0
 1097              	.LCFI47:
 1098              		.cfi_def_cfa_register 7
 1099 0592 7860     		str	r0, [r7, #4]
 1100 0594 0B46     		mov	r3, r1
 1101 0596 FB70     		strb	r3, [r7, #3]
 694:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 695:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 696:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 697:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 1102              		.loc 1 697 0
 1103 0598 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1104 059a 002B     		cmp	r3, #0
 1105 059c 06D0     		beq	.L48
 698:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 699:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Enable the selected ADC conversion on external event */
 700:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR2 |= CR2_EXTTRIG_Set;
 1106              		.loc 1 700 0
 1107 059e 7B68     		ldr	r3, [r7, #4]
 1108 05a0 9B68     		ldr	r3, [r3, #8]
 1109 05a2 43F48012 		orr	r2, r3, #1048576
 1110 05a6 7B68     		ldr	r3, [r7, #4]
 1111 05a8 9A60     		str	r2, [r3, #8]
 1112 05aa 05E0     		b	.L47
 1113              	.L48:
 701:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 702:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 703:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 704:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Disable the selected ADC conversion on external event */
 705:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR2 &= CR2_EXTTRIG_Reset;
 1114              		.loc 1 705 0
 1115 05ac 7B68     		ldr	r3, [r7, #4]
 1116 05ae 9B68     		ldr	r3, [r3, #8]
 1117 05b0 23F48012 		bic	r2, r3, #1048576
 1118 05b4 7B68     		ldr	r3, [r7, #4]
 1119 05b6 9A60     		str	r2, [r3, #8]
 1120              	.L47:
 706:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 707:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 1121              		.loc 1 707 0
 1122 05b8 07F10C07 		add	r7, r7, #12
 1123 05bc BD46     		mov	sp, r7
 1124 05be 80BC     		pop	{r7}
 1125 05c0 7047     		bx	lr
 1126              		.cfi_endproc
 1127              	.LFE70:
 1129 05c2 00BF     		.align	2
 1130              		.global	ADC_GetConversionValue
 1131              		.thumb
 1132              		.thumb_func
 1134              	ADC_GetConversionValue:
 1135              	.LFB71:
 708:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 709:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 710:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Returns the last ADCx conversion result data for regular channel.
 711:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 712:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval The Data conversion value.
 713:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 714:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** uint16_t ADC_GetConversionValue(ADC_TypeDef* ADCx)
 715:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 1136              		.loc 1 715 0
 1137              		.cfi_startproc
 1138              		@ args = 0, pretend = 0, frame = 8
 1139              		@ frame_needed = 1, uses_anonymous_args = 0
 1140              		@ link register save eliminated.
 1141 05c4 80B4     		push	{r7}
 1142              	.LCFI48:
 1143              		.cfi_def_cfa_offset 4
 1144              		.cfi_offset 7, -4
 1145 05c6 83B0     		sub	sp, sp, #12
 1146              	.LCFI49:
 1147              		.cfi_def_cfa_offset 16
 1148 05c8 00AF     		add	r7, sp, #0
 1149              	.LCFI50:
 1150              		.cfi_def_cfa_register 7
 1151 05ca 7860     		str	r0, [r7, #4]
 716:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 717:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 718:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Return the selected ADC conversion value */
 719:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   return (uint16_t) ADCx->DR;
 1152              		.loc 1 719 0
 1153 05cc 7B68     		ldr	r3, [r7, #4]
 1154 05ce DB6C     		ldr	r3, [r3, #76]
 1155 05d0 9BB2     		uxth	r3, r3
 720:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 1156              		.loc 1 720 0
 1157 05d2 1846     		mov	r0, r3
 1158 05d4 07F10C07 		add	r7, r7, #12
 1159 05d8 BD46     		mov	sp, r7
 1160 05da 80BC     		pop	{r7}
 1161 05dc 7047     		bx	lr
 1162              		.cfi_endproc
 1163              	.LFE71:
 1165 05de 00BF     		.align	2
 1166              		.global	ADC_GetDualModeConversionValue
 1167              		.thumb
 1168              		.thumb_func
 1170              	ADC_GetDualModeConversionValue:
 1171              	.LFB72:
 721:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 722:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 723:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Returns the last ADC1 and ADC2 conversion result data in dual mode.
 724:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval The Data conversion value.
 725:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 726:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** uint32_t ADC_GetDualModeConversionValue(void)
 727:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 1172              		.loc 1 727 0
 1173              		.cfi_startproc
 1174              		@ args = 0, pretend = 0, frame = 0
 1175              		@ frame_needed = 1, uses_anonymous_args = 0
 1176              		@ link register save eliminated.
 1177 05e0 80B4     		push	{r7}
 1178              	.LCFI51:
 1179              		.cfi_def_cfa_offset 4
 1180              		.cfi_offset 7, -4
 1181 05e2 00AF     		add	r7, sp, #0
 1182              	.LCFI52:
 1183              		.cfi_def_cfa_register 7
 728:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Return the dual mode conversion value */
 729:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   return (*(__IO uint32_t *) DR_ADDRESS);
 1184              		.loc 1 729 0
 1185 05e4 024B     		ldr	r3, .L54
 1186 05e6 1B68     		ldr	r3, [r3, #0]
 730:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 1187              		.loc 1 730 0
 1188 05e8 1846     		mov	r0, r3
 1189 05ea BD46     		mov	sp, r7
 1190 05ec 80BC     		pop	{r7}
 1191 05ee 7047     		bx	lr
 1192              	.L55:
 1193              		.align	2
 1194              	.L54:
 1195 05f0 4C240140 		.word	1073816652
 1196              		.cfi_endproc
 1197              	.LFE72:
 1199              		.align	2
 1200              		.global	ADC_AutoInjectedConvCmd
 1201              		.thumb
 1202              		.thumb_func
 1204              	ADC_AutoInjectedConvCmd:
 1205              	.LFB73:
 731:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 732:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 733:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the selected ADC automatic injected group
 734:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         conversion after regular one.
 735:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 736:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the selected ADC auto injected conversion
 737:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
 738:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 739:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 740:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_AutoInjectedConvCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 741:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 1206              		.loc 1 741 0
 1207              		.cfi_startproc
 1208              		@ args = 0, pretend = 0, frame = 8
 1209              		@ frame_needed = 1, uses_anonymous_args = 0
 1210              		@ link register save eliminated.
 1211 05f4 80B4     		push	{r7}
 1212              	.LCFI53:
 1213              		.cfi_def_cfa_offset 4
 1214              		.cfi_offset 7, -4
 1215 05f6 83B0     		sub	sp, sp, #12
 1216              	.LCFI54:
 1217              		.cfi_def_cfa_offset 16
 1218 05f8 00AF     		add	r7, sp, #0
 1219              	.LCFI55:
 1220              		.cfi_def_cfa_register 7
 1221 05fa 7860     		str	r0, [r7, #4]
 1222 05fc 0B46     		mov	r3, r1
 1223 05fe FB70     		strb	r3, [r7, #3]
 742:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 743:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 744:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 745:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 1224              		.loc 1 745 0
 1225 0600 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1226 0602 002B     		cmp	r3, #0
 1227 0604 06D0     		beq	.L57
 746:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 747:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Enable the selected ADC automatic injected group conversion */
 748:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR1 |= CR1_JAUTO_Set;
 1228              		.loc 1 748 0
 1229 0606 7B68     		ldr	r3, [r7, #4]
 1230 0608 5B68     		ldr	r3, [r3, #4]
 1231 060a 43F48062 		orr	r2, r3, #1024
 1232 060e 7B68     		ldr	r3, [r7, #4]
 1233 0610 5A60     		str	r2, [r3, #4]
 1234 0612 05E0     		b	.L56
 1235              	.L57:
 749:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 750:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 751:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 752:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Disable the selected ADC automatic injected group conversion */
 753:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR1 &= CR1_JAUTO_Reset;
 1236              		.loc 1 753 0
 1237 0614 7B68     		ldr	r3, [r7, #4]
 1238 0616 5B68     		ldr	r3, [r3, #4]
 1239 0618 23F48062 		bic	r2, r3, #1024
 1240 061c 7B68     		ldr	r3, [r7, #4]
 1241 061e 5A60     		str	r2, [r3, #4]
 1242              	.L56:
 754:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 755:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 1243              		.loc 1 755 0
 1244 0620 07F10C07 		add	r7, r7, #12
 1245 0624 BD46     		mov	sp, r7
 1246 0626 80BC     		pop	{r7}
 1247 0628 7047     		bx	lr
 1248              		.cfi_endproc
 1249              	.LFE73:
 1251 062a 00BF     		.align	2
 1252              		.global	ADC_InjectedDiscModeCmd
 1253              		.thumb
 1254              		.thumb_func
 1256              	ADC_InjectedDiscModeCmd:
 1257              	.LFB74:
 756:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 757:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 758:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the discontinuous mode for injected group
 759:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         channel for the specified ADC
 760:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 761:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the selected ADC discontinuous mode
 762:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         on injected group channel.
 763:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
 764:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 765:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 766:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_InjectedDiscModeCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 767:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 1258              		.loc 1 767 0
 1259              		.cfi_startproc
 1260              		@ args = 0, pretend = 0, frame = 8
 1261              		@ frame_needed = 1, uses_anonymous_args = 0
 1262              		@ link register save eliminated.
 1263 062c 80B4     		push	{r7}
 1264              	.LCFI56:
 1265              		.cfi_def_cfa_offset 4
 1266              		.cfi_offset 7, -4
 1267 062e 83B0     		sub	sp, sp, #12
 1268              	.LCFI57:
 1269              		.cfi_def_cfa_offset 16
 1270 0630 00AF     		add	r7, sp, #0
 1271              	.LCFI58:
 1272              		.cfi_def_cfa_register 7
 1273 0632 7860     		str	r0, [r7, #4]
 1274 0634 0B46     		mov	r3, r1
 1275 0636 FB70     		strb	r3, [r7, #3]
 768:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 769:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 770:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 771:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 1276              		.loc 1 771 0
 1277 0638 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1278 063a 002B     		cmp	r3, #0
 1279 063c 06D0     		beq	.L60
 772:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 773:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Enable the selected ADC injected discontinuous mode */
 774:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR1 |= CR1_JDISCEN_Set;
 1280              		.loc 1 774 0
 1281 063e 7B68     		ldr	r3, [r7, #4]
 1282 0640 5B68     		ldr	r3, [r3, #4]
 1283 0642 43F48052 		orr	r2, r3, #4096
 1284 0646 7B68     		ldr	r3, [r7, #4]
 1285 0648 5A60     		str	r2, [r3, #4]
 1286 064a 05E0     		b	.L59
 1287              	.L60:
 775:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 776:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 777:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 778:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Disable the selected ADC injected discontinuous mode */
 779:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR1 &= CR1_JDISCEN_Reset;
 1288              		.loc 1 779 0
 1289 064c 7B68     		ldr	r3, [r7, #4]
 1290 064e 5B68     		ldr	r3, [r3, #4]
 1291 0650 23F48052 		bic	r2, r3, #4096
 1292 0654 7B68     		ldr	r3, [r7, #4]
 1293 0656 5A60     		str	r2, [r3, #4]
 1294              	.L59:
 780:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 781:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 1295              		.loc 1 781 0
 1296 0658 07F10C07 		add	r7, r7, #12
 1297 065c BD46     		mov	sp, r7
 1298 065e 80BC     		pop	{r7}
 1299 0660 7047     		bx	lr
 1300              		.cfi_endproc
 1301              	.LFE74:
 1303 0662 00BF     		.align	2
 1304              		.global	ADC_ExternalTrigInjectedConvConfig
 1305              		.thumb
 1306              		.thumb_func
 1308              	ADC_ExternalTrigInjectedConvConfig:
 1309              	.LFB75:
 782:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 783:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 784:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Configures the ADCx external trigger for injected channels conversion.
 785:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 786:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_ExternalTrigInjecConv: specifies the ADC trigger to start injected conversion. 
 787:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
 788:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T1_TRGO: Timer1 TRGO event selected (for ADC1, ADC2 and ADC3
 789:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T1_CC4: Timer1 capture compare4 selected (for ADC1, ADC2 and
 790:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T2_TRGO: Timer2 TRGO event selected (for ADC1 and ADC2)
 791:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T2_CC1: Timer2 capture compare1 selected (for ADC1 and ADC2)
 792:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T3_CC4: Timer3 capture compare4 selected (for ADC1 and ADC2)
 793:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T4_TRGO: Timer4 TRGO event selected (for ADC1 and ADC2)
 794:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_Ext_IT15_TIM8_CC4: External interrupt line 15 or Timer8
 795:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *                                                       capture compare4 event selected (for ADC1
 796:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T4_CC3: Timer4 capture compare3 selected (for ADC3 only)
 797:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T8_CC2: Timer8 capture compare2 selected (for ADC3 only)    
 798:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T8_CC4: Timer8 capture compare4 selected (for ADC3 only)
 799:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T5_TRGO: Timer5 TRGO event selected (for ADC3 only)         
 800:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T5_CC4: Timer5 capture compare4 selected (for ADC3 only)    
 801:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_None: Injected conversion started by software and not
 802:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *                                          by external trigger (for ADC1, ADC2 and ADC3)
 803:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 804:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 805:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_ExternalTrigInjectedConvConfig(ADC_TypeDef* ADCx, uint32_t ADC_ExternalTrigInjecConv)
 806:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 1310              		.loc 1 806 0
 1311              		.cfi_startproc
 1312              		@ args = 0, pretend = 0, frame = 16
 1313              		@ frame_needed = 1, uses_anonymous_args = 0
 1314              		@ link register save eliminated.
 1315 0664 80B4     		push	{r7}
 1316              	.LCFI59:
 1317              		.cfi_def_cfa_offset 4
 1318              		.cfi_offset 7, -4
 1319 0666 85B0     		sub	sp, sp, #20
 1320              	.LCFI60:
 1321              		.cfi_def_cfa_offset 24
 1322 0668 00AF     		add	r7, sp, #0
 1323              	.LCFI61:
 1324              		.cfi_def_cfa_register 7
 1325 066a 7860     		str	r0, [r7, #4]
 1326 066c 3960     		str	r1, [r7, #0]
 807:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint32_t tmpreg = 0;
 1327              		.loc 1 807 0
 1328 066e 4FF00003 		mov	r3, #0
 1329 0672 FB60     		str	r3, [r7, #12]
 808:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 809:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 810:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_EXT_INJEC_TRIG(ADC_ExternalTrigInjecConv));
 811:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get the old register value */
 812:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg = ADCx->CR2;
 1330              		.loc 1 812 0
 1331 0674 7B68     		ldr	r3, [r7, #4]
 1332 0676 9B68     		ldr	r3, [r3, #8]
 1333 0678 FB60     		str	r3, [r7, #12]
 813:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Clear the old external event selection for injected group */
 814:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg &= CR2_JEXTSEL_Reset;
 1334              		.loc 1 814 0
 1335 067a FB68     		ldr	r3, [r7, #12]
 1336 067c 23F4E043 		bic	r3, r3, #28672
 1337 0680 FB60     		str	r3, [r7, #12]
 815:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set the external event selection for injected group */
 816:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg |= ADC_ExternalTrigInjecConv;
 1338              		.loc 1 816 0
 1339 0682 FA68     		ldr	r2, [r7, #12]
 1340 0684 3B68     		ldr	r3, [r7, #0]
 1341 0686 1343     		orrs	r3, r3, r2
 1342 0688 FB60     		str	r3, [r7, #12]
 817:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Store the new register value */
 818:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->CR2 = tmpreg;
 1343              		.loc 1 818 0
 1344 068a 7B68     		ldr	r3, [r7, #4]
 1345 068c FA68     		ldr	r2, [r7, #12]
 1346 068e 9A60     		str	r2, [r3, #8]
 819:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 1347              		.loc 1 819 0
 1348 0690 07F11407 		add	r7, r7, #20
 1349 0694 BD46     		mov	sp, r7
 1350 0696 80BC     		pop	{r7}
 1351 0698 7047     		bx	lr
 1352              		.cfi_endproc
 1353              	.LFE75:
 1355 069a 00BF     		.align	2
 1356              		.global	ADC_ExternalTrigInjectedConvCmd
 1357              		.thumb
 1358              		.thumb_func
 1360              	ADC_ExternalTrigInjectedConvCmd:
 1361              	.LFB76:
 820:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 821:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 822:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the ADCx injected channels conversion through
 823:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         external trigger
 824:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 825:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the selected ADC external trigger start of
 826:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         injected conversion.
 827:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
 828:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 829:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 830:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_ExternalTrigInjectedConvCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 831:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 1362              		.loc 1 831 0
 1363              		.cfi_startproc
 1364              		@ args = 0, pretend = 0, frame = 8
 1365              		@ frame_needed = 1, uses_anonymous_args = 0
 1366              		@ link register save eliminated.
 1367 069c 80B4     		push	{r7}
 1368              	.LCFI62:
 1369              		.cfi_def_cfa_offset 4
 1370              		.cfi_offset 7, -4
 1371 069e 83B0     		sub	sp, sp, #12
 1372              	.LCFI63:
 1373              		.cfi_def_cfa_offset 16
 1374 06a0 00AF     		add	r7, sp, #0
 1375              	.LCFI64:
 1376              		.cfi_def_cfa_register 7
 1377 06a2 7860     		str	r0, [r7, #4]
 1378 06a4 0B46     		mov	r3, r1
 1379 06a6 FB70     		strb	r3, [r7, #3]
 832:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 833:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 834:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 835:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 1380              		.loc 1 835 0
 1381 06a8 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1382 06aa 002B     		cmp	r3, #0
 1383 06ac 06D0     		beq	.L64
 836:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 837:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Enable the selected ADC external event selection for injected group */
 838:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR2 |= CR2_JEXTTRIG_Set;
 1384              		.loc 1 838 0
 1385 06ae 7B68     		ldr	r3, [r7, #4]
 1386 06b0 9B68     		ldr	r3, [r3, #8]
 1387 06b2 43F40042 		orr	r2, r3, #32768
 1388 06b6 7B68     		ldr	r3, [r7, #4]
 1389 06b8 9A60     		str	r2, [r3, #8]
 1390 06ba 05E0     		b	.L63
 1391              	.L64:
 839:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 840:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 841:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 842:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Disable the selected ADC external event selection for injected group */
 843:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR2 &= CR2_JEXTTRIG_Reset;
 1392              		.loc 1 843 0
 1393 06bc 7B68     		ldr	r3, [r7, #4]
 1394 06be 9B68     		ldr	r3, [r3, #8]
 1395 06c0 23F40042 		bic	r2, r3, #32768
 1396 06c4 7B68     		ldr	r3, [r7, #4]
 1397 06c6 9A60     		str	r2, [r3, #8]
 1398              	.L63:
 844:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 845:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 1399              		.loc 1 845 0
 1400 06c8 07F10C07 		add	r7, r7, #12
 1401 06cc BD46     		mov	sp, r7
 1402 06ce 80BC     		pop	{r7}
 1403 06d0 7047     		bx	lr
 1404              		.cfi_endproc
 1405              	.LFE76:
 1407 06d2 00BF     		.align	2
 1408              		.global	ADC_SoftwareStartInjectedConvCmd
 1409              		.thumb
 1410              		.thumb_func
 1412              	ADC_SoftwareStartInjectedConvCmd:
 1413              	.LFB77:
 846:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 847:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 848:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the selected ADC start of the injected 
 849:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         channels conversion.
 850:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 851:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the selected ADC software start injected conversion.
 852:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
 853:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 854:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 855:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_SoftwareStartInjectedConvCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 856:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 1414              		.loc 1 856 0
 1415              		.cfi_startproc
 1416              		@ args = 0, pretend = 0, frame = 8
 1417              		@ frame_needed = 1, uses_anonymous_args = 0
 1418              		@ link register save eliminated.
 1419 06d4 80B4     		push	{r7}
 1420              	.LCFI65:
 1421              		.cfi_def_cfa_offset 4
 1422              		.cfi_offset 7, -4
 1423 06d6 83B0     		sub	sp, sp, #12
 1424              	.LCFI66:
 1425              		.cfi_def_cfa_offset 16
 1426 06d8 00AF     		add	r7, sp, #0
 1427              	.LCFI67:
 1428              		.cfi_def_cfa_register 7
 1429 06da 7860     		str	r0, [r7, #4]
 1430 06dc 0B46     		mov	r3, r1
 1431 06de FB70     		strb	r3, [r7, #3]
 857:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 858:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 859:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 860:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 1432              		.loc 1 860 0
 1433 06e0 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1434 06e2 002B     		cmp	r3, #0
 1435 06e4 06D0     		beq	.L67
 861:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 862:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Enable the selected ADC conversion for injected group on external event and start the select
 863:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****        ADC injected conversion */
 864:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR2 |= CR2_JEXTTRIG_JSWSTART_Set;
 1436              		.loc 1 864 0
 1437 06e6 7B68     		ldr	r3, [r7, #4]
 1438 06e8 9B68     		ldr	r3, [r3, #8]
 1439 06ea 43F40212 		orr	r2, r3, #2129920
 1440 06ee 7B68     		ldr	r3, [r7, #4]
 1441 06f0 9A60     		str	r2, [r3, #8]
 1442 06f2 05E0     		b	.L66
 1443              	.L67:
 865:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 866:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 867:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 868:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Disable the selected ADC conversion on external event for injected group and stop the select
 869:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****        ADC injected conversion */
 870:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR2 &= CR2_JEXTTRIG_JSWSTART_Reset;
 1444              		.loc 1 870 0
 1445 06f4 7B68     		ldr	r3, [r7, #4]
 1446 06f6 9B68     		ldr	r3, [r3, #8]
 1447 06f8 23F40212 		bic	r2, r3, #2129920
 1448 06fc 7B68     		ldr	r3, [r7, #4]
 1449 06fe 9A60     		str	r2, [r3, #8]
 1450              	.L66:
 871:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 872:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 1451              		.loc 1 872 0
 1452 0700 07F10C07 		add	r7, r7, #12
 1453 0704 BD46     		mov	sp, r7
 1454 0706 80BC     		pop	{r7}
 1455 0708 7047     		bx	lr
 1456              		.cfi_endproc
 1457              	.LFE77:
 1459 070a 00BF     		.align	2
 1460              		.global	ADC_GetSoftwareStartInjectedConvCmdStatus
 1461              		.thumb
 1462              		.thumb_func
 1464              	ADC_GetSoftwareStartInjectedConvCmdStatus:
 1465              	.LFB78:
 873:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 874:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 875:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Gets the selected ADC Software start injected conversion Status.
 876:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 877:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval The new state of ADC software start injected conversion (SET or RESET).
 878:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 879:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** FlagStatus ADC_GetSoftwareStartInjectedConvCmdStatus(ADC_TypeDef* ADCx)
 880:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 1466              		.loc 1 880 0
 1467              		.cfi_startproc
 1468              		@ args = 0, pretend = 0, frame = 16
 1469              		@ frame_needed = 1, uses_anonymous_args = 0
 1470              		@ link register save eliminated.
 1471 070c 80B4     		push	{r7}
 1472              	.LCFI68:
 1473              		.cfi_def_cfa_offset 4
 1474              		.cfi_offset 7, -4
 1475 070e 85B0     		sub	sp, sp, #20
 1476              	.LCFI69:
 1477              		.cfi_def_cfa_offset 24
 1478 0710 00AF     		add	r7, sp, #0
 1479              	.LCFI70:
 1480              		.cfi_def_cfa_register 7
 1481 0712 7860     		str	r0, [r7, #4]
 881:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   FlagStatus bitstatus = RESET;
 1482              		.loc 1 881 0
 1483 0714 4FF00003 		mov	r3, #0
 1484 0718 FB73     		strb	r3, [r7, #15]
 882:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 883:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 884:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the status of JSWSTART bit */
 885:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if ((ADCx->CR2 & CR2_JSWSTART_Set) != (uint32_t)RESET)
 1485              		.loc 1 885 0
 1486 071a 7B68     		ldr	r3, [r7, #4]
 1487 071c 9B68     		ldr	r3, [r3, #8]
 1488 071e 03F40013 		and	r3, r3, #2097152
 1489 0722 002B     		cmp	r3, #0
 1490 0724 03D0     		beq	.L70
 886:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 887:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* JSWSTART bit is set */
 888:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     bitstatus = SET;
 1491              		.loc 1 888 0
 1492 0726 4FF00103 		mov	r3, #1
 1493 072a FB73     		strb	r3, [r7, #15]
 1494 072c 02E0     		b	.L71
 1495              	.L70:
 889:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 890:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 891:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 892:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* JSWSTART bit is reset */
 893:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     bitstatus = RESET;
 1496              		.loc 1 893 0
 1497 072e 4FF00003 		mov	r3, #0
 1498 0732 FB73     		strb	r3, [r7, #15]
 1499              	.L71:
 894:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 895:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Return the JSWSTART bit status */
 896:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   return  bitstatus;
 1500              		.loc 1 896 0
 1501 0734 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 897:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 1502              		.loc 1 897 0
 1503 0736 1846     		mov	r0, r3
 1504 0738 07F11407 		add	r7, r7, #20
 1505 073c BD46     		mov	sp, r7
 1506 073e 80BC     		pop	{r7}
 1507 0740 7047     		bx	lr
 1508              		.cfi_endproc
 1509              	.LFE78:
 1511 0742 00BF     		.align	2
 1512              		.global	ADC_InjectedChannelConfig
 1513              		.thumb
 1514              		.thumb_func
 1516              	ADC_InjectedChannelConfig:
 1517              	.LFB79:
 898:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 899:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 900:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Configures for the selected ADC injected channel its corresponding
 901:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         rank in the sequencer and its sample time.
 902:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 903:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_Channel: the ADC channel to configure. 
 904:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
 905:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_0: ADC Channel0 selected
 906:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_1: ADC Channel1 selected
 907:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_2: ADC Channel2 selected
 908:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_3: ADC Channel3 selected
 909:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_4: ADC Channel4 selected
 910:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_5: ADC Channel5 selected
 911:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_6: ADC Channel6 selected
 912:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_7: ADC Channel7 selected
 913:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_8: ADC Channel8 selected
 914:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_9: ADC Channel9 selected
 915:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_10: ADC Channel10 selected
 916:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_11: ADC Channel11 selected
 917:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_12: ADC Channel12 selected
 918:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_13: ADC Channel13 selected
 919:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_14: ADC Channel14 selected
 920:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_15: ADC Channel15 selected
 921:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_16: ADC Channel16 selected
 922:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_17: ADC Channel17 selected
 923:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  Rank: The rank in the injected group sequencer. This parameter must be between 1 and 4.
 924:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_SampleTime: The sample time value to be set for the selected channel. 
 925:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
 926:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_1Cycles5: Sample time equal to 1.5 cycles
 927:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_7Cycles5: Sample time equal to 7.5 cycles
 928:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_13Cycles5: Sample time equal to 13.5 cycles
 929:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_28Cycles5: Sample time equal to 28.5 cycles	
 930:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_41Cycles5: Sample time equal to 41.5 cycles	
 931:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_55Cycles5: Sample time equal to 55.5 cycles	
 932:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_71Cycles5: Sample time equal to 71.5 cycles	
 933:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_239Cycles5: Sample time equal to 239.5 cycles	
 934:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 935:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 936:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_InjectedChannelConfig(ADC_TypeDef* ADCx, uint8_t ADC_Channel, uint8_t Rank, uint8_t ADC_Sa
 937:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 1518              		.loc 1 937 0
 1519              		.cfi_startproc
 1520              		@ args = 0, pretend = 0, frame = 24
 1521              		@ frame_needed = 1, uses_anonymous_args = 0
 1522              		@ link register save eliminated.
 1523 0744 80B4     		push	{r7}
 1524              	.LCFI71:
 1525              		.cfi_def_cfa_offset 4
 1526              		.cfi_offset 7, -4
 1527 0746 87B0     		sub	sp, sp, #28
 1528              	.LCFI72:
 1529              		.cfi_def_cfa_offset 32
 1530 0748 00AF     		add	r7, sp, #0
 1531              	.LCFI73:
 1532              		.cfi_def_cfa_register 7
 1533 074a 7860     		str	r0, [r7, #4]
 1534 074c F970     		strb	r1, [r7, #3]
 1535 074e BA70     		strb	r2, [r7, #2]
 1536 0750 7B70     		strb	r3, [r7, #1]
 938:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint32_t tmpreg1 = 0, tmpreg2 = 0, tmpreg3 = 0;
 1537              		.loc 1 938 0
 1538 0752 4FF00003 		mov	r3, #0
 1539 0756 7B61     		str	r3, [r7, #20]
 1540 0758 4FF00003 		mov	r3, #0
 1541 075c 3B61     		str	r3, [r7, #16]
 1542 075e 4FF00003 		mov	r3, #0
 1543 0762 FB60     		str	r3, [r7, #12]
 939:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 940:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 941:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_CHANNEL(ADC_Channel));
 942:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_INJECTED_RANK(Rank));
 943:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(ADC_SampleTime));
 944:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* if ADC_Channel_10 ... ADC_Channel_17 is selected */
 945:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (ADC_Channel > ADC_Channel_9)
 1544              		.loc 1 945 0
 1545 0764 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1546 0766 092B     		cmp	r3, #9
 1547 0768 27D9     		bls	.L74
 946:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 947:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Get the old register value */
 948:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 = ADCx->SMPR1;
 1548              		.loc 1 948 0
 1549 076a 7B68     		ldr	r3, [r7, #4]
 1550 076c DB68     		ldr	r3, [r3, #12]
 1551 076e 7B61     		str	r3, [r7, #20]
 949:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to clear */
 950:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = SMPR1_SMP_Set << (3*(ADC_Channel - 10));
 1552              		.loc 1 950 0
 1553 0770 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1554 0772 1346     		mov	r3, r2
 1555 0774 4FEA4303 		lsl	r3, r3, #1
 1556 0778 9B18     		adds	r3, r3, r2
 1557 077a A3F11E03 		sub	r3, r3, #30
 1558 077e 4FF00702 		mov	r2, #7
 1559 0782 02FA03F3 		lsl	r3, r2, r3
 1560 0786 3B61     		str	r3, [r7, #16]
 951:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Clear the old channel sample time */
 952:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 &= ~tmpreg2;
 1561              		.loc 1 952 0
 1562 0788 3B69     		ldr	r3, [r7, #16]
 1563 078a 6FEA0303 		mvn	r3, r3
 1564 078e 7A69     		ldr	r2, [r7, #20]
 1565 0790 1340     		ands	r3, r3, r2
 1566 0792 7B61     		str	r3, [r7, #20]
 953:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to set */
 954:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = (uint32_t)ADC_SampleTime << (3*(ADC_Channel - 10));
 1567              		.loc 1 954 0
 1568 0794 7978     		ldrb	r1, [r7, #1]	@ zero_extendqisi2
 1569 0796 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1570 0798 1346     		mov	r3, r2
 1571 079a 4FEA4303 		lsl	r3, r3, #1
 1572 079e 9B18     		adds	r3, r3, r2
 1573 07a0 A3F11E03 		sub	r3, r3, #30
 1574 07a4 01FA03F3 		lsl	r3, r1, r3
 1575 07a8 3B61     		str	r3, [r7, #16]
 955:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Set the new channel sample time */
 956:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 |= tmpreg2;
 1576              		.loc 1 956 0
 1577 07aa 7A69     		ldr	r2, [r7, #20]
 1578 07ac 3B69     		ldr	r3, [r7, #16]
 1579 07ae 1343     		orrs	r3, r3, r2
 1580 07b0 7B61     		str	r3, [r7, #20]
 957:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Store the new register value */
 958:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->SMPR1 = tmpreg1;
 1581              		.loc 1 958 0
 1582 07b2 7B68     		ldr	r3, [r7, #4]
 1583 07b4 7A69     		ldr	r2, [r7, #20]
 1584 07b6 DA60     		str	r2, [r3, #12]
 1585 07b8 22E0     		b	.L75
 1586              	.L74:
 959:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 960:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else /* ADC_Channel include in ADC_Channel_[0..9] */
 961:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 962:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Get the old register value */
 963:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 = ADCx->SMPR2;
 1587              		.loc 1 963 0
 1588 07ba 7B68     		ldr	r3, [r7, #4]
 1589 07bc 1B69     		ldr	r3, [r3, #16]
 1590 07be 7B61     		str	r3, [r7, #20]
 964:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to clear */
 965:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = SMPR2_SMP_Set << (3 * ADC_Channel);
 1591              		.loc 1 965 0
 1592 07c0 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1593 07c2 1346     		mov	r3, r2
 1594 07c4 4FEA4303 		lsl	r3, r3, #1
 1595 07c8 9B18     		adds	r3, r3, r2
 1596 07ca 4FF00702 		mov	r2, #7
 1597 07ce 02FA03F3 		lsl	r3, r2, r3
 1598 07d2 3B61     		str	r3, [r7, #16]
 966:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Clear the old channel sample time */
 967:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 &= ~tmpreg2;
 1599              		.loc 1 967 0
 1600 07d4 3B69     		ldr	r3, [r7, #16]
 1601 07d6 6FEA0303 		mvn	r3, r3
 1602 07da 7A69     		ldr	r2, [r7, #20]
 1603 07dc 1340     		ands	r3, r3, r2
 1604 07de 7B61     		str	r3, [r7, #20]
 968:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to set */
 969:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = (uint32_t)ADC_SampleTime << (3 * ADC_Channel);
 1605              		.loc 1 969 0
 1606 07e0 7978     		ldrb	r1, [r7, #1]	@ zero_extendqisi2
 1607 07e2 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1608 07e4 1346     		mov	r3, r2
 1609 07e6 4FEA4303 		lsl	r3, r3, #1
 1610 07ea 9B18     		adds	r3, r3, r2
 1611 07ec 01FA03F3 		lsl	r3, r1, r3
 1612 07f0 3B61     		str	r3, [r7, #16]
 970:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Set the new channel sample time */
 971:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 |= tmpreg2;
 1613              		.loc 1 971 0
 1614 07f2 7A69     		ldr	r2, [r7, #20]
 1615 07f4 3B69     		ldr	r3, [r7, #16]
 1616 07f6 1343     		orrs	r3, r3, r2
 1617 07f8 7B61     		str	r3, [r7, #20]
 972:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Store the new register value */
 973:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->SMPR2 = tmpreg1;
 1618              		.loc 1 973 0
 1619 07fa 7B68     		ldr	r3, [r7, #4]
 1620 07fc 7A69     		ldr	r2, [r7, #20]
 1621 07fe 1A61     		str	r2, [r3, #16]
 1622              	.L75:
 974:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 975:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Rank configuration */
 976:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get the old register value */
 977:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 = ADCx->JSQR;
 1623              		.loc 1 977 0
 1624 0800 7B68     		ldr	r3, [r7, #4]
 1625 0802 9B6B     		ldr	r3, [r3, #56]
 1626 0804 7B61     		str	r3, [r7, #20]
 978:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get JL value: Number = JL+1 */
 979:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg3 =  (tmpreg1 & JSQR_JL_Set)>> 20;
 1627              		.loc 1 979 0
 1628 0806 7B69     		ldr	r3, [r7, #20]
 1629 0808 03F44013 		and	r3, r3, #3145728
 1630 080c 4FEA1353 		lsr	r3, r3, #20
 1631 0810 FB60     		str	r3, [r7, #12]
 980:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Calculate the mask to clear: ((Rank-1)+(4-JL-1)) */
 981:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg2 = JSQR_JSQ_Set << (5 * (uint8_t)((Rank + 3) - (tmpreg3 + 1)));
 1632              		.loc 1 981 0
 1633 0812 FB68     		ldr	r3, [r7, #12]
 1634 0814 DBB2     		uxtb	r3, r3
 1635 0816 6FEA0303 		mvn	r3, r3
 1636 081a DAB2     		uxtb	r2, r3
 1637 081c BB78     		ldrb	r3, [r7, #2]
 1638 081e D318     		adds	r3, r2, r3
 1639 0820 DBB2     		uxtb	r3, r3
 1640 0822 03F10303 		add	r3, r3, #3
 1641 0826 DBB2     		uxtb	r3, r3
 1642 0828 1A46     		mov	r2, r3
 1643 082a 1346     		mov	r3, r2
 1644 082c 4FEA8303 		lsl	r3, r3, #2
 1645 0830 9B18     		adds	r3, r3, r2
 1646 0832 4FF01F02 		mov	r2, #31
 1647 0836 02FA03F3 		lsl	r3, r2, r3
 1648 083a 3B61     		str	r3, [r7, #16]
 982:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Clear the old JSQx bits for the selected rank */
 983:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 &= ~tmpreg2;
 1649              		.loc 1 983 0
 1650 083c 3B69     		ldr	r3, [r7, #16]
 1651 083e 6FEA0303 		mvn	r3, r3
 1652 0842 7A69     		ldr	r2, [r7, #20]
 1653 0844 1340     		ands	r3, r3, r2
 1654 0846 7B61     		str	r3, [r7, #20]
 984:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Calculate the mask to set: ((Rank-1)+(4-JL-1)) */
 985:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg2 = (uint32_t)ADC_Channel << (5 * (uint8_t)((Rank + 3) - (tmpreg3 + 1)));
 1655              		.loc 1 985 0
 1656 0848 F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 1657 084a FB68     		ldr	r3, [r7, #12]
 1658 084c DBB2     		uxtb	r3, r3
 1659 084e 6FEA0303 		mvn	r3, r3
 1660 0852 DAB2     		uxtb	r2, r3
 1661 0854 BB78     		ldrb	r3, [r7, #2]
 1662 0856 D318     		adds	r3, r2, r3
 1663 0858 DBB2     		uxtb	r3, r3
 1664 085a 03F10303 		add	r3, r3, #3
 1665 085e DBB2     		uxtb	r3, r3
 1666 0860 1A46     		mov	r2, r3
 1667 0862 1346     		mov	r3, r2
 1668 0864 4FEA8303 		lsl	r3, r3, #2
 1669 0868 9B18     		adds	r3, r3, r2
 1670 086a 01FA03F3 		lsl	r3, r1, r3
 1671 086e 3B61     		str	r3, [r7, #16]
 986:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set the JSQx bits for the selected rank */
 987:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 |= tmpreg2;
 1672              		.loc 1 987 0
 1673 0870 7A69     		ldr	r2, [r7, #20]
 1674 0872 3B69     		ldr	r3, [r7, #16]
 1675 0874 1343     		orrs	r3, r3, r2
 1676 0876 7B61     		str	r3, [r7, #20]
 988:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Store the new register value */
 989:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->JSQR = tmpreg1;
 1677              		.loc 1 989 0
 1678 0878 7B68     		ldr	r3, [r7, #4]
 1679 087a 7A69     		ldr	r2, [r7, #20]
 1680 087c 9A63     		str	r2, [r3, #56]
 990:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 1681              		.loc 1 990 0
 1682 087e 07F11C07 		add	r7, r7, #28
 1683 0882 BD46     		mov	sp, r7
 1684 0884 80BC     		pop	{r7}
 1685 0886 7047     		bx	lr
 1686              		.cfi_endproc
 1687              	.LFE79:
 1689              		.align	2
 1690              		.global	ADC_InjectedSequencerLengthConfig
 1691              		.thumb
 1692              		.thumb_func
 1694              	ADC_InjectedSequencerLengthConfig:
 1695              	.LFB80:
 991:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 992:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 993:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Configures the sequencer length for injected channels
 994:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 995:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  Length: The sequencer length. 
 996:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter must be a number between 1 to 4.
 997:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 998:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 999:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_InjectedSequencerLengthConfig(ADC_TypeDef* ADCx, uint8_t Length)
1000:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 1696              		.loc 1 1000 0
 1697              		.cfi_startproc
 1698              		@ args = 0, pretend = 0, frame = 16
 1699              		@ frame_needed = 1, uses_anonymous_args = 0
 1700              		@ link register save eliminated.
 1701 0888 80B4     		push	{r7}
 1702              	.LCFI74:
 1703              		.cfi_def_cfa_offset 4
 1704              		.cfi_offset 7, -4
 1705 088a 85B0     		sub	sp, sp, #20
 1706              	.LCFI75:
 1707              		.cfi_def_cfa_offset 24
 1708 088c 00AF     		add	r7, sp, #0
 1709              	.LCFI76:
 1710              		.cfi_def_cfa_register 7
 1711 088e 7860     		str	r0, [r7, #4]
 1712 0890 0B46     		mov	r3, r1
 1713 0892 FB70     		strb	r3, [r7, #3]
1001:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint32_t tmpreg1 = 0;
 1714              		.loc 1 1001 0
 1715 0894 4FF00003 		mov	r3, #0
 1716 0898 FB60     		str	r3, [r7, #12]
1002:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint32_t tmpreg2 = 0;
 1717              		.loc 1 1002 0
 1718 089a 4FF00003 		mov	r3, #0
 1719 089e BB60     		str	r3, [r7, #8]
1003:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
1004:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1005:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_INJECTED_LENGTH(Length));
1006:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   
1007:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get the old register value */
1008:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 = ADCx->JSQR;
 1720              		.loc 1 1008 0
 1721 08a0 7B68     		ldr	r3, [r7, #4]
 1722 08a2 9B6B     		ldr	r3, [r3, #56]
 1723 08a4 FB60     		str	r3, [r7, #12]
1009:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Clear the old injected sequnence lenght JL bits */
1010:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 &= JSQR_JL_Reset;
 1724              		.loc 1 1010 0
 1725 08a6 FB68     		ldr	r3, [r7, #12]
 1726 08a8 23F44013 		bic	r3, r3, #3145728
 1727 08ac FB60     		str	r3, [r7, #12]
1011:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set the injected sequnence lenght JL bits */
1012:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg2 = Length - 1; 
 1728              		.loc 1 1012 0
 1729 08ae FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1730 08b0 03F1FF33 		add	r3, r3, #-1
 1731 08b4 BB60     		str	r3, [r7, #8]
1013:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 |= tmpreg2 << 20;
 1732              		.loc 1 1013 0
 1733 08b6 BB68     		ldr	r3, [r7, #8]
 1734 08b8 4FEA0353 		lsl	r3, r3, #20
 1735 08bc FA68     		ldr	r2, [r7, #12]
 1736 08be 1343     		orrs	r3, r3, r2
 1737 08c0 FB60     		str	r3, [r7, #12]
1014:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Store the new register value */
1015:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->JSQR = tmpreg1;
 1738              		.loc 1 1015 0
 1739 08c2 7B68     		ldr	r3, [r7, #4]
 1740 08c4 FA68     		ldr	r2, [r7, #12]
 1741 08c6 9A63     		str	r2, [r3, #56]
1016:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 1742              		.loc 1 1016 0
 1743 08c8 07F11407 		add	r7, r7, #20
 1744 08cc BD46     		mov	sp, r7
 1745 08ce 80BC     		pop	{r7}
 1746 08d0 7047     		bx	lr
 1747              		.cfi_endproc
 1748              	.LFE80:
 1750 08d2 00BF     		.align	2
 1751              		.global	ADC_SetInjectedOffset
 1752              		.thumb
 1753              		.thumb_func
 1755              	ADC_SetInjectedOffset:
 1756              	.LFB81:
1017:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
1018:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
1019:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Set the injected channels conversion value offset
1020:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1021:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_InjectedChannel: the ADC injected channel to set its offset. 
1022:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
1023:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_InjectedChannel_1: Injected Channel1 selected
1024:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_InjectedChannel_2: Injected Channel2 selected
1025:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_InjectedChannel_3: Injected Channel3 selected
1026:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_InjectedChannel_4: Injected Channel4 selected
1027:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  Offset: the offset value for the selected ADC injected channel
1028:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter must be a 12bit value.
1029:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
1030:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
1031:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_SetInjectedOffset(ADC_TypeDef* ADCx, uint8_t ADC_InjectedChannel, uint16_t Offset)
1032:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 1757              		.loc 1 1032 0
 1758              		.cfi_startproc
 1759              		@ args = 0, pretend = 0, frame = 16
 1760              		@ frame_needed = 1, uses_anonymous_args = 0
 1761              		@ link register save eliminated.
 1762 08d4 80B4     		push	{r7}
 1763              	.LCFI77:
 1764              		.cfi_def_cfa_offset 4
 1765              		.cfi_offset 7, -4
 1766 08d6 85B0     		sub	sp, sp, #20
 1767              	.LCFI78:
 1768              		.cfi_def_cfa_offset 24
 1769 08d8 00AF     		add	r7, sp, #0
 1770              	.LCFI79:
 1771              		.cfi_def_cfa_register 7
 1772 08da 7860     		str	r0, [r7, #4]
 1773 08dc 1346     		mov	r3, r2
 1774 08de 0A46     		mov	r2, r1
 1775 08e0 FA70     		strb	r2, [r7, #3]
 1776 08e2 3B80     		strh	r3, [r7, #0]	@ movhi
1033:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   __IO uint32_t tmp = 0;
 1777              		.loc 1 1033 0
 1778 08e4 4FF00003 		mov	r3, #0
 1779 08e8 FB60     		str	r3, [r7, #12]
1034:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   
1035:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
1036:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1037:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_INJECTED_CHANNEL(ADC_InjectedChannel));
1038:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_OFFSET(Offset));  
1039:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   
1040:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmp = (uint32_t)ADCx;
 1780              		.loc 1 1040 0
 1781 08ea 7B68     		ldr	r3, [r7, #4]
 1782 08ec FB60     		str	r3, [r7, #12]
1041:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmp += ADC_InjectedChannel;
 1783              		.loc 1 1041 0
 1784 08ee FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1785 08f0 FB68     		ldr	r3, [r7, #12]
 1786 08f2 D318     		adds	r3, r2, r3
 1787 08f4 FB60     		str	r3, [r7, #12]
1042:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   
1043:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set the selected injected channel data offset */
1044:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *(__IO uint32_t *) tmp = (uint32_t)Offset;
 1788              		.loc 1 1044 0
 1789 08f6 FB68     		ldr	r3, [r7, #12]
 1790 08f8 3A88     		ldrh	r2, [r7, #0]
 1791 08fa 1A60     		str	r2, [r3, #0]
1045:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 1792              		.loc 1 1045 0
 1793 08fc 07F11407 		add	r7, r7, #20
 1794 0900 BD46     		mov	sp, r7
 1795 0902 80BC     		pop	{r7}
 1796 0904 7047     		bx	lr
 1797              		.cfi_endproc
 1798              	.LFE81:
 1800 0906 00BF     		.align	2
 1801              		.global	ADC_GetInjectedConversionValue
 1802              		.thumb
 1803              		.thumb_func
 1805              	ADC_GetInjectedConversionValue:
 1806              	.LFB82:
1046:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
1047:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
1048:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Returns the ADC injected channel conversion result
1049:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1050:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_InjectedChannel: the converted ADC injected channel.
1051:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
1052:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_InjectedChannel_1: Injected Channel1 selected
1053:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_InjectedChannel_2: Injected Channel2 selected
1054:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_InjectedChannel_3: Injected Channel3 selected
1055:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_InjectedChannel_4: Injected Channel4 selected
1056:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval The Data conversion value.
1057:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
1058:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** uint16_t ADC_GetInjectedConversionValue(ADC_TypeDef* ADCx, uint8_t ADC_InjectedChannel)
1059:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 1807              		.loc 1 1059 0
 1808              		.cfi_startproc
 1809              		@ args = 0, pretend = 0, frame = 16
 1810              		@ frame_needed = 1, uses_anonymous_args = 0
 1811              		@ link register save eliminated.
 1812 0908 80B4     		push	{r7}
 1813              	.LCFI80:
 1814              		.cfi_def_cfa_offset 4
 1815              		.cfi_offset 7, -4
 1816 090a 85B0     		sub	sp, sp, #20
 1817              	.LCFI81:
 1818              		.cfi_def_cfa_offset 24
 1819 090c 00AF     		add	r7, sp, #0
 1820              	.LCFI82:
 1821              		.cfi_def_cfa_register 7
 1822 090e 7860     		str	r0, [r7, #4]
 1823 0910 0B46     		mov	r3, r1
 1824 0912 FB70     		strb	r3, [r7, #3]
1060:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   __IO uint32_t tmp = 0;
 1825              		.loc 1 1060 0
 1826 0914 4FF00003 		mov	r3, #0
 1827 0918 FB60     		str	r3, [r7, #12]
1061:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   
1062:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
1063:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1064:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_INJECTED_CHANNEL(ADC_InjectedChannel));
1065:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
1066:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmp = (uint32_t)ADCx;
 1828              		.loc 1 1066 0
 1829 091a 7B68     		ldr	r3, [r7, #4]
 1830 091c FB60     		str	r3, [r7, #12]
1067:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmp += ADC_InjectedChannel + JDR_Offset;
 1831              		.loc 1 1067 0
 1832 091e FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1833 0920 FB68     		ldr	r3, [r7, #12]
 1834 0922 D318     		adds	r3, r2, r3
 1835 0924 03F12803 		add	r3, r3, #40
 1836 0928 FB60     		str	r3, [r7, #12]
1068:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   
1069:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Returns the selected injected channel conversion data value */
1070:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   return (uint16_t) (*(__IO uint32_t*)  tmp);   
 1837              		.loc 1 1070 0
 1838 092a FB68     		ldr	r3, [r7, #12]
 1839 092c 1B68     		ldr	r3, [r3, #0]
 1840 092e 9BB2     		uxth	r3, r3
1071:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 1841              		.loc 1 1071 0
 1842 0930 1846     		mov	r0, r3
 1843 0932 07F11407 		add	r7, r7, #20
 1844 0936 BD46     		mov	sp, r7
 1845 0938 80BC     		pop	{r7}
 1846 093a 7047     		bx	lr
 1847              		.cfi_endproc
 1848              	.LFE82:
 1850              		.align	2
 1851              		.global	ADC_AnalogWatchdogCmd
 1852              		.thumb
 1853              		.thumb_func
 1855              	ADC_AnalogWatchdogCmd:
 1856              	.LFB83:
1072:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
1073:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
1074:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the analog watchdog on single/all regular
1075:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         or injected channels
1076:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1077:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_AnalogWatchdog: the ADC analog watchdog configuration.
1078:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
1079:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_AnalogWatchdog_SingleRegEnable: Analog watchdog on a single regular channel
1080:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_AnalogWatchdog_SingleInjecEnable: Analog watchdog on a single injected channel
1081:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_AnalogWatchdog_SingleRegOrInjecEnable: Analog watchdog on a single regular or inje
1082:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_AnalogWatchdog_AllRegEnable: Analog watchdog on  all regular channel
1083:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_AnalogWatchdog_AllInjecEnable: Analog watchdog on  all injected channel
1084:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_AnalogWatchdog_AllRegAllInjecEnable: Analog watchdog on all regular and injected c
1085:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_AnalogWatchdog_None: No channel guarded by the analog watchdog
1086:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None	  
1087:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
1088:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_AnalogWatchdogCmd(ADC_TypeDef* ADCx, uint32_t ADC_AnalogWatchdog)
1089:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 1857              		.loc 1 1089 0
 1858              		.cfi_startproc
 1859              		@ args = 0, pretend = 0, frame = 16
 1860              		@ frame_needed = 1, uses_anonymous_args = 0
 1861              		@ link register save eliminated.
 1862 093c 80B4     		push	{r7}
 1863              	.LCFI83:
 1864              		.cfi_def_cfa_offset 4
 1865              		.cfi_offset 7, -4
 1866 093e 85B0     		sub	sp, sp, #20
 1867              	.LCFI84:
 1868              		.cfi_def_cfa_offset 24
 1869 0940 00AF     		add	r7, sp, #0
 1870              	.LCFI85:
 1871              		.cfi_def_cfa_register 7
 1872 0942 7860     		str	r0, [r7, #4]
 1873 0944 3960     		str	r1, [r7, #0]
1090:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint32_t tmpreg = 0;
 1874              		.loc 1 1090 0
 1875 0946 4FF00003 		mov	r3, #0
 1876 094a FB60     		str	r3, [r7, #12]
1091:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
1092:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1093:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG(ADC_AnalogWatchdog));
1094:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get the old register value */
1095:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg = ADCx->CR1;
 1877              		.loc 1 1095 0
 1878 094c 7B68     		ldr	r3, [r7, #4]
 1879 094e 5B68     		ldr	r3, [r3, #4]
 1880 0950 FB60     		str	r3, [r7, #12]
1096:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Clear AWDEN, AWDENJ and AWDSGL bits */
1097:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg &= CR1_AWDMode_Reset;
 1881              		.loc 1 1097 0
 1882 0952 FB68     		ldr	r3, [r7, #12]
 1883 0954 23F44003 		bic	r3, r3, #12582912
 1884 0958 23F40073 		bic	r3, r3, #512
 1885 095c FB60     		str	r3, [r7, #12]
1098:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set the analog watchdog enable mode */
1099:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg |= ADC_AnalogWatchdog;
 1886              		.loc 1 1099 0
 1887 095e FA68     		ldr	r2, [r7, #12]
 1888 0960 3B68     		ldr	r3, [r7, #0]
 1889 0962 1343     		orrs	r3, r3, r2
 1890 0964 FB60     		str	r3, [r7, #12]
1100:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Store the new register value */
1101:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->CR1 = tmpreg;
 1891              		.loc 1 1101 0
 1892 0966 7B68     		ldr	r3, [r7, #4]
 1893 0968 FA68     		ldr	r2, [r7, #12]
 1894 096a 5A60     		str	r2, [r3, #4]
1102:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 1895              		.loc 1 1102 0
 1896 096c 07F11407 		add	r7, r7, #20
 1897 0970 BD46     		mov	sp, r7
 1898 0972 80BC     		pop	{r7}
 1899 0974 7047     		bx	lr
 1900              		.cfi_endproc
 1901              	.LFE83:
 1903 0976 00BF     		.align	2
 1904              		.global	ADC_AnalogWatchdogThresholdsConfig
 1905              		.thumb
 1906              		.thumb_func
 1908              	ADC_AnalogWatchdogThresholdsConfig:
 1909              	.LFB84:
1103:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
1104:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
1105:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Configures the high and low thresholds of the analog watchdog.
1106:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1107:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  HighThreshold: the ADC analog watchdog High threshold value.
1108:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter must be a 12bit value.
1109:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  LowThreshold: the ADC analog watchdog Low threshold value.
1110:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter must be a 12bit value.
1111:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
1112:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
1113:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_AnalogWatchdogThresholdsConfig(ADC_TypeDef* ADCx, uint16_t HighThreshold,
1114:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****                                         uint16_t LowThreshold)
1115:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 1910              		.loc 1 1115 0
 1911              		.cfi_startproc
 1912              		@ args = 0, pretend = 0, frame = 8
 1913              		@ frame_needed = 1, uses_anonymous_args = 0
 1914              		@ link register save eliminated.
 1915 0978 80B4     		push	{r7}
 1916              	.LCFI86:
 1917              		.cfi_def_cfa_offset 4
 1918              		.cfi_offset 7, -4
 1919 097a 83B0     		sub	sp, sp, #12
 1920              	.LCFI87:
 1921              		.cfi_def_cfa_offset 16
 1922 097c 00AF     		add	r7, sp, #0
 1923              	.LCFI88:
 1924              		.cfi_def_cfa_register 7
 1925 097e 7860     		str	r0, [r7, #4]
 1926 0980 1346     		mov	r3, r2
 1927 0982 0A46     		mov	r2, r1	@ movhi
 1928 0984 7A80     		strh	r2, [r7, #2]	@ movhi
 1929 0986 3B80     		strh	r3, [r7, #0]	@ movhi
1116:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
1117:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1118:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_THRESHOLD(HighThreshold));
1119:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_THRESHOLD(LowThreshold));
1120:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set the ADCx high threshold */
1121:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->HTR = HighThreshold;
 1930              		.loc 1 1121 0
 1931 0988 7A88     		ldrh	r2, [r7, #2]
 1932 098a 7B68     		ldr	r3, [r7, #4]
 1933 098c 5A62     		str	r2, [r3, #36]
1122:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set the ADCx low threshold */
1123:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->LTR = LowThreshold;
 1934              		.loc 1 1123 0
 1935 098e 3A88     		ldrh	r2, [r7, #0]
 1936 0990 7B68     		ldr	r3, [r7, #4]
 1937 0992 9A62     		str	r2, [r3, #40]
1124:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 1938              		.loc 1 1124 0
 1939 0994 07F10C07 		add	r7, r7, #12
 1940 0998 BD46     		mov	sp, r7
 1941 099a 80BC     		pop	{r7}
 1942 099c 7047     		bx	lr
 1943              		.cfi_endproc
 1944              	.LFE84:
 1946 099e 00BF     		.align	2
 1947              		.global	ADC_AnalogWatchdogSingleChannelConfig
 1948              		.thumb
 1949              		.thumb_func
 1951              	ADC_AnalogWatchdogSingleChannelConfig:
 1952              	.LFB85:
1125:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
1126:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
1127:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Configures the analog watchdog guarded single channel
1128:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1129:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_Channel: the ADC channel to configure for the analog watchdog. 
1130:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
1131:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_0: ADC Channel0 selected
1132:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_1: ADC Channel1 selected
1133:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_2: ADC Channel2 selected
1134:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_3: ADC Channel3 selected
1135:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_4: ADC Channel4 selected
1136:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_5: ADC Channel5 selected
1137:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_6: ADC Channel6 selected
1138:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_7: ADC Channel7 selected
1139:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_8: ADC Channel8 selected
1140:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_9: ADC Channel9 selected
1141:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_10: ADC Channel10 selected
1142:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_11: ADC Channel11 selected
1143:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_12: ADC Channel12 selected
1144:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_13: ADC Channel13 selected
1145:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_14: ADC Channel14 selected
1146:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_15: ADC Channel15 selected
1147:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_16: ADC Channel16 selected
1148:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_17: ADC Channel17 selected
1149:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
1150:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
1151:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_AnalogWatchdogSingleChannelConfig(ADC_TypeDef* ADCx, uint8_t ADC_Channel)
1152:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 1953              		.loc 1 1152 0
 1954              		.cfi_startproc
 1955              		@ args = 0, pretend = 0, frame = 16
 1956              		@ frame_needed = 1, uses_anonymous_args = 0
 1957              		@ link register save eliminated.
 1958 09a0 80B4     		push	{r7}
 1959              	.LCFI89:
 1960              		.cfi_def_cfa_offset 4
 1961              		.cfi_offset 7, -4
 1962 09a2 85B0     		sub	sp, sp, #20
 1963              	.LCFI90:
 1964              		.cfi_def_cfa_offset 24
 1965 09a4 00AF     		add	r7, sp, #0
 1966              	.LCFI91:
 1967              		.cfi_def_cfa_register 7
 1968 09a6 7860     		str	r0, [r7, #4]
 1969 09a8 0B46     		mov	r3, r1
 1970 09aa FB70     		strb	r3, [r7, #3]
1153:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint32_t tmpreg = 0;
 1971              		.loc 1 1153 0
 1972 09ac 4FF00003 		mov	r3, #0
 1973 09b0 FB60     		str	r3, [r7, #12]
1154:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
1155:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1156:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_CHANNEL(ADC_Channel));
1157:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get the old register value */
1158:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg = ADCx->CR1;
 1974              		.loc 1 1158 0
 1975 09b2 7B68     		ldr	r3, [r7, #4]
 1976 09b4 5B68     		ldr	r3, [r3, #4]
 1977 09b6 FB60     		str	r3, [r7, #12]
1159:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Clear the Analog watchdog channel select bits */
1160:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg &= CR1_AWDCH_Reset;
 1978              		.loc 1 1160 0
 1979 09b8 FB68     		ldr	r3, [r7, #12]
 1980 09ba 23F01F03 		bic	r3, r3, #31
 1981 09be FB60     		str	r3, [r7, #12]
1161:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set the Analog watchdog channel */
1162:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg |= ADC_Channel;
 1982              		.loc 1 1162 0
 1983 09c0 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1984 09c2 FA68     		ldr	r2, [r7, #12]
 1985 09c4 1343     		orrs	r3, r3, r2
 1986 09c6 FB60     		str	r3, [r7, #12]
1163:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Store the new register value */
1164:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->CR1 = tmpreg;
 1987              		.loc 1 1164 0
 1988 09c8 7B68     		ldr	r3, [r7, #4]
 1989 09ca FA68     		ldr	r2, [r7, #12]
 1990 09cc 5A60     		str	r2, [r3, #4]
1165:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 1991              		.loc 1 1165 0
 1992 09ce 07F11407 		add	r7, r7, #20
 1993 09d2 BD46     		mov	sp, r7
 1994 09d4 80BC     		pop	{r7}
 1995 09d6 7047     		bx	lr
 1996              		.cfi_endproc
 1997              	.LFE85:
 1999              		.align	2
 2000              		.global	ADC_TempSensorVrefintCmd
 2001              		.thumb
 2002              		.thumb_func
 2004              	ADC_TempSensorVrefintCmd:
 2005              	.LFB86:
1166:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
1167:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
1168:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the temperature sensor and Vrefint channel.
1169:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the temperature sensor.
1170:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
1171:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
1172:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
1173:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_TempSensorVrefintCmd(FunctionalState NewState)
1174:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 2006              		.loc 1 1174 0
 2007              		.cfi_startproc
 2008              		@ args = 0, pretend = 0, frame = 8
 2009              		@ frame_needed = 1, uses_anonymous_args = 0
 2010              		@ link register save eliminated.
 2011 09d8 80B4     		push	{r7}
 2012              	.LCFI92:
 2013              		.cfi_def_cfa_offset 4
 2014              		.cfi_offset 7, -4
 2015 09da 83B0     		sub	sp, sp, #12
 2016              	.LCFI93:
 2017              		.cfi_def_cfa_offset 16
 2018 09dc 00AF     		add	r7, sp, #0
 2019              	.LCFI94:
 2020              		.cfi_def_cfa_register 7
 2021 09de 0346     		mov	r3, r0
 2022 09e0 FB71     		strb	r3, [r7, #7]
1175:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
1176:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1177:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 2023              		.loc 1 1177 0
 2024 09e2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2025 09e4 002B     		cmp	r3, #0
 2026 09e6 06D0     		beq	.L84
1178:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
1179:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Enable the temperature sensor and Vrefint channel*/
1180:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADC1->CR2 |= CR2_TSVREFE_Set;
 2027              		.loc 1 1180 0
 2028 09e8 084B     		ldr	r3, .L86
 2029 09ea 084A     		ldr	r2, .L86
 2030 09ec 9268     		ldr	r2, [r2, #8]
 2031 09ee 42F40002 		orr	r2, r2, #8388608
 2032 09f2 9A60     		str	r2, [r3, #8]
 2033 09f4 05E0     		b	.L83
 2034              	.L84:
1181:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
1182:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
1183:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
1184:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Disable the temperature sensor and Vrefint channel*/
1185:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADC1->CR2 &= CR2_TSVREFE_Reset;
 2035              		.loc 1 1185 0
 2036 09f6 054B     		ldr	r3, .L86
 2037 09f8 044A     		ldr	r2, .L86
 2038 09fa 9268     		ldr	r2, [r2, #8]
 2039 09fc 22F40002 		bic	r2, r2, #8388608
 2040 0a00 9A60     		str	r2, [r3, #8]
 2041              	.L83:
1186:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
1187:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 2042              		.loc 1 1187 0
 2043 0a02 07F10C07 		add	r7, r7, #12
 2044 0a06 BD46     		mov	sp, r7
 2045 0a08 80BC     		pop	{r7}
 2046 0a0a 7047     		bx	lr
 2047              	.L87:
 2048              		.align	2
 2049              	.L86:
 2050 0a0c 00240140 		.word	1073816576
 2051              		.cfi_endproc
 2052              	.LFE86:
 2054              		.align	2
 2055              		.global	ADC_GetFlagStatus
 2056              		.thumb
 2057              		.thumb_func
 2059              	ADC_GetFlagStatus:
 2060              	.LFB87:
1188:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
1189:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
1190:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Checks whether the specified ADC flag is set or not.
1191:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1192:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_FLAG: specifies the flag to check. 
1193:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
1194:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_AWD: Analog watchdog flag
1195:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_EOC: End of conversion flag
1196:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_JEOC: End of injected group conversion flag
1197:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_JSTRT: Start of injected group conversion flag
1198:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_STRT: Start of regular group conversion flag
1199:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval The new state of ADC_FLAG (SET or RESET).
1200:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
1201:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** FlagStatus ADC_GetFlagStatus(ADC_TypeDef* ADCx, uint8_t ADC_FLAG)
1202:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 2061              		.loc 1 1202 0
 2062              		.cfi_startproc
 2063              		@ args = 0, pretend = 0, frame = 16
 2064              		@ frame_needed = 1, uses_anonymous_args = 0
 2065              		@ link register save eliminated.
 2066 0a10 80B4     		push	{r7}
 2067              	.LCFI95:
 2068              		.cfi_def_cfa_offset 4
 2069              		.cfi_offset 7, -4
 2070 0a12 85B0     		sub	sp, sp, #20
 2071              	.LCFI96:
 2072              		.cfi_def_cfa_offset 24
 2073 0a14 00AF     		add	r7, sp, #0
 2074              	.LCFI97:
 2075              		.cfi_def_cfa_register 7
 2076 0a16 7860     		str	r0, [r7, #4]
 2077 0a18 0B46     		mov	r3, r1
 2078 0a1a FB70     		strb	r3, [r7, #3]
1203:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   FlagStatus bitstatus = RESET;
 2079              		.loc 1 1203 0
 2080 0a1c 4FF00003 		mov	r3, #0
 2081 0a20 FB73     		strb	r3, [r7, #15]
1204:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
1205:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1206:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_GET_FLAG(ADC_FLAG));
1207:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the status of the specified ADC flag */
1208:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if ((ADCx->SR & ADC_FLAG) != (uint8_t)RESET)
 2082              		.loc 1 1208 0
 2083 0a22 7B68     		ldr	r3, [r7, #4]
 2084 0a24 1A68     		ldr	r2, [r3, #0]
 2085 0a26 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2086 0a28 1340     		ands	r3, r3, r2
 2087 0a2a 002B     		cmp	r3, #0
 2088 0a2c 03D0     		beq	.L89
1209:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
1210:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* ADC_FLAG is set */
1211:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     bitstatus = SET;
 2089              		.loc 1 1211 0
 2090 0a2e 4FF00103 		mov	r3, #1
 2091 0a32 FB73     		strb	r3, [r7, #15]
 2092 0a34 02E0     		b	.L90
 2093              	.L89:
1212:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
1213:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
1214:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
1215:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* ADC_FLAG is reset */
1216:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     bitstatus = RESET;
 2094              		.loc 1 1216 0
 2095 0a36 4FF00003 		mov	r3, #0
 2096 0a3a FB73     		strb	r3, [r7, #15]
 2097              	.L90:
1217:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
1218:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Return the ADC_FLAG status */
1219:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   return  bitstatus;
 2098              		.loc 1 1219 0
 2099 0a3c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1220:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 2100              		.loc 1 1220 0
 2101 0a3e 1846     		mov	r0, r3
 2102 0a40 07F11407 		add	r7, r7, #20
 2103 0a44 BD46     		mov	sp, r7
 2104 0a46 80BC     		pop	{r7}
 2105 0a48 7047     		bx	lr
 2106              		.cfi_endproc
 2107              	.LFE87:
 2109 0a4a 00BF     		.align	2
 2110              		.global	ADC_ClearFlag
 2111              		.thumb
 2112              		.thumb_func
 2114              	ADC_ClearFlag:
 2115              	.LFB88:
1221:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
1222:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
1223:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Clears the ADCx's pending flags.
1224:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1225:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_FLAG: specifies the flag to clear. 
1226:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be any combination of the following values:
1227:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_AWD: Analog watchdog flag
1228:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_EOC: End of conversion flag
1229:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_JEOC: End of injected group conversion flag
1230:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_JSTRT: Start of injected group conversion flag
1231:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_STRT: Start of regular group conversion flag
1232:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
1233:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
1234:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_ClearFlag(ADC_TypeDef* ADCx, uint8_t ADC_FLAG)
1235:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 2116              		.loc 1 1235 0
 2117              		.cfi_startproc
 2118              		@ args = 0, pretend = 0, frame = 8
 2119              		@ frame_needed = 1, uses_anonymous_args = 0
 2120              		@ link register save eliminated.
 2121 0a4c 80B4     		push	{r7}
 2122              	.LCFI98:
 2123              		.cfi_def_cfa_offset 4
 2124              		.cfi_offset 7, -4
 2125 0a4e 83B0     		sub	sp, sp, #12
 2126              	.LCFI99:
 2127              		.cfi_def_cfa_offset 16
 2128 0a50 00AF     		add	r7, sp, #0
 2129              	.LCFI100:
 2130              		.cfi_def_cfa_register 7
 2131 0a52 7860     		str	r0, [r7, #4]
 2132 0a54 0B46     		mov	r3, r1
 2133 0a56 FB70     		strb	r3, [r7, #3]
1236:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
1237:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1238:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_CLEAR_FLAG(ADC_FLAG));
1239:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Clear the selected ADC flags */
1240:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->SR = ~(uint32_t)ADC_FLAG;
 2134              		.loc 1 1240 0
 2135 0a58 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2136 0a5a 6FEA0302 		mvn	r2, r3
 2137 0a5e 7B68     		ldr	r3, [r7, #4]
 2138 0a60 1A60     		str	r2, [r3, #0]
1241:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 2139              		.loc 1 1241 0
 2140 0a62 07F10C07 		add	r7, r7, #12
 2141 0a66 BD46     		mov	sp, r7
 2142 0a68 80BC     		pop	{r7}
 2143 0a6a 7047     		bx	lr
 2144              		.cfi_endproc
 2145              	.LFE88:
 2147              		.align	2
 2148              		.global	ADC_GetITStatus
 2149              		.thumb
 2150              		.thumb_func
 2152              	ADC_GetITStatus:
 2153              	.LFB89:
1242:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
1243:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
1244:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Checks whether the specified ADC interrupt has occurred or not.
1245:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1246:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_IT: specifies the ADC interrupt source to check. 
1247:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
1248:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_IT_EOC: End of conversion interrupt mask
1249:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_IT_AWD: Analog watchdog interrupt mask
1250:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_IT_JEOC: End of injected conversion interrupt mask
1251:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval The new state of ADC_IT (SET or RESET).
1252:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
1253:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** ITStatus ADC_GetITStatus(ADC_TypeDef* ADCx, uint16_t ADC_IT)
1254:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 2154              		.loc 1 1254 0
 2155              		.cfi_startproc
 2156              		@ args = 0, pretend = 0, frame = 24
 2157              		@ frame_needed = 1, uses_anonymous_args = 0
 2158              		@ link register save eliminated.
 2159 0a6c 80B4     		push	{r7}
 2160              	.LCFI101:
 2161              		.cfi_def_cfa_offset 4
 2162              		.cfi_offset 7, -4
 2163 0a6e 87B0     		sub	sp, sp, #28
 2164              	.LCFI102:
 2165              		.cfi_def_cfa_offset 32
 2166 0a70 00AF     		add	r7, sp, #0
 2167              	.LCFI103:
 2168              		.cfi_def_cfa_register 7
 2169 0a72 7860     		str	r0, [r7, #4]
 2170 0a74 0B46     		mov	r3, r1
 2171 0a76 7B80     		strh	r3, [r7, #2]	@ movhi
1255:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ITStatus bitstatus = RESET;
 2172              		.loc 1 1255 0
 2173 0a78 4FF00003 		mov	r3, #0
 2174 0a7c FB75     		strb	r3, [r7, #23]
1256:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint32_t itmask = 0, enablestatus = 0;
 2175              		.loc 1 1256 0
 2176 0a7e 4FF00003 		mov	r3, #0
 2177 0a82 3B61     		str	r3, [r7, #16]
 2178 0a84 4FF00003 		mov	r3, #0
 2179 0a88 FB60     		str	r3, [r7, #12]
1257:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
1258:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1259:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_GET_IT(ADC_IT));
1260:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get the ADC IT index */
1261:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   itmask = ADC_IT >> 8;
 2180              		.loc 1 1261 0
 2181 0a8a 7B88     		ldrh	r3, [r7, #2]
 2182 0a8c 4FEA1323 		lsr	r3, r3, #8
 2183 0a90 9BB2     		uxth	r3, r3
 2184 0a92 3B61     		str	r3, [r7, #16]
1262:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get the ADC_IT enable bit status */
1263:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   enablestatus = (ADCx->CR1 & (uint8_t)ADC_IT) ;
 2185              		.loc 1 1263 0
 2186 0a94 7B68     		ldr	r3, [r7, #4]
 2187 0a96 5A68     		ldr	r2, [r3, #4]
 2188 0a98 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2189 0a9a DBB2     		uxtb	r3, r3
 2190 0a9c 1340     		ands	r3, r3, r2
 2191 0a9e FB60     		str	r3, [r7, #12]
1264:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the status of the specified ADC interrupt */
1265:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (((ADCx->SR & itmask) != (uint32_t)RESET) && enablestatus)
 2192              		.loc 1 1265 0
 2193 0aa0 7B68     		ldr	r3, [r7, #4]
 2194 0aa2 1A68     		ldr	r2, [r3, #0]
 2195 0aa4 3B69     		ldr	r3, [r7, #16]
 2196 0aa6 1340     		ands	r3, r3, r2
 2197 0aa8 002B     		cmp	r3, #0
 2198 0aaa 06D0     		beq	.L94
 2199              		.loc 1 1265 0 is_stmt 0 discriminator 1
 2200 0aac FB68     		ldr	r3, [r7, #12]
 2201 0aae 002B     		cmp	r3, #0
 2202 0ab0 03D0     		beq	.L94
1266:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
1267:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* ADC_IT is set */
1268:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     bitstatus = SET;
 2203              		.loc 1 1268 0 is_stmt 1
 2204 0ab2 4FF00103 		mov	r3, #1
 2205 0ab6 FB75     		strb	r3, [r7, #23]
 2206 0ab8 02E0     		b	.L95
 2207              	.L94:
1269:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
1270:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
1271:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
1272:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* ADC_IT is reset */
1273:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     bitstatus = RESET;
 2208              		.loc 1 1273 0
 2209 0aba 4FF00003 		mov	r3, #0
 2210 0abe FB75     		strb	r3, [r7, #23]
 2211              	.L95:
1274:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
1275:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Return the ADC_IT status */
1276:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   return  bitstatus;
 2212              		.loc 1 1276 0
 2213 0ac0 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
1277:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 2214              		.loc 1 1277 0
 2215 0ac2 1846     		mov	r0, r3
 2216 0ac4 07F11C07 		add	r7, r7, #28
 2217 0ac8 BD46     		mov	sp, r7
 2218 0aca 80BC     		pop	{r7}
 2219 0acc 7047     		bx	lr
 2220              		.cfi_endproc
 2221              	.LFE89:
 2223 0ace 00BF     		.align	2
 2224              		.global	ADC_ClearITPendingBit
 2225              		.thumb
 2226              		.thumb_func
 2228              	ADC_ClearITPendingBit:
 2229              	.LFB90:
1278:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
1279:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
1280:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Clears the ADCx's interrupt pending bits.
1281:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1282:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_IT: specifies the ADC interrupt pending bit to clear.
1283:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be any combination of the following values:
1284:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_IT_EOC: End of conversion interrupt mask
1285:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_IT_AWD: Analog watchdog interrupt mask
1286:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_IT_JEOC: End of injected conversion interrupt mask
1287:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
1288:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
1289:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_ClearITPendingBit(ADC_TypeDef* ADCx, uint16_t ADC_IT)
1290:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 2230              		.loc 1 1290 0
 2231              		.cfi_startproc
 2232              		@ args = 0, pretend = 0, frame = 16
 2233              		@ frame_needed = 1, uses_anonymous_args = 0
 2234              		@ link register save eliminated.
 2235 0ad0 80B4     		push	{r7}
 2236              	.LCFI104:
 2237              		.cfi_def_cfa_offset 4
 2238              		.cfi_offset 7, -4
 2239 0ad2 85B0     		sub	sp, sp, #20
 2240              	.LCFI105:
 2241              		.cfi_def_cfa_offset 24
 2242 0ad4 00AF     		add	r7, sp, #0
 2243              	.LCFI106:
 2244              		.cfi_def_cfa_register 7
 2245 0ad6 7860     		str	r0, [r7, #4]
 2246 0ad8 0B46     		mov	r3, r1
 2247 0ada 7B80     		strh	r3, [r7, #2]	@ movhi
1291:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint8_t itmask = 0;
 2248              		.loc 1 1291 0
 2249 0adc 4FF00003 		mov	r3, #0
 2250 0ae0 FB73     		strb	r3, [r7, #15]
1292:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
1293:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1294:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_IT(ADC_IT));
1295:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get the ADC IT index */
1296:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   itmask = (uint8_t)(ADC_IT >> 8);
 2251              		.loc 1 1296 0
 2252 0ae2 7B88     		ldrh	r3, [r7, #2]
 2253 0ae4 4FEA1323 		lsr	r3, r3, #8
 2254 0ae8 9BB2     		uxth	r3, r3
 2255 0aea FB73     		strb	r3, [r7, #15]
1297:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Clear the selected ADC interrupt pending bits */
1298:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->SR = ~(uint32_t)itmask;
 2256              		.loc 1 1298 0
 2257 0aec FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2258 0aee 6FEA0302 		mvn	r2, r3
 2259 0af2 7B68     		ldr	r3, [r7, #4]
 2260 0af4 1A60     		str	r2, [r3, #0]
1299:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 2261              		.loc 1 1299 0
 2262 0af6 07F11407 		add	r7, r7, #20
 2263 0afa BD46     		mov	sp, r7
 2264 0afc 80BC     		pop	{r7}
 2265 0afe 7047     		bx	lr
 2266              		.cfi_endproc
 2267              	.LFE90:
 2269              	.Letext0:
 2270              		.file 2 "c:\\program files (x86)\\codesourcery\\sourcery_codebench_lite_for_arm_eabi\\bin\\../lib/
 2271              		.file 3 "D:\\EclipseIndigo\\workspace\\xelo\\src/stm32f10x.h"
 2272              		.file 4 "D:\\EclipseIndigo\\workspace\\xelo\\Libraries\\STM32F10x_StdPeriph_Driver\\inc/stm32f10x_
 2273              		.file 5 "D:\\EclipseIndigo\\workspace\\xelo\\Libraries\\CMSIS\\Include/core_cm3.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f10x_adc.c
C:\Users\THANGN~1\AppData\Local\Temp\ccS3VFth.s:18     .text:00000000 $t
C:\Users\THANGN~1\AppData\Local\Temp\ccS3VFth.s:23     .text:00000000 ADC_DeInit
C:\Users\THANGN~1\AppData\Local\Temp\ccS3VFth.s:93     .text:00000074 $d
C:\Users\THANGN~1\AppData\Local\Temp\ccS3VFth.s:99     .text:00000080 $t
C:\Users\THANGN~1\AppData\Local\Temp\ccS3VFth.s:104    .text:00000080 ADC_Init
C:\Users\THANGN~1\AppData\Local\Temp\ccS3VFth.s:214    .text:0000012c $d
C:\Users\THANGN~1\AppData\Local\Temp\ccS3VFth.s:218    .text:00000130 $t
C:\Users\THANGN~1\AppData\Local\Temp\ccS3VFth.s:223    .text:00000130 ADC_StructInit
C:\Users\THANGN~1\AppData\Local\Temp\ccS3VFth.s:278    .text:00000174 ADC_Cmd
C:\Users\THANGN~1\AppData\Local\Temp\ccS3VFth.s:330    .text:000001ac ADC_DMACmd
C:\Users\THANGN~1\AppData\Local\Temp\ccS3VFth.s:382    .text:000001e4 ADC_ITConfig
C:\Users\THANGN~1\AppData\Local\Temp\ccS3VFth.s:445    .text:0000022c ADC_ResetCalibration
C:\Users\THANGN~1\AppData\Local\Temp\ccS3VFth.s:482    .text:0000024c ADC_GetResetCalibrationStatus
C:\Users\THANGN~1\AppData\Local\Temp\ccS3VFth.s:534    .text:00000284 ADC_StartCalibration
C:\Users\THANGN~1\AppData\Local\Temp\ccS3VFth.s:571    .text:000002a4 ADC_GetCalibrationStatus
C:\Users\THANGN~1\AppData\Local\Temp\ccS3VFth.s:623    .text:000002dc ADC_SoftwareStartConvCmd
C:\Users\THANGN~1\AppData\Local\Temp\ccS3VFth.s:675    .text:00000314 ADC_GetSoftwareStartConvStatus
C:\Users\THANGN~1\AppData\Local\Temp\ccS3VFth.s:727    .text:0000034c ADC_DiscModeChannelCountConfig
C:\Users\THANGN~1\AppData\Local\Temp\ccS3VFth.s:788    .text:00000398 ADC_DiscModeCmd
C:\Users\THANGN~1\AppData\Local\Temp\ccS3VFth.s:840    .text:000003d0 ADC_RegularChannelConfig
C:\Users\THANGN~1\AppData\Local\Temp\ccS3VFth.s:1082   .text:0000058c ADC_ExternalTrigConvCmd
C:\Users\THANGN~1\AppData\Local\Temp\ccS3VFth.s:1134   .text:000005c4 ADC_GetConversionValue
C:\Users\THANGN~1\AppData\Local\Temp\ccS3VFth.s:1170   .text:000005e0 ADC_GetDualModeConversionValue
C:\Users\THANGN~1\AppData\Local\Temp\ccS3VFth.s:1195   .text:000005f0 $d
C:\Users\THANGN~1\AppData\Local\Temp\ccS3VFth.s:1199   .text:000005f4 $t
C:\Users\THANGN~1\AppData\Local\Temp\ccS3VFth.s:1204   .text:000005f4 ADC_AutoInjectedConvCmd
C:\Users\THANGN~1\AppData\Local\Temp\ccS3VFth.s:1256   .text:0000062c ADC_InjectedDiscModeCmd
C:\Users\THANGN~1\AppData\Local\Temp\ccS3VFth.s:1308   .text:00000664 ADC_ExternalTrigInjectedConvConfig
C:\Users\THANGN~1\AppData\Local\Temp\ccS3VFth.s:1360   .text:0000069c ADC_ExternalTrigInjectedConvCmd
C:\Users\THANGN~1\AppData\Local\Temp\ccS3VFth.s:1412   .text:000006d4 ADC_SoftwareStartInjectedConvCmd
C:\Users\THANGN~1\AppData\Local\Temp\ccS3VFth.s:1464   .text:0000070c ADC_GetSoftwareStartInjectedConvCmdStatus
C:\Users\THANGN~1\AppData\Local\Temp\ccS3VFth.s:1516   .text:00000744 ADC_InjectedChannelConfig
C:\Users\THANGN~1\AppData\Local\Temp\ccS3VFth.s:1694   .text:00000888 ADC_InjectedSequencerLengthConfig
C:\Users\THANGN~1\AppData\Local\Temp\ccS3VFth.s:1755   .text:000008d4 ADC_SetInjectedOffset
C:\Users\THANGN~1\AppData\Local\Temp\ccS3VFth.s:1805   .text:00000908 ADC_GetInjectedConversionValue
C:\Users\THANGN~1\AppData\Local\Temp\ccS3VFth.s:1855   .text:0000093c ADC_AnalogWatchdogCmd
C:\Users\THANGN~1\AppData\Local\Temp\ccS3VFth.s:1908   .text:00000978 ADC_AnalogWatchdogThresholdsConfig
C:\Users\THANGN~1\AppData\Local\Temp\ccS3VFth.s:1951   .text:000009a0 ADC_AnalogWatchdogSingleChannelConfig
C:\Users\THANGN~1\AppData\Local\Temp\ccS3VFth.s:2004   .text:000009d8 ADC_TempSensorVrefintCmd
C:\Users\THANGN~1\AppData\Local\Temp\ccS3VFth.s:2050   .text:00000a0c $d
C:\Users\THANGN~1\AppData\Local\Temp\ccS3VFth.s:2054   .text:00000a10 $t
C:\Users\THANGN~1\AppData\Local\Temp\ccS3VFth.s:2059   .text:00000a10 ADC_GetFlagStatus
C:\Users\THANGN~1\AppData\Local\Temp\ccS3VFth.s:2114   .text:00000a4c ADC_ClearFlag
C:\Users\THANGN~1\AppData\Local\Temp\ccS3VFth.s:2152   .text:00000a6c ADC_GetITStatus
C:\Users\THANGN~1\AppData\Local\Temp\ccS3VFth.s:2228   .text:00000ad0 ADC_ClearITPendingBit
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.6e5f3786b89b666b3dcc7c4c84d9d480
                           .group:00000000 wm4.stm32f10x.h.57.69ab29c83f735418a543aa508b559235
                           .group:00000000 wm4.core_cm3.h.32.49180ccb4d36cabd2d7016d2a51d91ae
                           .group:00000000 wm4.stdint.h.10.90b695f550ca6cc3fb08fa83baf01e05
                           .group:00000000 wm4.core_cmInstr.h.25.f50f886f2edf670cf199b35fd96f5c91
                           .group:00000000 wm4.core_cm3.h.130.36d879c1aefb6e578e399a5de749a503
                           .group:00000000 wm4.stm32f10x.h.532.b2b0c08e77686a45dbc3252d064cb2e1
                           .group:00000000 wm4.stm32f10x_bkp.h.64.07c104f22a887098a9ccb01471e84bcc
                           .group:00000000 wm4.stm32f10x_can.h.31.b14273b95de79d8fbb020ba042473fb1
                           .group:00000000 wm4.stm32f10x_cec.h.31.29c77e36bfe4567e85f26cdcc60def64
                           .group:00000000 wm4.stm32f10x_dac.h.31.116c27cadc3b4ee8aa44ed11b14b64ae
                           .group:00000000 wm4.stm32f10x_dbgmcu.h.31.45f176e9b7a15051b8c69cb2700c78b8
                           .group:00000000 wm4.stm32f10x_dma.h.31.ef16218235edc52b414c0353f44b4bf0
                           .group:00000000 wm4.stm32f10x_exti.h.31.b25bcb4f1a2daad39d2d7dfa4e901646
                           .group:00000000 wm4.stm32f10x_flash.h.31.0203bc95b65c5396b67991e07a675efb
                           .group:00000000 wm4.stm32f10x_fsmc.h.31.a761d459aa046c2769a99b93e8763ba0
                           .group:00000000 wm4.stm32f10x_gpio.h.31.0a32659dbac1fc1055c7cbdc248963be
                           .group:00000000 wm4.stm32f10x_i2c.h.31.93d7dc2d477856f119d957730d4c6f1c
                           .group:00000000 wm4.stm32f10x_iwdg.h.31.959ae9b7e1d603f1e5ae6468c0fc1624
                           .group:00000000 wm4.stm32f10x_pwr.h.31.9168b6921e0cf03b467c7ed90861c701
                           .group:00000000 wm4.stm32f10x_rcc.h.31.2ee3219a25ef4ced658f2fe9d8cd94aa
                           .group:00000000 wm4.stm32f10x_rtc.h.31.00ba78fc0dbb06b6e6783a1e7fccf5a0
                           .group:00000000 wm4.stm32f10x_sdio.h.31.37dab89d08b2364a3dfaace444dec7c3
                           .group:00000000 wm4.stm32f10x_spi.h.31.d2f6e4626887cabe8c98f3a185590a36
                           .group:00000000 wm4.stm32f10x_tim.h.31.6c06f7f26e0864f9cd59597f46ca2c7c
                           .group:00000000 wm4.stm32f10x_usart.h.31.28d75d6af05cefbbfa00cf30a7c8a335
                           .group:00000000 wm4.stm32f10x_wwdg.h.31.4504f930b88ade4f56d1e3f2a11c098b
                           .group:00000000 wm4.misc.h.31.a89fba2040036f6f8c835a78a213e0cd
                           .group:00000000 wm4.stm32f10x.h.8356.9fd2fa84655112ac7dfc5c88beeb383d
                           .group:00000000 wm4.stm32f10x_adc.h.89.9f2b285fa0070185d48a05b61a05798c

UNDEFINED SYMBOLS
RCC_APB2PeriphResetCmd
